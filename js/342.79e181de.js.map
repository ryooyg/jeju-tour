{"version":3,"file":"js/342.79e181de.js","mappings":"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","sources":["webpack://jeju-tour/./src/components/Header.vue","webpack://jeju-tour/./src/components/Header.vue?801b","webpack://jeju-tour/./src/views/HomeView.vue","webpack://jeju-tour/./src/components/KakaoMap.vue","webpack://jeju-tour/./src/components/KakaoMap.vue?05cf","webpack://jeju-tour/./src/components/NaverMap.vue","webpack://jeju-tour/./src/components/NaverMap.vue?cd4b","webpack://jeju-tour/./src/components/GoogleMap.vue","webpack://jeju-tour/../node_modules/tslib/tslib.es6.js","webpack://jeju-tour/../node_modules/fast-deep-equal/index.js","webpack://jeju-tour/../../src/index.ts","webpack://jeju-tour/./src/components/GoogleMap.vue?751e","webpack://jeju-tour/./src/components/OpenLayerMap.vue","webpack://jeju-tour/./src/components/OpenLayerMap.vue?c24e","webpack://jeju-tour/./src/views/HomeView.vue?1da1"],"sourcesContent":["<template>\r\n    <div class=\"fheader\">        \r\n        <b-card title=\"Card Title\" no-body>\r\n            <b-card-header header-tag=\"nav\">\r\n                <b-nav align=\"center\">\r\n                    <b-button pill size=\"sm\" variant=\"success\" to=\"/userinfo\" v-if=\"!homeDisplay\">사용자정보</b-button>\r\n                    <b-button pill size=\"sm\" variant=\"success\" to=\"/admin\" v-if=\"this.getAuth===true && !homeDisplay\">권한설정</b-button>\r\n                    <b-button size=\"sm\" variant=\"success\" to=\"/home\" v-if=\"homeDisplay\">홈</b-button>\r\n                    <b-button size=\"sm\" variant=\"danger\" @click=\"this.signOut\" v-if=\"!homeDisplay\">로그아웃</b-button>\r\n                </b-nav>\r\n            </b-card-header>\r\n            <!-- <b-card-body v-if=\"this.getAuth===true\">\r\n                <b-card-text> 모든 권한 관리자인 [ {{this.getUserName}} ]님 환영합니다.</b-card-text>\r\n            </b-card-body>\r\n            <b-card-body v-if=\"this.getAuth===false\">\r\n                <b-card-text> {{this.getUserName}}님 환영합니다. </b-card-text>\r\n            </b-card-body> -->\r\n\r\n        </b-card>\r\n            \r\n        <!-- <b-nav align=\"center\">\r\n            <b-nav-text> {{this.getUserName}}님 환영합니다. </b-nav-text>\r\n            <b-button size=\"sm\" variant=\"danger\" @click=\"this.signOut\">로그아웃</b-button>\r\n            <b-button pill size=\"sm\" variant=\"success\" to=\"/ticketcount\" v-if=\"this.getAuth===true\">당일식수</b-button>\r\n            <b-button pill size=\"sm\" variant=\"success\" to=\"/userinfo\" v-if=\"this.getAuth===true\">사용자설정</b-button>\r\n            <b-nav-text>계정 : {{this.getEmail}}</b-nav-text>\r\n            <b-nav-item to=\"/ticketcount\" v-if=\"this.getAuth>=1\">당일식수</b-nav-item>\r\n            <b-button @click=\"this.signOut\" size=\"sm\" variant=\"danger\">로그아웃</b-button>            \r\n        </b-nav>         -->\r\n    </div>    \r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    computed: {\r\n        // getPhoto() {\r\n        // return this.$store.state.auth.user.photoURL;\r\n        // },\r\n        getAuth() {\r\n            return this.$store.state.auth.user.authority;\r\n        },\r\n        getUserName() {\r\n        return this.$store.state.auth.user.username;\r\n        },\r\n        getEmail() {\r\n        return this.$store.state.auth.user.email;\r\n        },\r\n    },\r\n    methods: {\r\n        signOut() {\r\n        this.$store.dispatch(\"signOut\");\r\n        },\r\n    },\r\n    props:{\r\n        homeDisplay: Boolean,\r\n    }    \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.fheader {\r\n    padding: 5px;\r\n}\r\n</style>","import { render } from \"./Header.vue?vue&type=template&id=1f45801a&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=1f45801a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f45801a\"]])\n\nexport default __exports__","<template>\r\n    <Header :homeDisplay=\"this.homeDisplay\" />\r\n    <div class=\"main_display\">        \r\n        <b-button pill variant=\"primary\" @click=\"changeMap\">{{this.nextmap}}으로 변경</b-button>            \r\n        <div class=\"map_display\">        \r\n            <MyKakaoMap     v-if=\"this.mapindex==0\"/> \r\n            <MyNaverMap     v-if=\"this.mapindex==1\"/>\r\n            <MyOpenLayerMap v-if=\"this.mapindex==2\"/>\r\n            <MyGoogleMap    v-if=\"this.mapindex==3\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {ref} from 'vue';\r\nimport Header from \"@/components/Header.vue\";\r\nconst homeDisplay = ref(false);\r\nimport MyKakaoMap from \"@/components/KakaoMap\";\r\nimport MyNaverMap from \"@/components/NaverMap\";\r\nimport MyGoogleMap from \"@/components/GoogleMap\";\r\nimport MyOpenLayerMap from \"@/components/OpenLayerMap\"\r\n\r\n// import oleum from \"../assets/jeju_oleum.json\"\r\n// import olle from \"../assets/jeju_olle_trail.json\"\r\n// import halla from \"../assets/jeju_halla_trail.json\"\r\n// import hiking from \"../assets/jeju_hiking_total.json\"\r\n\r\n// import { ref } from 'vue'\r\n// import { useElementSize } from '@vueuse/core'\r\n\r\n// var init_height = '380px';\r\n// var init_width = '350px'\r\n\r\nexport default{\r\n    name: \"HomeView\",\r\n\r\n    components: {\r\n        Header,\r\n        MyKakaoMap,\r\n        MyNaverMap,\r\n        MyGoogleMap,\r\n        MyOpenLayerMap,\r\n    },\r\n\r\n    data() {\r\n        return{\r\n            homeDisplay:homeDisplay,\r\n            mapindex: 0,\r\n            nextmap:'네이버맵',\r\n            // mapindex: 0,\r\n            // nextmap:'네이버맵',\r\n            // height: init_height,\r\n            // width: init_width,\r\n            // oleum_data: oleum,\r\n            // olle_data: olle,\r\n            // halla_data: halla,\r\n            // hiking_data: hiking,\r\n        }\r\n    },\r\n\r\n    methods:{\r\n\r\n        changeMap() {            \r\n            \r\n            this.mapindex++;           \r\n            \r\n            if (this.mapindex==0) { this.nextmap='네이버맵'}\r\n            if (this.mapindex==1) { this.nextmap='오픈맵'}\r\n            if (this.mapindex==2) { this.nextmap='구글맵'}\r\n            if (this.mapindex==3) { this.nextmap='카카오맵'}\r\n            \r\n            if (this.mapindex > 3) {\r\n                this.mapindex=0;\r\n                this.nextmap='네이버맵';\r\n            }\r\n        },\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.main_display {\r\n    padding: 5px;\r\n}\r\n.map_display {\r\n    padding-top : 3px;\r\n}\r\n</style>\r\n\r\n// .container {\r\n//     padding-top: 5px;\r\n//     background-color: white;\r\n//     max-height: 100%;\r\n//     max-width: 100%;\r\n// }\r\n","<template>\r\n    <div id=\"map\"></div>\r\n    <div class=\"bot1\">\r\n        <b-button pill variant=\"primary\" @click=\"displayOleum\">오름</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayOlle\">제주올레</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHalla\">한라산 둘레길</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHiking\">등산로</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayzpt\">제로포인트루트</b-button>\r\n    </div>\r\n    <div class=\"bot2\">\r\n        <b-button pill variant=\"success\" @click=\"displayCafe(true)\">제주카페</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayRest(true)\">제주식당</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayHotel(true)\">제주숙박</b-button>\r\n    </div>    \r\n\r\n</template>\r\n\r\n<script>\r\nimport { toRaw } from \"vue\";\r\nimport { ref } from 'vue';\r\n\r\nimport oleum_data from \"../assets/jeju_oleum.json\"\r\nimport olle_data from \"../assets/jeju_olle_trail.json\"\r\nimport halla_data from \"../assets/jeju_halla_trail.json\"\r\nimport hiking_data from \"../assets/jeju_hiking_total.json\"\r\nimport zpt_data from \"../assets/jeju_zpt.json\"\r\n\r\nimport jeju_rest_all_data from \"../assets/jeju_rest_all.json\"\r\nimport jeju_cafe_all_data from \"../assets/jeju_cafe_all.json\"\r\nimport hotel_all_data from \"../assets/jeju_hotel_all.json\"\r\n\r\nvar apikey= ref('');\r\n\r\nvar customOverlay=({});\r\nvar infoWindow=({});\r\n\r\nvar cataindex=0;\r\nvar hallaIndex=true;\r\nvar halla_polylines=[];\r\nvar olleIndex=true;\r\nvar olle_polylines=[];\r\nvar hikingIndex=true;\r\nvar hike_polylines=[];\r\nvar zptIndex=true;\r\nvar zpt_polylines=[];\r\nvar oleumIndex=true;\r\nvar oleum_circles=[];\r\n\r\nvar jejucafeIndex=true;\r\nvar jejucafeMarkers=[];\r\nvar seogwipocafeIndex=true;\r\nvar seogwipocafeMarkers=[];\r\nvar cafeIndex = true;\r\n\r\nvar jejurestIndex=true;\r\nvar jejurestMarkers=[];\r\nvar seogwiporestIndex=true;\r\nvar seogwiporestMarkers=[];\r\nvar restIndex = true;\r\n\r\nvar jejuhotelIndex=true;\r\nvar jejuhotelMarkers=[];\r\nvar seogwipohotelIndex=true;\r\nvar seogwipohotelMarkers=[];\r\nvar hotelIndex= true;\r\n\r\nvar changeMaptype;\r\nvar currentTypeId;\r\n\r\nexport default {\r\n    name: \"KakaoMap\",\r\n\r\n    data() {\r\n        return {\r\n            // jejusi_index:jejusi_index,\r\n            // seogwiposi_index:seogwiposi_index,\r\n            // my_btns:[\r\n            //     { caption: '제주카페', state:false, func : this.displayCafe(true)},\r\n            //     { caption: '제주식당', state:true , func : this.displayRest(true)},\r\n            //     { caption: '제주숙박', state:false, func : this.displayHotel(true)},\r\n            // ]                        \r\n        };\r\n    },\r\n\r\n    created() {\r\n        apikey = process.env.VUE_APP_KAKAOMAP_API_KEY;        \r\n        // console.log('api_key ', apikey);\r\n    },\r\n\r\n    mounted() {\r\n        if (!window.kakao || !window.kakao.maps) {            \r\n            const script = document.createElement(\"script\");\r\n            script.onload = () => kakao.maps.load(this.initMap);\r\n            script.src =\"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=\"+apikey+'&libraries=services';\r\n            document.head.appendChild(script);\r\n        } else {\r\n            this.initMap();            \r\n        }            \r\n    },\r\n\r\n    methods: {\r\n\r\n        initMap() {\r\n\r\n            const container = document.getElementById(\"map\");           \r\n            // container.style.width = `${this.width}`;\r\n            // container.style.height = `${this.height}`;            \r\n            const options = {\r\n                center: new kakao.maps.LatLng(33.38, 126.58),\r\n                level: 10,\r\n            };\r\n            this.map = new kakao.maps.Map(container, options), \r\n            customOverlay = new kakao.maps.CustomOverlay({}),\r\n            infoWindow = new kakao.maps.InfoWindow({});\r\n            this.map.relayout();\r\n\r\n            var mapTypeControl = new kakao.maps.MapTypeControl();\r\n            this.map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n            var zoomControl = new kakao.maps.ZoomControl();\r\n            this.map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n\r\n            var content = document.createElement('div');\r\n            content.className = 'modes';\r\n\r\n            if ( container.clientWidth > 340 ) {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                '<button id=\"terrain\">지형</button>\\n' +\r\n                '<button id=\"traffic\">교통</button>\\n' +\r\n                '<button id=\"roadview\">도로</button>\\n' +\r\n                '<button id=\"use_district\">지적</button>\\n' +\r\n                '<button id=\"jejusi\">제주시</button>\\n' +\r\n                '<button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n';\r\n            } else {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                '<button id=\"terrain\">지형</button>\\n' +\r\n                '<button id=\"traffic\">교통</button>\\n' +\r\n                '<div>\\n'+\r\n                '   <button id=\"roadview\">도로</button>\\n' +\r\n                '   <button id=\"use_district\">지적</button>\\n' +\r\n                '</div>\\n'+\r\n                '<div>\\n'+\r\n                '   <button id=\"jejusi\">제주시</button>\\n' +\r\n                '   <button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n'+\r\n                '</div>\\n';\r\n            }            \r\n\r\n            container.appendChild(content);              \r\n            // console.log(document);\r\n\r\n            // const hybrid_btn = document.querySelector('#hybrid');  \r\n            // hybrid_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('hybrid')\r\n            // });\r\n\r\n            const terrain_btn = document.querySelector('#terrain');  \r\n            terrain_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('terrain')\r\n            });\r\n\r\n            const traffic_btn = document.querySelector('#traffic');  \r\n            traffic_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('traffic')\r\n            });\r\n\r\n            const roadview_btn = document.querySelector('#roadview');  \r\n            roadview_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('roadview')\r\n            });\r\n\r\n            const use_district_btn = document.querySelector('#use_district');  \r\n            use_district_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('use_district')\r\n            });\r\n\r\n            const jejusi_btn = document.querySelector('#jejusi');  \r\n            jejusi_btn.addEventListener('click', (event) => {\r\n                if ( !cafeIndex ) {\r\n                    jejucafeIndex = jejucafeIndex ? false : true\r\n                    seogwipocafeIndex = false\r\n                    cafeIndex = false                                \r\n                    this.displayCafe(false)\r\n                }\r\n\r\n                if ( !restIndex ) {\r\n                    jejurestIndex = jejurestIndex ? false : true\r\n                    seogwiporestIndex = false\r\n                    restIndex = false                                \r\n                    this.displayRest(false)\r\n                }\r\n\r\n                if ( !hotelIndex ) {\r\n                    jejuhotelIndex = jejuhotelIndex ? false : true\r\n                    console.log('jejuhotelIndex', jejuhotelIndex)\r\n                    seogwipohotelIndex = false\r\n                    hotelIndex = false                                \r\n                    this.displayHotel(false)\r\n                }               \r\n                \r\n            });\r\n\r\n            const seogwiposi_btn = document.querySelector('#seogwiposi');  \r\n            seogwiposi_btn.addEventListener('click', (event) => {\r\n                \r\n                if ( !cafeIndex ) {\r\n                    seogwipocafeIndex = seogwipocafeIndex ? false : true\r\n                    cafeIndex = false\r\n                    jejucafeIndex = false\r\n                    this.displayCafe(false)\r\n                } \r\n                if ( !restIndex ) {\r\n                    seogwiporestIndex = seogwiporestIndex ? false : true\r\n                    restIndex = false\r\n                    jejurestIndex = false\r\n                    this.displayRest(false)\r\n                } \r\n                if ( !hotelIndex ) {\r\n                    seogwipohotelIndex = seogwipohotelIndex ? false : true\r\n                    hotelIndex = false\r\n                    jejuhotelIndex = false\r\n                    this.displayHotel(false)\r\n                }               \r\n                \r\n            });\r\n\r\n            // console.log(div);\r\n            // // toRaw(this.map).relayout();            \r\n            // this.make_cafe_data()\r\n            // this.make_rest_data()\r\n            // this.make_hotel_data()\r\n        },\r\n\r\n        make_cafe_data() {\r\n            cataindex=10;\r\n            let features = jeju_cafe_all_data.features;\r\n            features.forEach( element => {\r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new kakao.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;                        \r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_rest_data() {\r\n            cataindex=11;\r\n            let features = jeju_rest_all_data.features;\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new kakao.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_hotel_data() {\r\n            cataindex=12;\r\n            let features = hotel_all_data.features;            \r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new kakao.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);\r\n            });\r\n\r\n        },\r\n\r\n        citydrawingMarker(cataindex, map, position, name, my_address, my_link, phone, city) {\r\n\r\n            var imageSrc = '';\r\n            \r\n            if (cataindex == 10) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_cafe.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_cafe.png';\r\n                }                \r\n            } else if (cataindex == 11) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_rest.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_rest.png';\r\n                }                \r\n            } else if (cataindex ==12) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_hotel.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_hotel.png';\r\n                }\r\n            }\r\n\r\n            var imageSize = new kakao.maps.Size(16, 17);\r\n            var imageOption = {offset: new kakao.maps.Point(8, 9)};            \r\n            var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption)\r\n            var marker = new kakao.maps.Marker({\r\n                position : position,\r\n                clickable: true,\r\n                image : markerImage,\r\n                title : name,\r\n            });\r\n\r\n\r\n            // var content =  '<div style=\"width:250px; height: 150px; padding: 5px;\">';\r\n            //     content += '    <a href='+my_link+' target=\"_blank\"><strong> [ 오름명 : '+name+']</strong></a>';\r\n            //     content += '    <div> 주소 : '+my_address+' </div>';\r\n            //     content += '</div>';\r\n            \r\n            // var content = '<div style=\"width:250px; height: 100px; padding: 5px;\"> <div></div>' +\r\n            var content = '<div class=\"placeinfo\">'+\r\n                '   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n                content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n                content += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n                content += '<div class=\"after\"></div>';\r\n\r\n            // console.log(content);\r\n\r\n            var iwRemveable = true;\r\n            var infowindow = new kakao.maps.InfoWindow({\r\n                content: content,\r\n                removable: iwRemveable,\r\n            });            \r\n            new kakao.maps.event.addListener(marker, 'click', function() {                                  \r\n                infowindow.open(map, marker);\r\n            })\r\n\r\n            if (cataindex ==10) {\r\n                if (city === '제주시') jejucafeMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipocafeMarkers.push(marker)\r\n            } else if (cataindex ==11) {\r\n                if (city === '제주시') jejurestMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwiporestMarkers.push(marker)\r\n            } else if (cataindex ==12) {\r\n                if (city === '제주시') jejuhotelMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipohotelMarkers.push(marker)\r\n            }            \r\n        },\r\n\r\n        displayCafe(main_index){\r\n            // console.log(' cafeIndex ', cafeIndex, 'jejucafelIndex ',jejucafeIndex, 'seogwipocafeIndex ', seogwipocafeIndex  )\r\n            if(cafeIndex){\r\n                this.make_cafe_data()                \r\n                if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                cafeIndex = false\r\n                jejucafeIndex = false\r\n                seogwipocafeIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejucafeMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                    cafeIndex = true\r\n                    jejucafeIndex = true\r\n                    seogwipocafeIndex = true\r\n                } else {\r\n                    if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejucafeMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayRest(main_index){\r\n            // console.log(' restIndex ', restIndex, 'jejurestIndex ',jejurestIndex, 'seogwiporestIndex ', seogwiporestIndex  )\r\n            if(restIndex){\r\n                this.make_rest_data()                \r\n                if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                restIndex = false\r\n                jejurestIndex = false\r\n                seogwiporestIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejurestMarkers.map((cur) => cur.setMap(null))\r\n                    seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                    restIndex = true\r\n                    jejurestIndex = true\r\n                    seogwiporestIndex = true\r\n                } else {\r\n                    if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejurestMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayHotel(main_index){\r\n            // console.log(' hotelIndex ', hotelIndex, 'jejuhotelIndex ',jejuhotelIndex, 'seogwipohotelIndex ', seogwipohotelIndex  )\r\n            if(hotelIndex){\r\n                this.make_hotel_data()                \r\n                if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                hotelIndex = false\r\n                jejuhotelIndex = false\r\n                seogwipohotelIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejuhotelMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                    hotelIndex = true\r\n                    jejuhotelIndex = true\r\n                    seogwipohotelIndex = true\r\n                } else {\r\n                    if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejuhotelMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },        \r\n\r\n        onSelectMap: function(maptype) {\r\n            if(maptype ==='roadmap') {\r\n                if (currentTypeId) {\r\n                    this.map.removeOverlayMapTypeId(currentTypeId);    \r\n                }\r\n                this.map.setMapTypeId(kakao.maps.MapTypeId.ROADMAP)\r\n            } \r\n            // else if (maptype ==='hybrid') {\r\n            //     this.map.setMapTypeId(kakao.maps.MapTypeId.HYBRID) \r\n            // } \r\n            else {\r\n                \r\n                if (maptype === 'traffic') {\r\n                    changeMaptype = kakao.maps.MapTypeId.TRAFFIC;\r\n                } else if (maptype === 'roadview') {\r\n                    changeMaptype = kakao.maps.MapTypeId.ROADVIEW;\r\n                } else if (maptype === 'terrain') {\r\n                    changeMaptype = kakao.maps.MapTypeId.TERRAIN;\r\n                } else if (maptype === 'use_district') {\r\n                    changeMaptype = kakao.maps.MapTypeId.USE_DISTRICT;           \r\n                }\r\n                if (currentTypeId) {\r\n                    this.map.removeOverlayMapTypeId(currentTypeId);    \r\n                }\r\n                this.map.addOverlayMapTypeId(changeMaptype);\r\n                currentTypeId = changeMaptype;\r\n            }\r\n            \r\n            // else if (maptype ==='terrain') {\r\n            //     this.map.addOverlayMapTypeId(kakao.maps.MapTypeId.TERRAIN)\r\n            //     this.map.removeOverlayMapTypeId(kakao.maps.MapTypeId.TRAFFIC) \r\n            // } else if (maptype ==='traffic') {\r\n            //     // const container = document.getElementById(\"map\"); \r\n            //     // const now_center = this.map.getCenter()\r\n            //     // const options = {\r\n            //     //     center: new kakao.maps.LatLng(now_center.Ma, now_center.La),\r\n            //     //     level: 5,\r\n            //     // };\r\n            //     // this.map = new kakao.maps.Map(container, options) \r\n            //     this.map.addOverlayMapTypeId(kakao.maps.MapTypeId.TRAFFIC)\r\n            // }            \r\n        },\r\n\r\n        displayOleum() {\r\n\r\n            cataindex=1;\r\n            if(oleumIndex) {\r\n\r\n                if(oleum_circles.length <=0 ) {\r\n                    let features = oleum_data.features;\r\n                    features.forEach( element => {\r\n                        let position = new kakao.maps.LatLng(element.geometry.coordinates[1], element.geometry.coordinates[0]);\r\n                        let dia = element.properties['반경']; \r\n                        let name = element.properties['오름명']\r\n                        this.drawingCircle(cataindex, toRaw(this.map), position, dia, name);                        \r\n                    });                    \r\n                } else {\r\n                    oleum_circles.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                oleumIndex = false;\r\n            } else {\r\n                oleum_circles.map( (cur) => cur.setMap(null));\r\n                oleumIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayOlle() {\r\n\r\n            cataindex=1;\r\n            if(olleIndex) {\r\n                if( olle_polylines.length <=0 ) {\r\n                    let features = olle_data.features;            \r\n                    features.forEach( element => {      \r\n                        let name = element.properties.name;             \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex,toRaw(this.map), path, name);\r\n                        });\r\n                    });\r\n                } else {\r\n                    olle_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }                \r\n                olleIndex = false;\r\n            } else {\r\n                olle_polylines.map( (cur) => cur.setMap(null));\r\n                olleIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHalla() {\r\n\r\n            cataindex=2; \r\n            if(hallaIndex) {\r\n                if ( halla_polylines.length <=0 ) {\r\n                    let features = halla_data.features;            \r\n                    features.forEach( element => { \r\n                        let name = element.properties.name;  \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);                     \r\n                        });\r\n                    });\r\n                } else {\r\n                    halla_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                hallaIndex = false;\r\n            } else {\r\n                halla_polylines.map( (cur) => cur.setMap(null));\r\n                hallaIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayHiking() {\r\n\r\n            cataindex=3;\r\n            if(hikingIndex){\r\n                if ( hike_polylines.length <=0 ) {                    \r\n                    let features = hiking_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = '등산로 '+ element.properties.PMNTN_NM;                \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                        });\r\n                    });\r\n                } else {\r\n                    hike_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                hikingIndex = false;\r\n            } else {\r\n                hike_polylines.map( (cur) => cur.setMap(null));\r\n                hikingIndex = true;\r\n            }          \r\n        },\r\n\r\n        displayzpt(){\r\n\r\n            cataindex=4;\r\n            if(zptIndex){\r\n                if ( zpt_polylines.length <=0 ) {                    \r\n                    let features = zpt_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = element.properties.name;                \r\n                        let coord = element.geometry.coordinates;\r\n\r\n                        if ( element.geometry.type=='LineString' ) {                            \r\n                            \r\n                            var path=[];                            \r\n                            coord.forEach( point => {\r\n                                let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);              \r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);\r\n\r\n                        } else if (element.geometry.type=='MultiLineString'){\r\n                            \r\n                            coord.forEach( points => {\r\n                                var path=[];\r\n                                points.forEach ( point => {\r\n                                    let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                    path.push(position);\r\n                                });\r\n                                this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                            });\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n                    zpt_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                zptIndex = false;\r\n            } else {\r\n                zpt_polylines.map( (cur) => cur.setMap(null));\r\n                zptIndex = true;\r\n            }\r\n\r\n        },\r\n\r\n        drawingCircle(cataindex, map, position, dia, name) {\r\n            \r\n            let fillrealcolor='';\r\n            let backcolor='';\r\n            \r\n            if (cataindex==1) {\r\n                fillrealcolor = '#E51D1A';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                fillrealcolor = '#00FF0F';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==3) { \r\n                fillrealcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                fillrealcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var circle = new kakao.maps.Circle({\r\n                    map: map,\r\n                    center : position,\r\n                    radius: dia,    \r\n                    strokeColor: '#5347AA',\r\n                    strokeOpacity: 0.5,\r\n                    strokeWeight: 2,\r\n                    fillColor: fillrealcolor,\r\n                    fillOpacity: 0.3,\r\n                    // 원의 중심좌표 입니다 \r\n                    // radius: 5000, // 미터 단위의 원의 반지름입니다 \r\n                    // strokeWeight: 5, // 선의 두께입니다 \r\n                    // strokeColor: '#75B8FA', // 선의 색깔입니다\r\n                    // strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    // strokeStyle: 'dashed', // 선의 스타일 입니다\r\n                    // fillColor: '#CFE7FF', // 채우기 색깔입니다\r\n                    // fillOpacity: 0.7  // 채우기 불투명도 입니다   \r\n            });           \r\n            \r\n            var infoBox = new kakao.maps.CustomOverlay({\r\n                content: name + '  [반경 '+dia+' m]',\r\n                yAnchor: 1.5,\r\n            });\r\n\r\n            new kakao.maps.event.addListener(circle, 'mouseover', function(mouseEvent) {                                  \r\n                circle.setOptions({\r\n                    fillOpacity: 0.6,\r\n                    strokeStyle: 'dashed'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            })\r\n            \r\n            new kakao.maps.event.addListener(circle, 'mousemove', function(mouseEvent) {                \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new kakao.maps.event.addListener(circle, 'mouseout', function() {                \r\n                circle.setOptions({\r\n                    fillOpacity: 0.3,\r\n                    strokeStyle: 'line'\r\n                });\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==1) {\r\n                oleum_circles.push(circle);\r\n            } \r\n            // else if (cataindex==2) {\r\n            //     halla_polylines.push(polyline);\r\n            // } else if (cataindex==3) { \r\n            //     hike_polylines.push(polyline);\r\n            // } else if (cataindex==4) { \r\n            //     zpt_polylines.push(polyline);\r\n            // }  \r\n        },\r\n\r\n        drawingPolyline(cataindex, map, path, name) {\r\n\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==1) {\r\n                realcolor = '#0004FF';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                realcolor = '#FF0000';\r\n                backcolor = '#00FF00';      \r\n            } else if (cataindex==3) { \r\n                realcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                realcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var polyline = new kakao.maps.Polyline({\r\n                map: map,\r\n                path: path, // 선을 구성하는 좌표배열 입니다\r\n                strokeWeight: 2, // 선의 두께 입니다\r\n                strokeColor: realcolor, // 선의 색깔입니다\r\n                strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid'                 \r\n            });            \r\n            \r\n            var infoBox = new kakao.maps.CustomOverlay({\r\n                content: name,\r\n                yAnchor: 1,\r\n            });\r\n\r\n            new kakao.maps.event.addListener(polyline, 'mouseover', function(mouseEvent) {                                  \r\n                polyline.setOptions({\r\n                    strokeWeight: 7,\r\n                    strokeColor: backcolor,\r\n                    strokeOpacity: 1,\r\n                    strokeStyle: 'solid'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n                // console.log('ddd ', infoBox);\r\n            })\r\n            \r\n            new kakao.maps.event.addListener(polyline, 'mousemove', function(mouseEvent) {                \r\n                // customOverlay.setPosition(mouseEvent.latLng); \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new kakao.maps.event.addListener(polyline, 'mouseout', function() {                \r\n                polyline.setOptions({\r\n                    strokeWeight: 2, // 선의 두께 입니다\r\n                    strokeColor: realcolor, // 선의 색깔입니다\r\n                    strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    strokeStyle: 'solid' \r\n                })\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==1) {\r\n                olle_polylines.push(polyline);\r\n            } else if (cataindex==2) {\r\n                halla_polylines.push(polyline);\r\n            } else if (cataindex==3) { \r\n                hike_polylines.push(polyline);\r\n            } else if (cataindex==4) { \r\n                zpt_polylines.push(polyline);\r\n            }  \r\n        },\r\n        \r\n    },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bot1 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot2 {\r\n    margin-top: 5px;\r\n}\r\n</style>\r\n\r\n<!-- MT1 대형마트\r\nCS2 편의점\r\nPS3 어린이집, 유치원\r\nSC4 학교\r\nAC5 학원\r\nPK6 주차장\r\nOL7 주유소, 충전소\r\nSW8 지하철역\r\nBK9 은행\r\nCT1 문화시설\r\nAG2 중개업소\r\nPO3 공공기관\r\nAT4 관광명소\r\nAD5 숙박\r\nFD6 음식점\r\nCE7 카페\r\nHP8 병원\r\nPM9 약국 -->\r\n","import { render } from \"./KakaoMap.vue?vue&type=template&id=2191240a&scoped=true\"\nimport script from \"./KakaoMap.vue?vue&type=script&lang=js\"\nexport * from \"./KakaoMap.vue?vue&type=script&lang=js\"\n\nimport \"./KakaoMap.vue?vue&type=style&index=0&id=2191240a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2191240a\"]])\n\nexport default __exports__","<template>\r\n\r\n    <div id=\"map\"></div>\r\n    <div class=\"bot1\">\r\n        <b-button pill variant=\"primary\" @click=\"displayOleum\">오름</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayOlle\">제주올레</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHalla\">한라산 둘레길</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHiking\">등산로</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayzpt\">제로포인트루트</b-button>\r\n    </div>\r\n    <div class=\"bot2\">\r\n        <b-button pill variant=\"success\" @click=\"displayCafe(true)\">제주카페</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayRest(true)\">제주식당</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayHotel(true)\">제주숙박</b-button>\r\n    </div>        \r\n    \r\n</template>\r\n\r\n<script>\r\nimport { toRaw } from \"vue\";\r\nimport { ref } from 'vue';\r\nvar ncpclientid= ref('');\r\n\r\nimport oleum_data from \"../assets/jeju_oleum.json\"\r\nimport olle_data from \"../assets/jeju_olle_trail.json\"\r\nimport halla_data from \"../assets/jeju_halla_trail.json\"\r\nimport hiking_data from \"../assets/jeju_hiking_total.json\"\r\nimport zpt_data from \"../assets/jeju_zpt.json\"\r\n\r\nimport jeju_rest_all_data from \"../assets/jeju_rest_all.json\"\r\nimport jeju_cafe_all_data from \"../assets/jeju_cafe_all.json\"\r\nimport hotel_all_data from \"../assets/jeju_hotel_all.json\"\r\n\r\n// var customOverlay=({});\r\n// var infoWindow=({});\r\n\r\nvar cataindex=0;\r\nvar hallaIndex=true;\r\nvar halla_polylines=[];\r\nvar olleIndex=true;\r\nvar olle_polylines=[];\r\nvar hikingIndex=true;\r\nvar hike_polylines=[];\r\nvar zptIndex=true;\r\nvar zpt_polylines=[];\r\nvar oleumIndex=true;\r\nvar oleum_circles=[];\r\n\r\nvar jejucafeIndex=true;\r\nvar jejucafeMarkers=[];\r\nvar seogwipocafeIndex=true;\r\nvar seogwipocafeMarkers=[];\r\nvar cafeIndex = true;\r\n\r\nvar jejurestIndex=true;\r\nvar jejurestMarkers=[];\r\nvar seogwiporestIndex=true;\r\nvar seogwiporestMarkers=[];\r\nvar restIndex = true;\r\n\r\nvar jejuhotelIndex=true;\r\nvar jejuhotelMarkers=[];\r\nvar seogwipohotelIndex=true;\r\nvar seogwipohotelMarkers=[];\r\nvar hotelIndex= true;\r\n\r\nvar changeMaptype;\r\nvar currentTypeId;\r\n\r\nvar changeLayer;\r\nvar currentLayer;\r\n\r\nexport default {\r\n    name: \"NaverMap\",\r\n\r\n    data() {\r\n        return {\r\n        };\r\n    },\r\n\r\n    created() {\r\n        // console.log(process.env.VUE_APP_NAVERMAP_NCPCLIENTID);\r\n        ncpclientid = process.env.VUE_APP_NAVERMAP_NCPCLIENTID;\r\n        // console.log('ncpclientid ', ncpclientid);\r\n    },\r\n\r\n    mounted() {\r\n        \r\n        if (!window.naver || !window.naver.maps) {\r\n            const script = document.createElement(\"script\");\r\n            script.src =\"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=\"+ncpclientid;\r\n            script.async = true;\r\n            script.defer = true;\r\n            script.onload = () => this.initMap();\r\n            document.head.appendChild(script);\r\n\r\n        } else {\r\n            this.initMap();\r\n        }       \r\n\r\n    },\r\n\r\n    methods: {\r\n\r\n        initMap() {\r\n\r\n            const container = document.getElementById(\"map\");           \r\n            var mapOptions = {\r\n                center: new naver.maps.LatLng(33.38, 126.58),                \r\n                zoom: 10\r\n            };\r\n            this.map = new naver.maps.Map(container, mapOptions);\r\n\r\n            this.map.setOptions(\"mapTypeControl\", true)            \r\n            this.map.setOptions(\"scaleControl\", true)\r\n            this.map.setOptions(\"zoomControlOptions\",{\r\n                style: naver.maps.ZoomControlStyle.LAGRE,\r\n                position: naver.maps.Position.RIGHT_CENTER,\r\n            })\r\n            this.map.setOptions(\"zoomControl\", true)\r\n\r\n            var content = document.createElement('div');\r\n            content.className = 'modes';\r\n\r\n            if ( container.clientWidth > 340 ) {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +                \r\n                '<button id=\"traffic\">교통</button>\\n' +\r\n                '<button id=\"bicycle\">자전거</button>\\n' +\r\n                '<button id=\"roadview\">도로</button>\\n' +\r\n                '<button id=\"use_district\">지적</button>\\n' +\r\n                '<button id=\"jejusi\">제주시</button>\\n' +\r\n                '<button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n';\r\n            } else {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                '<button id=\"traffic\">교통</button>\\n' +\r\n                '<button id=\"bicycle\">자전거</button>\\n' +\r\n                '<div>\\n'+\r\n                '   <button id=\"roadview\">도로</button>\\n' +\r\n                '   <button id=\"use_district\">지적</button>\\n' +\r\n                '</div>\\n'+\r\n                '<div>\\n'+\r\n                '   <button id=\"jejusi\">제주시</button>\\n' +\r\n                '   <button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n'+\r\n                '</div>\\n';\r\n            }            \r\n\r\n            container.appendChild(content);              \r\n            // // console.log(document);\r\n            // console.log('naver ', container)\r\n\r\n            const bicycle_btn = document.querySelector('#bicycle');  \r\n            bicycle_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('bicycle')\r\n            });\r\n\r\n            const traffic_btn = document.querySelector('#traffic');  \r\n            traffic_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('traffic')\r\n            });\r\n\r\n            const roadview_btn = document.querySelector('#roadview');  \r\n            roadview_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('roadview')\r\n            });\r\n\r\n            const use_district_btn = document.querySelector('#use_district');  \r\n            use_district_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('use_district')\r\n            });\r\n\r\n            const jejusi_btn = document.querySelector('#jejusi');  \r\n            jejusi_btn.addEventListener('click', (event) => {\r\n                if ( !cafeIndex ) {\r\n                    jejucafeIndex = jejucafeIndex ? false : true\r\n                    seogwipocafeIndex = false\r\n                    cafeIndex = false                                \r\n                    this.displayCafe(false)\r\n                }\r\n                if ( !restIndex ) {\r\n                    jejurestIndex = jejurestIndex ? false : true\r\n                    seogwiporestIndex = false\r\n                    restIndex = false                                \r\n                    this.displayRest(false)\r\n                }\r\n                if ( !hotelIndex ) {\r\n                    jejuhotelIndex = jejuhotelIndex ? false : true\r\n                    console.log('jejuhotelIndex', jejuhotelIndex)\r\n                    seogwipohotelIndex = false\r\n                    hotelIndex = false                                \r\n                    this.displayHotel(false)\r\n                }\r\n            });\r\n\r\n            const seogwiposi_btn = document.querySelector('#seogwiposi');  \r\n            seogwiposi_btn.addEventListener('click', (event) => {                \r\n                if ( !cafeIndex ) {\r\n                    seogwipocafeIndex = seogwipocafeIndex ? false : true\r\n                    cafeIndex = false\r\n                    jejucafeIndex = false\r\n                    this.displayCafe(false)\r\n                } \r\n                if ( !restIndex ) {\r\n                    seogwiporestIndex = seogwiporestIndex ? false : true\r\n                    restIndex = false\r\n                    jejurestIndex = false\r\n                    this.displayRest(false)\r\n                } \r\n                if ( !hotelIndex ) {\r\n                    seogwipohotelIndex = seogwipohotelIndex ? false : true\r\n                    hotelIndex = false\r\n                    jejuhotelIndex = false\r\n                    this.displayHotel(false)\r\n                }                \r\n            });\r\n\r\n            // console.log(div);\r\n            // // toRaw(this.map).relayout();            \r\n            // this.make_cafe_data()\r\n            // this.make_rest_data()\r\n            // this.make_hotel_data()\r\n        },\r\n        \r\n        make_cafe_data() {\r\n            cataindex=10;\r\n            let features = jeju_cafe_all_data.features;\r\n            features.forEach( element => {\r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new naver.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;                        \r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_rest_data() {\r\n            cataindex=11;\r\n            let features = jeju_rest_all_data.features;\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new naver.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_hotel_data() {\r\n            cataindex=12;\r\n            let features = hotel_all_data.features;            \r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new naver.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);\r\n            });\r\n\r\n        },\r\n\r\n        citydrawingMarker(cataindex, map, position, name, my_address, my_link, phone, city) {\r\n\r\n            var imageSrc = '';\r\n            \r\n            if (cataindex == 10) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_cafe.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_cafe.png';\r\n                }                \r\n            } else if (cataindex == 11) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_rest.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_rest.png';\r\n                }                \r\n            } else if (cataindex ==12) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_hotel.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_hotel.png';\r\n                }\r\n            }\r\n\r\n            var imageSize = new naver.maps.Size(25, 28);\r\n            var markerOptions = {\r\n                position : position,\r\n                clickable: true,\r\n                icon: {\r\n                    url: imageSrc,\r\n                    size: imageSize,\r\n                    origin: new naver.maps.Point(0, 0),\r\n                    anchor: new naver.maps.Point(13, 14),\r\n                    scaledSize: new naver.maps.Size(13, 14)\r\n                }\r\n            };\r\n\r\n            var marker = new naver.maps.Marker(markerOptions)\r\n            var content = '<div class=\"placeinfo\">'+\r\n                '   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n                content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n                content += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n                content += '<div class=\"after\"></div>';\r\n\r\n            var infowindow = new naver.maps.InfoWindow({\r\n                content: content,\r\n                // borderWidth: 0,\r\n                // disableAnchor: true,\r\n                // backgroundColor: 'transparent',\r\n                // pixelOffset: new naver.maps.Point(0, -28),\r\n                // removable: iwRemveable,\r\n            });     \r\n            \r\n            new naver.maps.Event.addListener(marker, 'click', function(e) {\r\n                if (infowindow.getMap()) {\r\n                    infowindow.close();\r\n                } else {\r\n                    infowindow.open(map, marker);\r\n                }                \r\n            })\r\n\r\n            // new naver.maps.Event.addListener(map, \"click\", function(e){\r\n            //     marker.setPosition(e.coord);\r\n            //     if(infoWindow.getMap()) {\r\n            //         infoWindow.close();\r\n            //     }\r\n            // })\r\n\r\n            if (cataindex ==10) {\r\n                if (city === '제주시') jejucafeMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipocafeMarkers.push(marker)\r\n            } else if (cataindex ==11) {\r\n                if (city === '제주시') jejurestMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwiporestMarkers.push(marker)\r\n            } else if (cataindex ==12) {\r\n                if (city === '제주시') jejuhotelMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipohotelMarkers.push(marker)\r\n            }            \r\n        },\r\n\r\n        displayCafe(main_index){\r\n            // console.log(' cafeIndex ', cafeIndex, 'jejucafelIndex ',jejucafeIndex, 'seogwipocafeIndex ', seogwipocafeIndex  )\r\n            if(cafeIndex){\r\n                this.make_cafe_data()                \r\n                if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                cafeIndex = false\r\n                jejucafeIndex = false\r\n                seogwipocafeIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejucafeMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                    cafeIndex = true\r\n                    jejucafeIndex = true\r\n                    seogwipocafeIndex = true\r\n                } else {\r\n                    if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejucafeMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n        \r\n        displayRest(main_index){\r\n            // console.log(' restIndex ', restIndex, 'jejurestIndex ',jejurestIndex, 'seogwiporestIndex ', seogwiporestIndex  )\r\n            if(restIndex){\r\n                this.make_rest_data()                \r\n                if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                restIndex = false\r\n                jejurestIndex = false\r\n                seogwiporestIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejurestMarkers.map((cur) => cur.setMap(null))\r\n                    seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                    restIndex = true\r\n                    jejurestIndex = true\r\n                    seogwiporestIndex = true\r\n                } else {\r\n                    if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejurestMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayHotel(main_index){\r\n            // console.log(' hotelIndex ', hotelIndex, 'jejuhotelIndex ',jejuhotelIndex, 'seogwipohotelIndex ', seogwipohotelIndex  )\r\n            if(hotelIndex){\r\n                this.make_hotel_data()                \r\n                if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                hotelIndex = false\r\n                jejuhotelIndex = false\r\n                seogwipohotelIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejuhotelMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                    hotelIndex = true\r\n                    jejuhotelIndex = true\r\n                    seogwipohotelIndex = true\r\n                } else {\r\n                    if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejuhotelMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },        \r\n\r\n        onSelectMap: function(maptype) {\r\n\r\n            if (maptype === 'traffic') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new naver.maps.TrafficLayer({\r\n                    interval: 300000 // 5분마다 새로고침 (최소값 5분)\r\n                });                    \r\n                changeLayer.setMap(toRaw(this.map))                    \r\n                currentLayer = changeLayer                \r\n            } else if (maptype === 'roadview') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new naver.maps.StreetLayer()\r\n                changeLayer.setMap(toRaw(this.map))\r\n                currentLayer = changeLayer\r\n            } else if (maptype === 'bicycle') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new naver.maps.BicycleLayer()\r\n                changeLayer.setMap(toRaw(this.map))\r\n                currentLayer = changeLayer\r\n            } \r\n            //\r\n            \r\n            // else if (maptype === 'terrain') {                    \r\n            //     if ( currentLayer != null ) currentLayer.setMap(null)\r\n            //     if ( this.map.getMapTypeId() === naver.maps.MapTypeId.TERRAIN) {\r\n            //         changeMaptype = naver.maps.MapTypeId.NORMAL;\r\n            //         this.map.setMapTypeId(changeMaptype);\r\n            //     } else {\r\n            //         changeMaptype = naver.maps.MapTypeId.TERRAIN;\r\n            //         this.map.setMapTypeId(changeMaptype);\r\n            //     }                    \r\n                \r\n            // } \r\n\r\n            else if (maptype === 'use_district') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new naver.maps.CadastralLayer();\r\n                changeLayer.setMap(toRaw(this.map))\r\n                currentLayer = changeLayer\r\n            }\r\n            this.map.refresh();\r\n            currentTypeId = changeMaptype;\r\n            \r\n        },\r\n\r\n        displayOleum() {\r\n\r\n            cataindex=1;\r\n            if(oleumIndex) {\r\n                if(oleum_circles.length <=0 ) {\r\n                    let features = oleum_data.features;\r\n                    features.forEach( element => {\r\n                        let position = new naver.maps.LatLng(element.geometry.coordinates[1], element.geometry.coordinates[0]);\r\n                        let dia = element.properties['반경']; \r\n                        let name = element.properties['오름명']\r\n                        this.drawingCircle(cataindex, toRaw(this.map), position, dia, name);                        \r\n                    });                    \r\n                } else {\r\n                    oleum_circles.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                oleumIndex = false;\r\n            } else {\r\n                oleum_circles.map( (cur) => cur.setMap(null));\r\n                oleumIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayOlle() {\r\n\r\n            cataindex=1;\r\n            if(olleIndex) {\r\n                if( olle_polylines.length <=0 ) {\r\n                    let features = olle_data.features;            \r\n                    features.forEach( element => {      \r\n                        let name = element.properties.name;             \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex,toRaw(this.map), path, name);\r\n                        });\r\n                    });\r\n                } else {\r\n                    olle_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }                \r\n                olleIndex = false;\r\n            } else {\r\n                olle_polylines.map( (cur) => cur.setMap(null));\r\n                olleIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHalla() {\r\n            cataindex=2; \r\n            if(hallaIndex) {\r\n                if ( halla_polylines.length <=0 ) {\r\n                    let features = halla_data.features;            \r\n                    features.forEach( element => { \r\n                        let name = element.properties.name;  \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);                     \r\n                        });\r\n                    });\r\n                } else {\r\n                    halla_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                hallaIndex = false;\r\n            } else {\r\n                halla_polylines.map( (cur) => cur.setMap(null));\r\n                hallaIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHiking() {\r\n\r\n            cataindex=3;\r\n            if(hikingIndex){\r\n                if ( hike_polylines.length <=0 ) {                    \r\n                    let features = hiking_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = '등산로 '+ element.properties.PMNTN_NM;                \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                        });\r\n                    });\r\n                } else {\r\n                    hike_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                hikingIndex = false;\r\n            } else {\r\n                hike_polylines.map( (cur) => cur.setMap(null));\r\n                hikingIndex = true;\r\n            }          \r\n        },\r\n\r\n        displayzpt(){\r\n\r\n            cataindex=4;\r\n            if(zptIndex){\r\n                if ( zpt_polylines.length <=0 ) {                    \r\n                    let features = zpt_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = element.properties.name;                \r\n                        let coord = element.geometry.coordinates;\r\n                        if ( element.geometry.type=='LineString' ) {\r\n                            var path=[];                            \r\n                            coord.forEach( point => {\r\n                                let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);              \r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);\r\n                        } else if (element.geometry.type=='MultiLineString'){                            \r\n                            coord.forEach( points => {\r\n                                var path=[];\r\n                                points.forEach ( point => {\r\n                                    let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                    path.push(position);\r\n                                });\r\n                                this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                            });\r\n                        }\r\n                    });\r\n                } else {\r\n                    zpt_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                zptIndex = false;\r\n            } else {\r\n                zpt_polylines.map( (cur) => cur.setMap(null));\r\n                zptIndex = true;\r\n            }\r\n\r\n        },\r\n\r\n        drawingCircle(cataindex, map, position, dia, name) {\r\n            \r\n            let fillrealcolor='';\r\n            let backcolor='';\r\n            \r\n            if (cataindex==1) {\r\n                fillrealcolor = '#E51D1A';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                fillrealcolor = '#00FF0F';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==3) { \r\n                fillrealcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                fillrealcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var circle = new naver.maps.Circle({\r\n                    map: map,\r\n                    center : position,\r\n                    radius: dia,    \r\n                    strokeColor: '#5347AA',\r\n                    strokeOpacity: 0.5,\r\n                    strokeWeight: 2,\r\n                    fillColor: fillrealcolor,\r\n                    fillOpacity: 0.3,\r\n                    clickable: true,\r\n                    // 원의 중심좌표 입니다 \r\n                    // radius: 5000, // 미터 단위의 원의 반지름입니다 \r\n                    // strokeWeight: 5, // 선의 두께입니다 \r\n                    // strokeColor: '#75B8FA', // 선의 색깔입니다\r\n                    // strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    // strokeStyle: 'dashed', // 선의 스타일 입니다\r\n                    // fillColor: '#CFE7FF', // 채우기 색깔입니다\r\n                    // fillOpacity: 0.7  // 채우기 불투명도 입니다   \r\n            });           \r\n            \r\n            // var content = name + '  [반경 '+dia+' m]'\r\n            var content =[\r\n                '<div class=\"name_display\" >',\r\n                    name,\r\n                '</div>',\r\n                '<div>',\r\n                '반경:',\r\n                    dia,\r\n                'm',\r\n                '</div>',\r\n            ].join('')\r\n            \r\n            var infowindow = new naver.maps.InfoWindow({\r\n                content: content,\r\n                borderWidth: 0,\r\n                disableAnchor: true,\r\n                backgroundColor: 'transparent',\r\n                pixelOffset: new naver.maps.Point(0, -13),\r\n            });\r\n\r\n            new naver.maps.Event.addListener(circle, 'mouseover', function(e) {                                  \r\n                circle.setOptions({\r\n                    fillOpacity: 0.6,\r\n                });\r\n                // console.log('dddd ', infowindow)\r\n                // console.log('cccc ', e)\r\n                // console.log('ffff ', e.coord.x , e.coord.y)\r\n                infowindow.open(map, new naver.maps.LatLng(e.coord.y, e.coord.x));\r\n            })\r\n            \r\n            // new naver.maps.Event.addListener(circle, 'mousemove', function(e) {                \r\n            //     infoBox.setPosition(mouseEvent.latLng);\r\n            //     infoBox.setMap(map);\r\n            // });\r\n            \r\n            new naver.maps.Event.addListener(circle, 'mouseout', function() {                \r\n                circle.setOptions({\r\n                    fillOpacity: 0.3,\r\n                });\r\n                infowindow.setMap(null)\r\n            });\r\n\r\n            if (cataindex==1) {\r\n                oleum_circles.push(circle);\r\n            } \r\n            // else if (cataindex==2) {\r\n            //     halla_polylines.push(polyline);\r\n            // } else if (cataindex==3) { \r\n            //     hike_polylines.push(polyline);\r\n            // } else if (cataindex==4) { \r\n            //     zpt_polylines.push(polyline);\r\n            // }  \r\n        },\r\n\r\n        drawingPolyline(cataindex, map, path, name) {\r\n\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==1) {\r\n                realcolor = '#0004FF';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                realcolor = '#FF0000';\r\n                backcolor = '#00FF00';      \r\n            } else if (cataindex==3) { \r\n                realcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                realcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var polyline = new naver.maps.Polyline({\r\n                map: map,\r\n                clickable: true,\r\n                path: path, // 선을 구성하는 좌표배열 입니다\r\n                strokeWeight: 2, // 선의 두께 입니다\r\n                strokeColor: realcolor, // 선의 색깔입니다\r\n                strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid'                 \r\n            });            \r\n            \r\n            var infowindow = new naver.maps.InfoWindow({\r\n                content: name,\r\n                borderWidth: 0,\r\n                disableAnchor: true,\r\n                backgroundColor: 'transparent',\r\n                pixelOffset: new naver.maps.Point(0, -13),\r\n            });\r\n\r\n            new naver.maps.Event.addListener(polyline, 'mouseover', function(e) {                                  \r\n                polyline.setOptions({\r\n                    strokeWeight: 7,\r\n                    strokeColor: backcolor,\r\n                    strokeOpacity: 1,\r\n                    strokeStyle: 'solid'\r\n                })\r\n                infowindow.open(map, new naver.maps.LatLng(e.coord.y, e.coord.x))                \r\n            })\r\n            \r\n            // new naver.maps.Event.addListener(polyline, 'mousemove', function(mouseEvent) {                \r\n            //     // customOverlay.setPosition(mouseEvent.latLng); \r\n            //     // infoBox.setPosition(mouseEvent.latLng);\r\n            //     // infoBox.setMap(map);\r\n            // });\r\n            \r\n            new naver.maps.Event.addListener(polyline, 'mouseout', function() {                \r\n                polyline.setOptions({\r\n                    strokeWeight: 2,\r\n                    strokeColor: realcolor,\r\n                    strokeOpacity: 0.5,\r\n                    strokeStyle: 'solid' \r\n                })\r\n                infowindow.setMap(null)\r\n            });\r\n\r\n            if (cataindex==1) {\r\n                olle_polylines.push(polyline);\r\n            } else if (cataindex==2) {\r\n                halla_polylines.push(polyline);\r\n            } else if (cataindex==3) { \r\n                hike_polylines.push(polyline);\r\n            } else if (cataindex==4) { \r\n                zpt_polylines.push(polyline);\r\n            }  \r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bot1 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot2 {\r\n    margin-top: 5px;\r\n}\r\n\r\n#namedisplay {\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n</style>","import { render } from \"./NaverMap.vue?vue&type=template&id=0fdccbce&scoped=true\"\nimport script from \"./NaverMap.vue?vue&type=script&lang=js\"\nexport * from \"./NaverMap.vue?vue&type=script&lang=js\"\n\nimport \"./NaverMap.vue?vue&type=style&index=0&id=0fdccbce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0fdccbce\"]])\n\nexport default __exports__","<template>\r\n    <div id=\"map\"></div>\r\n    <div class=\"bot1\">\r\n        <b-button pill variant=\"primary\" @click=\"displayOleum\">오름</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayOlle\">제주올레</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHalla\">한라산 둘레길</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHiking\">등산로</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayzpt\">제로포인트루트</b-button>\r\n    </div>\r\n    <div class=\"bot2\">\r\n        <b-button pill variant=\"success\" @click=\"displayCafe(true)\">제주카페</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayRest(true)\">제주식당</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayHotel(true)\">제주숙박</b-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { toRaw } from \"vue\";\r\nimport { ref } from 'vue';\r\nimport { Loader } from \"@googlemaps/js-api-loader\"\r\n\r\nimport oleum_data from \"../assets/jeju_oleum.json\"\r\nimport olle_data from \"../assets/jeju_olle_trail.json\"\r\nimport halla_data from \"../assets/jeju_halla_trail.json\"\r\nimport hiking_data from \"../assets/jeju_hiking_total.json\"\r\nimport zpt_data from \"../assets/jeju_zpt.json\"\r\n\r\nimport jeju_rest_all_data from \"../assets/jeju_rest_all.json\"\r\nimport jeju_cafe_all_data from \"../assets/jeju_cafe_all.json\"\r\nimport hotel_all_data from \"../assets/jeju_hotel_all.json\"\r\n\r\n\r\nvar apikey= ref('');\r\n\r\nvar customOverlay=({});\r\nvar infoWindow=({});\r\n\r\nvar cataindex=0;\r\nvar hallaIndex=true;\r\nvar halla_polylines=[];\r\nvar olleIndex=true;\r\nvar olle_polylines=[];\r\nvar hikingIndex=true;\r\nvar hike_polylines=[];\r\nvar zptIndex=true;\r\nvar zpt_polylines=[];\r\nvar oleumIndex=true;\r\nvar oleum_circles=[];\r\n\r\nvar jejucafeIndex=true;\r\nvar jejucafeMarkers=[];\r\nvar seogwipocafeIndex=true;\r\nvar seogwipocafeMarkers=[];\r\nvar cafeIndex = true;\r\n\r\nvar jejurestIndex=true;\r\nvar jejurestMarkers=[];\r\nvar seogwiporestIndex=true;\r\nvar seogwiporestMarkers=[];\r\nvar restIndex = true;\r\n\r\nvar jejuhotelIndex=true;\r\nvar jejuhotelMarkers=[];\r\nvar seogwipohotelIndex=true;\r\nvar seogwipohotelMarkers=[];\r\nvar hotelIndex= true;\r\n\r\nvar changeMaptype;\r\nvar currentTypeId;\r\nvar loader;\r\n\r\nvar changeLayer;\r\nvar currentLayer;\r\n\r\nexport default {\r\n    name: \"GoogleMap\",\r\n\r\n    data() {\r\n        return {\r\n            // jejusi_index:jejusi_index,\r\n            // seogwiposi_index:seogwiposi_index,\r\n            // my_btns:[\r\n            //     { caption: '제주카페', state:false, func : this.displayCafe(true)},\r\n            //     { caption: '제주식당', state:true , func : this.displayRest(true)},\r\n            //     { caption: '제주숙박', state:false, func : this.displayHotel(true)},\r\n            // ]                        \r\n        };\r\n    },\r\n\r\n    created() {\r\n        apikey = process.env.VUE_APP_GOOGLEMAP_API_KEY;        \r\n        // console.log('api_key ', apikey);\r\n        \r\n    },\r\n\r\n    mounted() {\r\n        loader = new Loader({\r\n            apiKey: apikey,\r\n            version: \"weekly\",\r\n            // ...additionalOptions,\r\n        });\r\n\r\n        this.initMap();\r\n    },\r\n\r\n    methods: {\r\n\r\n        initMap() {\r\n            \r\n            const container = document.getElementById(\"map\");            \r\n            \r\n            loader.load().then(async () => {\r\n\r\n                const { Map } = await google.maps.importLibrary(\"maps\");\r\n                // const { AdvancedMarkerElement } = await google.maps.importLibrary(\"marker\");\r\n                const mapProp = {\r\n                    center: { lat :33.38, lng: 126.58 },\r\n                    zoom: 10,\r\n                    mapTypeControl: true,\r\n                    mapTypeControlOptions: {\r\n                    style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\r\n                    position: google.maps.ControlPosition.TOP_RIGHT,\r\n                    },\r\n                }                \r\n\r\n                this.map = new Map(container, mapProp);\r\n\r\n                // const leftControlDiv = document.createElement(\"div\")\r\n                // const control = new LeftControl(leftControlDiv, toRaw(this.map))\r\n                // leftControlDiv.index=1\r\n                // leftControlDiv.style.paddingTop = \"10px\"\r\n                // this.map.control[google.maps.ControlPosition.TOP_LEFT].push(leftControlDiv)\r\n\r\n                var content = document.createElement('div');\r\n                content.className = 'modes';\r\n\r\n                if ( container.clientWidth > 340 ) {                \r\n                    content.innerHTML =  \r\n                    // '<div class=\"modes\">\\n'+\r\n                    // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                    // '<button id=\"terrain\">지형</button>\\n' +\r\n                    '<button id=\"traffic\">교통</button>\\n' +\r\n                    '<button id=\"bicycle\">자전거</button>\\n' +\r\n                    // '<button id=\"roadview\">도로</button>\\n' +\r\n                    '<button id=\"jejusi\">제주시</button>\\n' +\r\n                    '<button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                    '</div>\\n';\r\n                } else {                \r\n                    content.innerHTML =  \r\n                    // '<div class=\"modes\">\\n'+\r\n                    // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                    // '<button id=\"terrain\">지형</button>\\n' +\r\n                    '<button id=\"traffic\">교통</button>\\n' +\r\n                    '<button id=\"bicycle\">자전거</button>\\n' +\r\n                    // '<div>\\n'+\r\n                    //     '<button id=\"bicycle\">자전거</button>\\n' +\r\n                    //     // '<button id=\"roadview\">도로</button>\\n' +\r\n                    // '</div>\\n'+\r\n                    '<div>\\n'+\r\n                    '   <button id=\"jejusi\">제주시</button>\\n' +\r\n                    '   <button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                    '</div>\\n'+\r\n                    '</div>\\n';\r\n                }            \r\n\r\n                container.appendChild(content);\r\n                // console.log('google ', container)                \r\n\r\n                // this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(content);\r\n            \r\n                // const hybrid_btn = document.querySelector('#hybrid');  \r\n                // hybrid_btn.addEventListener('click', (event) => {\r\n                //     this.onSelectMap('hybrid')\r\n                // });\r\n\r\n                // const terrain_btn = document.querySelector('#terrain');  \r\n                // terrain_btn.addEventListener('click', (event) => {\r\n                //     this.onSelectMap('terrain')\r\n                // });\r\n\r\n                const bicycle_btn = document.querySelector('#bicycle');  \r\n                bicycle_btn.addEventListener('click', (event) => {\r\n                    this.onSelectMap('bicycle')\r\n                });\r\n\r\n                const traffic_btn = document.querySelector('#traffic');  \r\n                traffic_btn.addEventListener('click', (event) => {\r\n                    this.onSelectMap('traffic')\r\n                });\r\n\r\n                // const roadview_btn = document.querySelector('#roadview');  \r\n                // roadview_btn.addEventListener('click', (event) => {\r\n                //     this.onSelectMap('roadview')\r\n                // });\r\n\r\n                // const use_district_btn = document.querySelector('#use_district');  \r\n                // use_district_btn.addEventListener('click', (event) => {\r\n                //     this.onSelectMap('use_district')\r\n                // });\r\n\r\n                const jejusi_btn = document.querySelector('#jejusi');  \r\n                jejusi_btn.addEventListener('click', (event) => {\r\n                    if ( !cafeIndex ) {\r\n                        jejucafeIndex = jejucafeIndex ? false : true\r\n                        seogwipocafeIndex = false\r\n                        cafeIndex = false                                \r\n                        this.displayCafe(false)\r\n                    }\r\n\r\n                    if ( !restIndex ) {\r\n                        jejurestIndex = jejurestIndex ? false : true\r\n                        seogwiporestIndex = false\r\n                        restIndex = false                                \r\n                        this.displayRest(false)\r\n                    }\r\n\r\n                    if ( !hotelIndex ) {\r\n                        jejuhotelIndex = jejuhotelIndex ? false : true\r\n                        console.log('jejuhotelIndex', jejuhotelIndex)\r\n                        seogwipohotelIndex = false\r\n                        hotelIndex = false                                \r\n                        this.displayHotel(false)\r\n                    }               \r\n                    \r\n                });\r\n\r\n                const seogwiposi_btn = document.querySelector('#seogwiposi');  \r\n                seogwiposi_btn.addEventListener('click', (event) => {\r\n                    \r\n                    if ( !cafeIndex ) {\r\n                        seogwipocafeIndex = seogwipocafeIndex ? false : true\r\n                        cafeIndex = false\r\n                        jejucafeIndex = false\r\n                        this.displayCafe(false)\r\n                    } \r\n                    if ( !restIndex ) {\r\n                        seogwiporestIndex = seogwiporestIndex ? false : true\r\n                        restIndex = false\r\n                        jejurestIndex = false\r\n                        this.displayRest(false)\r\n                    } \r\n                    if ( !hotelIndex ) {\r\n                        seogwipohotelIndex = seogwipohotelIndex ? false : true\r\n                        hotelIndex = false\r\n                        jejuhotelIndex = false\r\n                        this.displayHotel(false)\r\n                    }               \r\n                    \r\n                });\r\n\r\n            });\r\n            // console.log(div);\r\n            // // toRaw(this.map).relayout();            \r\n            // this.make_cafe_data()\r\n            // this.make_rest_data()\r\n            // this.make_hotel_data()\r\n        },\r\n        \r\n        make_cafe_data() {\r\n            cataindex=10;\r\n            let features = jeju_cafe_all_data.features;\r\n            features.forEach( element => {\r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position = new google.maps.LatLng(element.y, element.x)\r\n                let phone = element.phone;                        \r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_rest_data() {\r\n            cataindex=11;\r\n            let features = jeju_rest_all_data.features;\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position = new google.maps.LatLng(element.y, element.x)\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_hotel_data() {\r\n            cataindex=12;\r\n            let features = hotel_all_data.features;            \r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position = new google.maps.LatLng(element.y, element.x)\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);\r\n            });\r\n\r\n        },\r\n\r\n        citydrawingMarker(cataindex, map, position, name, my_address, my_link, phone, city) {\r\n\r\n            var imageSrc = '';\r\n            \r\n            if (cataindex == 10) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_cafe.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_cafe.png';\r\n                }                \r\n            } else if (cataindex == 11) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_rest.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_rest.png';\r\n                }                \r\n            } else if (cataindex ==12) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_hotel.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_hotel.png';\r\n                }\r\n            }\r\n\r\n            // var imageSize = new google.maps.Size(16, 17);\r\n            // var imageOption = {offset: new google.maps.Point(8, 9)};            \r\n            // var markerImage = new google.maps.MarkerImage(imageSrc, imageSize, imageOption)\r\n            // var imageSize = new google.maps.Size(16, 17);\r\n            // var imageOption = {offset: new google.maps.Point(8, 9)};            \r\n            // var markerImage = new google.maps.MarkerImage(imageSrc, imageSize, imageOption)\r\n\r\n            var marker = new google.maps.Marker({\r\n                position : position,\r\n                // label: name,\r\n                icon : imageSrc,\r\n                scale : 0.05,\r\n            });\r\n\r\n\r\n            // var content =  '<div style=\"width:250px; height: 150px; padding: 5px;\">';\r\n            //     content += '    <a href='+my_link+' target=\"_blank\"><strong> [ 오름명 : '+name+']</strong></a>';\r\n            //     content += '    <div> 주소 : '+my_address+' </div>';\r\n            //     content += '</div>';\r\n            \r\n            // var content = '<div style=\"width:250px; height: 100px; padding: 5px;\"> <div></div>' +\r\n            var content = '<div class=\"placeinfo\">'+\r\n                '   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n                content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n                content += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n                content += '<div class=\"after\"></div>';\r\n\r\n            var infowindow = new google.maps.InfoWindow({\r\n                content: content,\r\n            });\r\n\r\n            new google.maps.event.addListener(marker, 'click', function() {                                  \r\n                infowindow.open(map, marker);\r\n            })\r\n\r\n            if (cataindex ==10) {\r\n                if (city === '제주시') jejucafeMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipocafeMarkers.push(marker)\r\n            } else if (cataindex ==11) {\r\n                if (city === '제주시') jejurestMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwiporestMarkers.push(marker)\r\n            } else if (cataindex ==12) {\r\n                if (city === '제주시') jejuhotelMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipohotelMarkers.push(marker)\r\n            }            \r\n        },\r\n\r\n        displayCafe(main_index){\r\n            // console.log(' cafeIndex ', cafeIndex, 'jejucafelIndex ',jejucafeIndex, 'seogwipocafeIndex ', seogwipocafeIndex  )\r\n            if(cafeIndex){\r\n                this.make_cafe_data()                \r\n                if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                cafeIndex = false\r\n                jejucafeIndex = false\r\n                seogwipocafeIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejucafeMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                    cafeIndex = true\r\n                    jejucafeIndex = true\r\n                    seogwipocafeIndex = true\r\n                } else {\r\n                    if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejucafeMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayRest(main_index){\r\n            // console.log(' restIndex ', restIndex, 'jejurestIndex ',jejurestIndex, 'seogwiporestIndex ', seogwiporestIndex  )\r\n            if(restIndex){\r\n                this.make_rest_data()                \r\n                if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                restIndex = false\r\n                jejurestIndex = false\r\n                seogwiporestIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejurestMarkers.map((cur) => cur.setMap(null))\r\n                    seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                    restIndex = true\r\n                    jejurestIndex = true\r\n                    seogwiporestIndex = true\r\n                } else {\r\n                    if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejurestMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayHotel(main_index){\r\n            // console.log(' hotelIndex ', hotelIndex, 'jejuhotelIndex ',jejuhotelIndex, 'seogwipohotelIndex ', seogwipohotelIndex  )\r\n            if(hotelIndex){\r\n                this.make_hotel_data()                \r\n                if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                hotelIndex = false\r\n                jejuhotelIndex = false\r\n                seogwipohotelIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejuhotelMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                    hotelIndex = true\r\n                    jejuhotelIndex = true\r\n                    seogwipohotelIndex = true\r\n                } else {\r\n                    if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejuhotelMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },        \r\n\r\n        onSelectMap: function(maptype) {\r\n            \r\n            if (maptype === 'traffic') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new google.maps.TrafficLayer()\r\n                // console.log('ddd ', changeLayer)        \r\n                changeLayer.setMap(toRaw(this.map))\r\n                // currentLayer = changeLayer                \r\n            } \r\n            // else if (maptype === 'roadview') {\r\n            //     if ( currentLayer !== null ) currentLayer.setMap(null)\r\n            //     changeLayer = new google.maps.TransitLayer()\r\n            //     changeLayer.setMap(toRaw(this.map))\r\n            //     currentLayer = changeLayer\r\n            // } \r\n            else if (maptype === 'bicycle') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new google.maps.BicyclingLayer()\r\n                changeLayer.setMap(toRaw(this.map))\r\n                currentLayer = changeLayer\r\n            } \r\n            //\r\n            \r\n            // else if (maptype === 'terrain') {                    \r\n            //     if ( currentLayer != null ) currentLayer.setMap(null)\r\n            //     if ( this.map.getMapTypeId() === naver.maps.MapTypeId.TERRAIN) {\r\n            //         changeMaptype = naver.maps.MapTypeId.NORMAL;\r\n            //         this.map.setMapTypeId(changeMaptype);\r\n            //     } else {\r\n            //         changeMaptype = naver.maps.MapTypeId.TERRAIN;\r\n            //         this.map.setMapTypeId(changeMaptype);\r\n            //     }                    \r\n                \r\n            // } \r\n\r\n            // else if (maptype === 'use_district') {\r\n            //     if ( currentLayer != null ) currentLayer.setMap(null)\r\n            //     changeLayer = new naver.maps.CadastralLayer();\r\n            //     changeLayer.setMap(toRaw(this.map))\r\n            //     currentLayer = changeLayer\r\n            // }\r\n            \r\n            currentTypeId = changeMaptype;          \r\n        },\r\n\r\n        displayOleum() {\r\n\r\n            cataindex=1;\r\n            if(oleumIndex) {\r\n\r\n                if(oleum_circles.length <=0 ) {\r\n                    let features = oleum_data.features;\r\n                    features.forEach( element => {\r\n                        let position = new google.maps.LatLng(element.geometry.coordinates[1], element.geometry.coordinates[0]);\r\n                        let dia = element.properties['반경']; \r\n                        let name = element.properties['오름명']\r\n                        this.drawingCircle(cataindex, toRaw(this.map), position, dia, name);                        \r\n                    });                    \r\n                } else {\r\n                    oleum_circles.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                oleumIndex = false;\r\n            } else {\r\n                oleum_circles.map( (cur) => cur.setMap(null));\r\n                oleumIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayOlle() {\r\n\r\n            cataindex=1;\r\n            if(olleIndex) {\r\n                if( olle_polylines.length <=0 ) {\r\n                    let features = olle_data.features;            \r\n                    features.forEach( element => {      \r\n                        let name = element.properties.name;             \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new google.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex,toRaw(this.map), path, name);\r\n                        });\r\n                    });\r\n                } else {\r\n                    olle_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }                \r\n                olleIndex = false;\r\n            } else {\r\n                olle_polylines.map( (cur) => cur.setMap(null));\r\n                olleIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHalla() {\r\n\r\n            cataindex=2; \r\n            if(hallaIndex) {\r\n                if ( halla_polylines.length <=0 ) {\r\n                    let features = halla_data.features;            \r\n                    features.forEach( element => { \r\n                        let name = element.properties.name;  \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new google.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);                     \r\n                        });\r\n                    });\r\n                } else {\r\n                    halla_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                hallaIndex = false;\r\n            } else {\r\n                halla_polylines.map( (cur) => cur.setMap(null));\r\n                hallaIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayHiking() {\r\n\r\n            cataindex=3;\r\n            if(hikingIndex){\r\n                if ( hike_polylines.length <=0 ) {                    \r\n                    let features = hiking_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = '등산로 '+ element.properties.PMNTN_NM;                \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new google.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                        });\r\n                    });\r\n                } else {\r\n                    hike_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                hikingIndex = false;\r\n            } else {\r\n                hike_polylines.map( (cur) => cur.setMap(null));\r\n                hikingIndex = true;\r\n            }          \r\n        },\r\n\r\n        displayzpt(){\r\n\r\n            cataindex=4;\r\n            if(zptIndex){\r\n                if ( zpt_polylines.length <=0 ) {                    \r\n                    let features = zpt_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = element.properties.name;                \r\n                        let coord = element.geometry.coordinates;\r\n\r\n                        if ( element.geometry.type=='LineString' ) {                            \r\n                            \r\n                            var path=[];                            \r\n                            coord.forEach( point => {\r\n                                let position = new google.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);              \r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);\r\n\r\n                        } else if (element.geometry.type=='MultiLineString'){\r\n                            \r\n                            coord.forEach( points => {\r\n                                var path=[];\r\n                                points.forEach ( point => {\r\n                                    let position = new google.maps.LatLng(point[1], point[0]);\r\n                                    path.push(position);\r\n                                });\r\n                                this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                            });\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n                    zpt_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                zptIndex = false;\r\n            } else {\r\n                zpt_polylines.map( (cur) => cur.setMap(null));\r\n                zptIndex = true;\r\n            }\r\n\r\n        },\r\n\r\n        drawingCircle(cataindex, map, position, dia, name) {\r\n            \r\n            let fillrealcolor='';\r\n            let backcolor='';\r\n            \r\n            if (cataindex==1) {\r\n                fillrealcolor = '#E51D1A';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                fillrealcolor = '#00FF0F';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==3) { \r\n                fillrealcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                fillrealcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var circle = new google.maps.Circle({\r\n                    map: map,\r\n                    center : position,\r\n                    radius: dia,    \r\n                    strokeColor: '#5347AA',\r\n                    strokeOpacity: 0.5,\r\n                    strokeWeight: 2,\r\n                    fillColor: fillrealcolor,\r\n                    fillOpacity: 0.3,\r\n                    // 원의 중심좌표 입니다 \r\n                    // radius: 5000, // 미터 단위의 원의 반지름입니다 \r\n                    // strokeWeight: 5, // 선의 두께입니다 \r\n                    // strokeColor: '#75B8FA', // 선의 색깔입니다\r\n                    // strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    // strokeStyle: 'dashed', // 선의 스타일 입니다\r\n                    // fillColor: '#CFE7FF', // 채우기 색깔입니다\r\n                    // fillOpacity: 0.7  // 채우기 불투명도 입니다   \r\n            });           \r\n            \r\n            var infoBox = new google.maps.InfoWindow({\r\n                content: name + '  [반경 '+dia+' m]',\r\n                // yAnchor: 2.5,\r\n            });\r\n            \r\n            // var infoBox = new google.maps.OverlayView({\r\n            //     content: name + '  [반경 '+dia+' m]',\r\n            //     yAnchor: 1.5,\r\n            // });\r\n\r\n            new google.maps.event.addListener(circle, 'mouseover', function(mouseEvent) {                                  \r\n                circle.setOptions({\r\n                    fillOpacity: 0.6,\r\n                    strokeStyle: 'dashed'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            })\r\n            \r\n            new google.maps.event.addListener(circle, 'mousemove', function(mouseEvent) {                \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new google.maps.event.addListener(circle, 'mouseout', function() {                \r\n                circle.setOptions({\r\n                    fillOpacity: 0.3,\r\n                    strokeStyle: 'line'\r\n                });\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==1) {\r\n                oleum_circles.push(circle);\r\n            } \r\n            // else if (cataindex==2) {\r\n            //     halla_polylines.push(polyline);\r\n            // } else if (cataindex==3) { \r\n            //     hike_polylines.push(polyline);\r\n            // } else if (cataindex==4) { \r\n            //     zpt_polylines.push(polyline);\r\n            // }  \r\n        },\r\n\r\n        drawingPolyline(cataindex, map, path, name) {\r\n\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==1) {\r\n                realcolor = '#0004FF';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                realcolor = '#FF0000';\r\n                backcolor = '#00FF00';      \r\n            } else if (cataindex==3) { \r\n                realcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                realcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var polyline = new google.maps.Polyline({\r\n                map: map,\r\n                path: path, // 선을 구성하는 좌표배열 입니다\r\n                strokeWeight: 2, // 선의 두께 입니다\r\n                strokeColor: realcolor, // 선의 색깔입니다\r\n                strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid'                 \r\n            });            \r\n            \r\n            var infoBox = new google.maps.InfoWindow({\r\n                content: name,\r\n                yAnchor: 1,\r\n            });\r\n\r\n            new google.maps.event.addListener(polyline, 'mouseover', function(mouseEvent) {                                  \r\n                polyline.setOptions({\r\n                    strokeWeight: 7,\r\n                    strokeColor: backcolor,\r\n                    strokeOpacity: 1,\r\n                    strokeStyle: 'solid'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n                // console.log('ddd ', infoBox);\r\n            })\r\n            \r\n            new google.maps.event.addListener(polyline, 'mousemove', function(mouseEvent) {                \r\n                // customOverlay.setPosition(mouseEvent.latLng); \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new google.maps.event.addListener(polyline, 'mouseout', function() {                \r\n                polyline.setOptions({\r\n                    strokeWeight: 2, // 선의 두께 입니다\r\n                    strokeColor: realcolor, // 선의 색깔입니다\r\n                    strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    strokeStyle: 'solid' \r\n                })\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==1) {\r\n                olle_polylines.push(polyline);\r\n            } else if (cataindex==2) {\r\n                halla_polylines.push(polyline);\r\n            } else if (cataindex==3) { \r\n                hike_polylines.push(polyline);\r\n            } else if (cataindex==4) { \r\n                zpt_polylines.push(polyline);\r\n            }  \r\n        },\r\n        \r\n    },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bot1 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot2 {\r\n    margin-top: 5px;\r\n}\r\n</style>","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n",null,"import { render } from \"./GoogleMap.vue?vue&type=template&id=42fc507b&scoped=true\"\nimport script from \"./GoogleMap.vue?vue&type=script&lang=js\"\nexport * from \"./GoogleMap.vue?vue&type=script&lang=js\"\n\nimport \"./GoogleMap.vue?vue&type=style&index=0&id=42fc507b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-42fc507b\"]])\n\nexport default __exports__","<template>  \r\n    <div id=\"map\" style=\"position: relative; overflow: hidden;\"></div>\r\n    <div class=\"bot1\">        \r\n        <b-button pill variant=\"primary\" @click=\"displayOleum\">오름</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayOlle\">제주올레</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHalla\">한라산 둘레길</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHiking\">등산로</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayzpt\">제로포인트루트</b-button>\r\n    </div>\r\n    <div class=\"bot2\">\r\n        <b-button pill variant=\"success\" @click=\"displayCafe(true)\">제주카페</b-button>        \r\n        <b-button pill variant=\"success\" @click=\"displayRest(true)\">제주식당</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayHotel(true)\">제주숙박</b-button>\r\n    </div>\r\n    <div id=\"name\" style=\"font-size: 24px;\"></div>    \r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { toRaw } from \"vue\";\r\nimport OlLayerTile from 'ol/layer/Tile.js'\r\nimport OlView from 'ol/View.js'\r\nimport OlMap from 'ol/Map.js'\r\nimport OSM from 'ol/source/OSM'\r\nimport XYZ from 'ol/source/XYZ'\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer.js'\r\nimport { fromLonLat, toLonLat } from 'ol/proj.js'\r\nimport VectorSource from 'ol/source/Vector'\r\nimport GeoJSON from 'ol/format/GeoJSON'\r\nimport Feature from 'ol/Feature.js';\r\nimport Point from 'ol/geom/Point.js';\r\nimport {\r\n    Circle as CircleStyle,\r\n    Fill,\r\n    Icon,\r\n    Stroke,\r\n    Style,\r\n    Text,\r\n} from 'ol/style.js';\r\nimport {\r\n    Select,\r\n    Translate,\r\n    defaults as defaultInteractions,\r\n} from 'ol/interaction.js';\r\nimport {altKeyOnly, click, pointerMove} from 'ol/events/condition.js';\r\nimport Overlay from 'ol/Overlay.js';\r\nimport { toStringHDMS } from 'ol/coordinate';\r\nimport {defaults} from 'ol/control/defaults';\r\n// import {ZoomSlider} from 'ol/control.js';\r\n\r\nimport jeju_rest_all_data from \"../assets/jeju_rest_all.json\"\r\nimport jeju_cafe_all_data from \"../assets/jeju_cafe_all.json\"\r\nimport hotel_all_data from \"../assets/jeju_hotel_all.json\"\r\n\r\nvar cataindex=0;\r\nvar hallaIndex=true;\r\nvar hallaLayer=new VectorLayer();\r\nvar olleIndex=true;\r\nvar olleLayer= new VectorLayer();\r\nvar hikingIndex=true;\r\nvar hikeLayer= new VectorLayer();\r\nvar zptIndex=true;\r\nvar zptLayer= new VectorLayer();\r\nvar oleumIndex=true;\r\nvar oleumLayer= new VectorLayer();\r\n\r\nvar jejucafeIndex=true;\r\nvar jejucafeLayer=new VectorLayer();\r\nvar seogwipocafeIndex=true;\r\nvar seogwipocafeLayer=new VectorLayer();\r\nvar cafeIndex = true;\r\n\r\nvar jejurestIndex=true;\r\nvar jejurestLayer=new VectorLayer();\r\nvar seogwiporestIndex=true;\r\nvar seogwiporestLayer=new VectorLayer();\r\nvar restIndex = true;\r\n\r\nvar jejuhotelIndex=true;\r\nvar jejuhotelLayer=new VectorLayer();\r\nvar seogwipohotelIndex=true;\r\nvar seogwipohotelLayer=new VectorLayer();\r\nvar hotelIndex= true;\r\n\r\nvar overlay;\r\n// var popup = new Overlay.Popup()\r\nvar baseLayer = new TileLayer();\r\nvar satelliteLayer = new TileLayer();\r\nvar hybridLayer = new TileLayer();\r\nvar grayLayer = new TileLayer();\r\nvar osmLayer = new TileLayer();\r\nvar array = null;\r\nvar apikey= '';\r\n// const zoomslider = new ZoomSlider();\r\n\r\nexport default {\r\n    name: 'OpenLayerMap',\r\n\r\n    created() {\r\n        apikey = process.env.VUE_APP_VWORLDMAP_API_KEY;      \r\n        // console.log('apikey ', apikey);        \r\n    },\r\n\r\n    mounted() {\r\n        this.initMap()\r\n        this.my_interaction()\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            center: [126.58, 33.38 ], \r\n            zoom: 10,\r\n            projection:\"EPSG:4326\",\r\n        }\r\n    },\r\n\r\n    methods:{\r\n\r\n        initMap() {\r\n\r\n            const target = document.getElementById('map')\r\n            \r\n            baseLayer = new TileLayer({\r\n                name : 'baseLayer',\r\n                source: new XYZ({\r\n                    url: `http://api.vworld.kr/req/wmts/1.0.0/${apikey}/Base/{z}/{y}/{x}.png`\r\n                    // url: `http://api.vworld.kr/req/wmts/1.0.0/${process.env.VUE_APP_VWORLDMAP_API_KEY}/Base/{z}/{y}/{x}.png`\r\n                })\r\n                // source :  new XYZ({\r\n                //     url: 'http://xdworld.vworld.kr:8080/2d/Base/202002/{z}/{x}/{y}.png'\r\n                // })\r\n            })\r\n\r\n            satelliteLayer = new TileLayer({\r\n                name : 'satelliteLayer',\r\n                source: new XYZ({\r\n                    url: `http://api.vworld.kr/req/wmts/1.0.0/${apikey}/Satellite/{z}/{y}/{x}.png`\r\n                })\r\n            })\r\n\r\n            hybridLayer = new TileLayer({\r\n                name : 'hybridLayer',\r\n                source: new XYZ({\r\n                    url: `http://api.vworld.kr/req/wmts/1.0.0/${apikey}/Hybrid/{z}/{y}/{x}.png`\r\n                })\r\n            })\r\n\r\n            grayLayer = new TileLayer({\r\n                name : 'grayLayer',\r\n                source: new XYZ({\r\n                    url: `http://api.vworld.kr/req/wmts/1.0.0/${apikey}/midnight/{z}/{y}/{x}.png`\r\n                })\r\n            })\r\n\r\n            osmLayer = new OlLayerTile({ \r\n                source: new OSM()\r\n            })\r\n\r\n            // layers: [new OlLayerTile({ source: new OSM()}), vWorld], \r\n            this.map = new OlMap({\r\n                // controls: defaults({\r\n                //     zoom: false,\r\n                //     attribution: false,\r\n                //     rotate: false,\r\n                // }),\r\n                target: target,\r\n                layers: [osmLayer, baseLayer, satelliteLayer, hybridLayer, grayLayer], \r\n                view: new OlView({\r\n                    center: this.center,\r\n                    zoom: this.zoom,\r\n                    projection: this.projection,\r\n                }),\r\n            })\r\n\r\n            // this.map.addControl(zoomslider)\r\n            // array = this.map.getLayers().getArray()\r\n            // console.log(array)\r\n\r\n            baseLayer.setVisible(true)\r\n            osmLayer.setVisible(false)\r\n            satelliteLayer.setVisible(false)\r\n            hybridLayer.setVisible(false)\r\n            grayLayer.setVisible(false)\r\n            \r\n            var content = document.createElement('div');\r\n            content.className = 'modes'\r\n            if ( target.clientWidth > 340 ) {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                // '<button id=\"terrain\">지형</button>\\n' +\r\n                '<button id=\"basemap\">기본맵(v)</button>\\n' +\r\n                '<button id=\"osmmap\">OSM맵</button>\\n' +\r\n                '<button id=\"satellitemap\">위성사진(v)</button>\\n' +\r\n                '<button id=\"hybridmap\">복합지도(v)</button>\\n' +\r\n                '<button id=\"graymap\">흑백지도(v)</button>\\n' +\r\n                // '<button id=\"bicycle\">자전거</button>\\n' +\r\n                // '<button id=\"roadview\">도로</button>\\n' +\r\n                '<button id=\"jejusi\">제주시</button>\\n' +\r\n                '<button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                // '<span id=\"popup\">&nbsp;</span>'+\r\n                '</div>\\n';\r\n            } else {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                // '<button id=\"terrain\">지형</button>\\n' +\r\n                '<button id=\"basemap\">기본맵(v)</button>\\n' +\r\n                '<button id=\"osmmap\">OSM맵</button>\\n' +\r\n                '<button id=\"satellitemap\">위성사진(v)</button>\\n' +\r\n                '<div>\\n'+\r\n                '<button id=\"hybridmap\">복합지도(v)</button>\\n' +\r\n                '<button id=\"graymap\">흑백지도(v)</button>\\n' +\r\n                '</div>\\n'+\r\n                // '<button id=\"bicycle\">자전거</button>\\n' +\r\n                // '<div>\\n'+\r\n                //     '<button id=\"bicycle\">자전거</button>\\n' +\r\n                //     // '<button id=\"roadview\">도로</button>\\n' +\r\n                // '</div>\\n'+\r\n                '<div>\\n'+\r\n                '   <button id=\"jejusi\">제주시</button>\\n' +\r\n                '   <button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n'+\r\n                // '<span id=\"popup\">&nbsp;</span>'+\r\n                '</div>\\n';\r\n            }\r\n            target.appendChild(content);\r\n            \r\n            // this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(content);\r\n        \r\n            // const hybrid_btn = document.querySelector('#hybrid');  \r\n            // hybrid_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('hybrid')\r\n            // });\r\n\r\n            // const terrain_btn = document.querySelector('#terrain');  \r\n            // terrain_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('terrain')\r\n            // });\r\n\r\n            const basemap_btn = document.querySelector('#basemap');  \r\n            basemap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('basemap')\r\n            });\r\n\r\n            const osmmap_btn = document.querySelector('#osmmap');  \r\n            osmmap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('osmmap')\r\n            });\r\n            \r\n            const satellitemap_btn = document.querySelector('#satellitemap');  \r\n            satellitemap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('satellitemap')\r\n            });\r\n            // '<button id=\"hybridmap\">복합지도</button>\\n' +\r\n            //     '<button id=\"graymap\">흑백지도</button>\\n' +\r\n\r\n            const hybridmap_btn = document.querySelector('#hybridmap');  \r\n            hybridmap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('hybridmap')\r\n            });\r\n\r\n            const graymap_btn = document.querySelector('#graymap');  \r\n            graymap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('graymap')\r\n            });\r\n\r\n            // const traffic_btn = document.querySelector('#traffic');  \r\n            // traffic_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('traffic')\r\n            // });\r\n\r\n            // const roadview_btn = document.querySelector('#roadview');  \r\n            // roadview_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('roadview')\r\n            // });\r\n\r\n            // const use_district_btn = document.querySelector('#use_district');  \r\n            // use_district_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('use_district')\r\n            // });\r\n\r\n\r\n            const jejusi_btn = document.querySelector('#jejusi');  \r\n            jejusi_btn.addEventListener('click', (event) => {\r\n                this.check_button_jejusi()                \r\n            });\r\n\r\n            const seogwiposi_btn = document.querySelector('#seogwiposi');  \r\n            seogwiposi_btn.addEventListener('click', (event) => {\r\n                this.check_button_seogwiposi()\r\n            });\r\n            \r\n            // var body = document.getElementsByTagName('body')[0];            \r\n            var ct = document.createElement('div');\r\n            ct.innerHTML =\r\n                '<div id=\"popup\" class=\"ol-popup\">\\n'+\r\n                '<a href=\"#\" id=\"popup-closer\" class=\"ol-popup-closer\"></a>\\n'+\r\n                '<div id=\"popup-content\"></div>\\n'+\r\n                '</div>';\r\n\r\n            target.appendChild(ct);\r\n\r\n            // console.log(document)\r\n            // this.map.on('pointermove', this.my_interaction)\r\n\r\n        },\r\n\r\n        // onMouseMove(browserEvent) {\r\n        //     var coordinate = browserEvent.coordinate;\r\n        //     var pixel = this.map.getPixelFromCoordinate(coordinate);\r\n        //     var el = document.getElementById('name');\r\n        //     el.innerHTML = '';\r\n        //     map.forEachFeatureAtPixel(pixel, function(feature) {\r\n        //     el.innerHTML += feature.get('name') + '<br>';\r\n        //     });\r\n        // },\r\n\r\n        my_interaction() {\r\n\r\n            var name=''\r\n            var dia=0.0\r\n            var link=''\r\n            var phone=''\r\n            var address=''\r\n\r\n            const container = document.getElementById('popup');\r\n            const content = document.getElementById('popup-content');\r\n            const closer = document.getElementById('popup-closer');\r\n\r\n            overlay = new Overlay({\r\n                element: container,\r\n                autoPan: {\r\n                    animation: {\r\n                    duration: 250,\r\n                    },\r\n                },\r\n            });\r\n\r\n            closer.onclick = function () {\r\n                overlay.setPosition(undefined);\r\n                closer.blur();\r\n                return false;\r\n            };\r\n\r\n            this.map.addOverlay(overlay)\r\n        \r\n            // var selectPointerMove = new Select({\r\n            //     condition: pointerMove,\r\n            //     style: new Style({\r\n            //         stroke: new Stroke({\r\n            //             color: 'red',\r\n            //             width: 3\r\n            //         }),\r\n            //         fill: new Fill({\r\n            //             color: 'rgba(0,0,255,0.6)'\r\n            //         })\r\n            //     })\r\n            // });\r\n            \r\n            // this.map.addInteraction(selectPointerMove);\r\n\r\n            // let style = new Style({\r\n            //     fill : new Fill({color : 'rgba(215, 35, 77, 1)'}), // rgb 코드 사용 가능\r\n            //     // fill : new ol.style.Fill({color : '#d7234d'}), // HEX 코드 사용 가능\r\n            //     stroke : new Stroke({color: 'rgba(34, 160, 235, 1)'})\r\n            // });\r\n\r\n            // let selectSingleClick = new Select({\r\n            //     condition: click, // click 하는 이벤트 (pointMove, singleclick, altClick 등)\r\n            //     style: new Style({\r\n            //         stroke: new Stroke({\r\n            //             color: 'white',\r\n            //             width: 2\r\n            //         }),\r\n            //         fill: new Fill({\r\n            //             color: 'rgba(0,0,255,0.6)'\r\n            //         })\r\n            //     })\r\n            // });\r\n\r\n\r\n            // this.map.addInteraction(selectSingleClick)\r\n\r\n            // let _style = null;\r\n            // // feature 를 선택할 때 이벤트\r\n            // selectSingleClick.on('select', function(e) {\r\n            //     if(e.target.getFeatures().a[0] != undefined){\r\n            //         _style = e.target.getFeatures().a[0]; // 기존 색상 담기\r\n            //         e.target.getFeatures().a[0].setStyle(null); // 기존 색상 제거\r\n            //     }\r\n            //     if(e.target.getFeatures().a.length > 0){\r\n            //         document.getElementById('info').innerHTML = e.target.getFeatures().a[0].N.zoneName;\r\n            //     }else{\r\n            //         _style.setStyle(style); // 기존 색상 추가\r\n            //         document.getElementById('info').innerHTML = \"\";\r\n            //     }\r\n            // });\r\n\r\n            \r\n            let selected = null;            \r\n            // var el = document.getElementById('name');            \r\n\r\n            this.map.on('pointermove', function (e) {\r\n                let selectStyle\r\n                if (selected !== null) {\r\n                    selected.setStyle(undefined);\r\n                    selected = null;\r\n                }                \r\n                // this.forEachFeatureAtPixel(e.pixel, function (feature, layer) {\r\n                //     selected = feature\r\n                //     feature.setStyle(selectStyle);\r\n                //     console.log( 'layer ',layer.get('layer_name'))\r\n                //     olleLayer.getFeatures(e.pixel).then(function (ollefeature){\r\n                //         if (ollefeature.length >0 ) console.log(ollefeature)\r\n                //         return\r\n                //     })\r\n                //     return                  \r\n                // })\r\n\r\n                var oleum_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        \r\n                        selected = feature\r\n                        let dia = feature.get('반경')/50;\r\n                        let _myStroke = new Stroke({\r\n                            color : 'rgba(255,0,0,1.0)',\r\n                            width : 1,\r\n                        })\r\n                        let _myFill = new Fill({\r\n                            color: 'rgba(255,0,0,0.7)'\r\n                        })\r\n                        let circle = new CircleStyle({\r\n                            radius: dia,\r\n                            fill: _myFill,\r\n                            stroke: _myStroke,\r\n                        })\r\n\r\n                        selectStyle = new Style({\r\n                            image : circle,\r\n                        })\r\n\r\n                        feature.setStyle(selectStyle)\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === oleumLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( oleum_feature != null ) {\r\n                    name = oleum_feature.get('오름명')\r\n                    dia = oleum_feature.get('반경')\r\n                    address =''         \r\n                }\r\n\r\n                var oll_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        \r\n                        selected = feature\r\n                        selectStyle = new Style({\r\n                            fill: new Fill({\r\n                                color: '#eeeeee',\r\n                            }),\r\n                            // backcolor = '#FF0000'; \r\n                            stroke: new Stroke({\r\n                                color: '#FF0000',\r\n                                width: 2,\r\n                            }),\r\n                        })                \r\n                        feature.setStyle(selectStyle)\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === olleLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( oll_feature != null ) {\r\n                    name = oll_feature.get('name')\r\n                    address =''\r\n                    dia=-1.0                    \r\n                }\r\n                \r\n                var hall_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        \r\n                        selected = feature\r\n                        selectStyle = new Style({\r\n                            fill: new Fill({\r\n                                color: '#eeeeee',\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                color: '#00FF00',\r\n                                width: 2,\r\n                            }),\r\n                        });                \r\n                        feature.setStyle(selectStyle);\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === hallaLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( hall_feature != null ) {\r\n                    //console.log(  hall_feature.get('name'))\r\n                    name = hall_feature.get('name')\r\n                    address =''\r\n                    dia=-1.0                    \r\n                }\r\n\r\n                var hike_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        \r\n                        selected = feature\r\n                        selectStyle = new Style({\r\n                            fill: new Fill({\r\n                                color: '#eeeeee',\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                color: '#0000FF',\r\n                                width: 2,\r\n                            }),\r\n                        });                \r\n                        feature.setStyle(selectStyle);\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === hikeLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( hike_feature != null ) {\r\n                    name = hike_feature.get('PMNTN_NM')\r\n                    address =''\r\n                    dia=-1.0                     \r\n                }\r\n\r\n                var zpt_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {                        \r\n                        selected = feature\r\n                        selectStyle = new Style({\r\n                            fill: new Fill({\r\n                                color: '#eeeeee',\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                color: '#00FF00',\r\n                                width: 2,\r\n                            }),\r\n                        });                \r\n                        feature.setStyle(selectStyle);\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === zptLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( zpt_feature != null ) {\r\n                    name = zpt_feature.get('name')\r\n                    address =''                    \r\n                    dia=-1.0 \r\n                }\r\n                \r\n                var point_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        selected = feature                        \r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return (layer === seogwipocafeLayer) || (layer === jejucafeLayer) \r\n                        ||  (layer === seogwiporestLayer) ||(layer === jejurestLayer)\r\n                        ||  (layer === seogwipohotelLayer) ||(layer === jejuhotelLayer)                      \r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( point_feature != null ) {\r\n                    name = point_feature.get('name')\r\n                    link = point_feature.get('link')\r\n                    phone = point_feature.get('phone')\r\n                    address = point_feature.get('address')\r\n                    dia=-1.0\r\n                }\r\n\r\n                if (selected ) {\r\n                    if( name !== null) {\r\n                        const coordinate = e.coordinate\r\n                        if (dia > 0.0 ) {\r\n                            content.innerHTML = '<p>' + name + '</p>'+'<p>반경:' + dia + ' m</p>';\r\n                            // overlay.setPosition(coordinate);\r\n                        } else {\r\n                            \r\n                            // overlay.setPosition(coordinate);\r\n                            if (address.length >1 ) {\r\n                                content.innerHTML = '<div class=\"placeinfo\">'+\r\n                                '   <a class=\"title\" href=\"' + link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n                                content.innerHTML += '<div> <span title=\"' + address + '\">' + address + '</span> </div>';   \r\n                                content.innerHTML += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n                                content.innerHTML += '<div class=\"after\"></div>';\r\n                            } else {\r\n                                content.innerHTML = '<p>' + name + '</p>';\r\n                            }\r\n                        }\r\n                        overlay.setPosition(coordinate);\r\n                        // el.innerHTML = name + '<br>';\r\n                    }\r\n                } else {                    \r\n                    content.innerHTML = '&nbsp;'\r\n                    overlay.setPosition(null)                    \r\n                }\r\n\r\n                \r\n\r\n                // console.log(p_feature)\r\n\r\n                // if (p_feature !== null) {\r\n                //     console.log('dddd  ',p_feature)\r\n                //         // const coordinate = e.coordinate\r\n                //         // let my_name = p_feature.get('name')\r\n                //         // console.log(my_name)\r\n                //         // let my_link = point_feature.get('link')\r\n                //         // let my_phone = point_feature.get('phone')\r\n                //         // let my_address = point_feature.get('address')\r\n                //         // content.innerHTML = '<div class=\"placeinfo\">'+\r\n                //         // '   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + my_name + '\">' + my_name + '</a>';\r\n                //         // content.innerHTML += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n                //         // content.innerHTML += '      <span class=\"tel\"> Tel. ' + my_phone + '</span>'; \r\n                //         // content.innerHTML += '<div class=\"after\"></div>';\r\n                //         // overlay.setPosition(coordinate)\r\n                // }\r\n\r\n                // console.log('point   ',point_feature)\r\n\r\n            }) \r\n            \r\n            // this.map.on('click', function (evt) {\r\n                \r\n            //     // const coordinate = evt.coordinate\r\n\r\n            //     // let feature = this.forEachFeatureAtPixel(e.pixel, function (feature) {                    \r\n            //     //     return feature                 \r\n            //     // })\r\n            //     // let my_name = feature.get('name')\r\n            //     // let my_link = feature.get('link')\r\n            //     // let my_phone = feature.get('phone')\r\n            //     // let my_address = feature.get('address')\r\n            //     // let content = '<div class=\"placeinfo\">'+\r\n            //     // '   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + my_name + '\">' + my_name + '</a>';\r\n            //     // content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n            //     // content += '      <span class=\"tel\"> Tel. ' + my_phone + '</span>'; \r\n            //     // content += '<div class=\"after\"></div>';\r\n                \r\n                \r\n            // })\r\n            // this.map.on('click', (e) => {\r\n            //     overlayLayer.setPosition(undefined);\r\n            //     this.map.forEachFeatureAtPixel(e.pixel, function (feature, layer) {\r\n            //         let clickedCoordinate = e.coordinate;\r\n            //         let clickedFeatureName = feature.get('name');\r\n            //         let clickedFeatureAdditionInfo = feature.get('additionalinfo');\r\n            //         if (clickedFeatureName && clickedFeatureAdditionInfo != undefined) {\r\n            //             overlayLayer.setPosition(clickedCoordinate);\r\n            //             overlayFeatureName.innerHTML = clickedFeatureName;\r\n            //             overlayFeatureAdditionInfo.innerHTML = clickedFeatureAdditionInfo;\r\n            //         }\r\n            //     })\r\n            // }) \r\n\r\n            // console.log('dddd ', document)\r\n            \r\n        },\r\n\r\n        check_button_jejusi() {\r\n                if ( !cafeIndex ) {\r\n                    jejucafeIndex = jejucafeIndex ? false : true\r\n                    seogwipocafeIndex = false\r\n                    cafeIndex = false                                \r\n                    this.displayCafe(false)\r\n                }\r\n                if ( !restIndex ) {\r\n                    jejurestIndex = jejurestIndex ? false : true\r\n                    seogwiporestIndex = false\r\n                    restIndex = false                                \r\n                    this.displayRest(false)\r\n                }\r\n                if ( !hotelIndex ) {\r\n                    jejuhotelIndex = jejuhotelIndex ? false : true\r\n                    seogwipohotelIndex = false\r\n                    hotelIndex = false                                \r\n                    this.displayHotel(false)\r\n                }\r\n\r\n        },\r\n\r\n        check_button_seogwiposi() {\r\n                if ( !cafeIndex ) {\r\n                    seogwipocafeIndex = seogwipocafeIndex ? false : true\r\n                    cafeIndex = false\r\n                    jejucafeIndex = false\r\n                    this.displayCafe(false)\r\n                } \r\n                if ( !restIndex ) {\r\n                    seogwiporestIndex = seogwiporestIndex ? false : true\r\n                    restIndex = false\r\n                    jejurestIndex = false\r\n                    this.displayRest(false)\r\n                } \r\n                if ( !hotelIndex ) {\r\n                    seogwipohotelIndex = seogwipohotelIndex ? false : true\r\n                    hotelIndex = false\r\n                    jejuhotelIndex = false\r\n                    this.displayHotel(false)\r\n                }      \r\n\r\n        },               \r\n\r\n        onSelectMap(name) {\r\n\r\n            if (name ==='basemap') {\r\n                baseLayer.setVisible(true)\r\n                osmLayer.setVisible(false)\r\n                satelliteLayer.setVisible(false)\r\n                hybridLayer.setVisible(false)\r\n                grayLayer.setVisible(false)\r\n            } else if (name ==='osmmap') {\r\n                baseLayer.setVisible(false)\r\n                osmLayer.setVisible(true)\r\n                satelliteLayer.setVisible(false)\r\n                hybridLayer.setVisible(false)\r\n                grayLayer.setVisible(false)\r\n            } else if (name === 'satellitemap') {\r\n                baseLayer.setVisible(false)\r\n                osmLayer.setVisible(false)\r\n                satelliteLayer.setVisible(true)\r\n                hybridLayer.setVisible(false)\r\n                grayLayer.setVisible(false)\r\n            } else if ( name === 'hybridmap') {\r\n                baseLayer.setVisible(false)\r\n                osmLayer.setVisible(false)\r\n                satelliteLayer.setVisible(false)\r\n                hybridLayer.setVisible(true)\r\n                grayLayer.setVisible(false)\r\n            } else if ( name === 'graymap') {\r\n                baseLayer.setVisible(false)\r\n                osmLayer.setVisible(false)\r\n                satelliteLayer.setVisible(false)\r\n                hybridLayer.setVisible(false)\r\n                grayLayer.setVisible(true)\r\n            }\r\n\r\n        },\r\n\r\n        displayOleum(){            \r\n            if(oleumIndex) {\r\n                oleumLayer= this.get_circlelayer('./assets/jeju_oleum.json')\r\n                this.map.addLayer(oleumLayer)\r\n                oleumIndex = false;\r\n            } else {\r\n                this.map.removeLayer(oleumLayer)\r\n                oleumIndex = true;\r\n            }\r\n        },\r\n\r\n        get_circlelayer(fname) {\r\n\r\n            const oleumstyleFunction = function (feature) {\r\n        \r\n                // let name = feature.get('오름명');\r\n                // let num = feature.get('연번');\r\n                // let nickname = feature.get('타오름명');\r\n                let dia = feature.get('반경')/50;\r\n\r\n                let _myStroke = new Stroke({\r\n                    color : 'rgba(255,0,0,1.0)',\r\n                    width : 1,\r\n                })\r\n                let _myFill = new Fill({\r\n                    color: 'rgba(229,29,26,0.3)'\r\n                })\r\n                let circle = new CircleStyle({\r\n                    radius: dia,\r\n                    fill: _myFill,\r\n                    stroke: _myStroke,\r\n                })\r\n\r\n                let mystyle = new Style({\r\n                    image : circle\r\n                })\r\n\r\n                // let label= ''\r\n                // let ch_offset=0\r\n                // if (nickname ==null) {\r\n                //     label = num +'\\n'+name  \r\n                //     ch_offset = -25\r\n                // } else{\r\n                //     label = num +'\\n'+name+'\\n'+nickname\r\n                //     ch_offset = -30\r\n                // }\r\n                \r\n                // let mystyle = new Style({      \r\n                    \r\n                //     // text: new Text({\r\n                //     //         text: label,\r\n                //     //         font: 'bold 11px Calibri,sans-serif',                            \r\n                //     // fill: new Fill({\r\n                //     //     color: '#E51D1A',\r\n                //     // }),\r\n                //     //         stroke: new Stroke({\r\n                //     //             color: 'white',\r\n                //     //             width: 2,\r\n                //     //         }),\r\n                //     //         offsetY : ch_offset\r\n                //     //     }),                        \r\n                //     image: new CircleStyle({\r\n                //             radius: dia,\r\n                //             fill: new Fill({\r\n                //                     color: '#E51D1A',\r\n                //             }),\r\n                //     })\r\n                // });\r\n\r\n                // let mystyle = new Circle({\r\n                //     radius: dia,\r\n                //     fill : new Fill({\r\n                //         color: 'blue',\r\n                //     })\r\n                // })\r\n\r\n                // let mystyle=  new Style({\r\n                //     fill: new Fill({\r\n                //         color: 'rgba(0, 255,0, 0.3)'\r\n                //     }),\r\n                //     stroke: new Stroke({\r\n                //         color: '#737373',\r\n                //         width: 2\r\n                //     }),\r\n                //     image: new Circle({\r\n                //         radius: dia,\r\n                //         fill: new Fill({\r\n                //             color: '#ffcc33'\r\n                //         })\r\n                //     }),\r\n                // });\r\n\r\n                return mystyle;  \r\n            }\r\n            const oleum_source = new VectorSource({\r\n                url: fname,\r\n                projection: 'EPSG:4326',\r\n                format: new GeoJSON(),\r\n            });\r\n            const oleumLayer = new VectorLayer({\r\n                source: oleum_source,\r\n                style : oleumstyleFunction,\r\n            });\r\n            return oleumLayer;\r\n        },\r\n\r\n        displayOlle() {\r\n            cataindex=1;\r\n            if(olleIndex) {\r\n                olleLayer= this.get_polylineLayer('../assets/jeju_olle_trail.json')\r\n                this.map.addLayer(olleLayer)\r\n                olleIndex = false;\r\n            } else {\r\n                this.map.removeLayer(olleLayer)\r\n                olleIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHalla() {\r\n            cataindex=2;\r\n            if(hallaIndex) {\r\n                hallaLayer = this.get_polylineLayer('../assets/jeju_halla_trail.json')\r\n                this.map.addLayer(hallaLayer)\r\n                hallaIndex = false;\r\n            } else {\r\n                this.map.removeLayer(hallaLayer)\r\n                hallaIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayHiking() {\r\n            cataindex=3;\r\n            if(hikingIndex){\r\n                hikeLayer = this.get_polylineLayer('../assets/jeju_hiking_total.json')\r\n                this.map.addLayer(hikeLayer)            \r\n                hikingIndex = false;\r\n            } else {\r\n\r\n                this.map.removeLayer(hikeLayer)                \r\n                hikingIndex = true;\r\n            }          \r\n        },\r\n\r\n        displayzpt(){\r\n            cataindex=4;\r\n            if(zptIndex){\r\n                zptLayer = this.get_polylineLayer('../assets/jeju_zpt.json')\r\n                this.map.addLayer(zptLayer)\r\n                zptIndex = false;\r\n            } else {\r\n                this.map.removeLayer(zptLayer)\r\n                zptIndex = true;\r\n            }\r\n\r\n        },\r\n\r\n        get_polylineLayer(fname) {\r\n\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==1) {\r\n                realcolor = '#0004FF';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                realcolor = '#FF0000';\r\n                backcolor = '#00FF00';      \r\n            } else if (cataindex==3) { \r\n                realcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                realcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            const styleFunction = function (feature) {\r\n        \r\n                let name = feature.get('오름명');\r\n                let num = feature.get('연번');\r\n                let nickname = feature.get('타오름명');\r\n                let dia = feature.get('반경')/50;\r\n\r\n                let label= ''\r\n                let ch_offset=0\r\n                if (nickname ==null) {\r\n                    label = num +'\\n'+name  \r\n                    ch_offset = -25\r\n                } else{\r\n                    label = num +'\\n'+name+'\\n'+nickname\r\n                    ch_offset = -30\r\n                }\r\n                let mystyle = new Style({      \r\n                    // text: new Text({\r\n                    // text: label,\r\n                    // font: 'bold 11px Calibri,sans-serif',\r\n                    // fill: new Fill({\r\n                    //     color: 'black',\r\n                    // }),\r\n                    // stroke: new Stroke({\r\n                    //     color: 'white',\r\n                    //     width: 2,\r\n                    // }),\r\n                    // offsetY : ch_offset\r\n                    // }),\r\n                    // image: new CircleStyle({\r\n                    //     radius: dia,\r\n                    //     fill: new Fill({\r\n                    //             color: 'red',\r\n                    //     }),\r\n                    // }),\r\n                    stroke: new Stroke({\r\n                        color: realcolor,\r\n                        width: 2,\r\n                    }),\r\n                });\r\n\r\n                return mystyle;  \r\n            }\r\n            const polyline_source = new VectorSource({\r\n                url: fname,\r\n                projection: 'EPSG:4326',\r\n                format: new GeoJSON(),\r\n            });\r\n            const polylineLayer = new VectorLayer({\r\n                source: polyline_source,\r\n                style : styleFunction,\r\n            });\r\n\r\n            return polylineLayer;\r\n        },\r\n        \r\n        make_cafe_data() {\r\n            let features = jeju_cafe_all_data.features;\r\n            var j_source = new VectorSource()\r\n            var s_source = new VectorSource()\r\n\r\n            features.forEach( element => {\r\n                let name = element.place_name                \r\n                let my_address = element.address_name\r\n                let city = element.address_name.split(' ')[1]\r\n                let my_link = element.place_url\r\n                let position = new Point([element.x, element.y])\r\n                let phone = element.phone                \r\n                var feat = new Feature({\r\n                    geometry: position,\r\n                    name : name,\r\n                    address: my_address,\r\n                    link: my_link,\r\n                    phone: phone,\r\n                })                \r\n                if ( city === '제주시')  {\r\n                    j_source.addFeature(feat)\r\n                } else if ( city === '서귀포시') {\r\n                    s_source.addFeature(feat)\r\n                }\r\n            });            \r\n            jejucafeLayer = new VectorLayer({\r\n                source: j_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/jeju_cafe.png',\r\n                                scale: 0.7,\r\n                            })\r\n                })\r\n            })\r\n            seogwipocafeLayer = new VectorLayer({\r\n                source: s_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/seogwipo_cafe.png',\r\n                                scale: 0.7,\r\n                            })\r\n                })\r\n            })\r\n        },\r\n\r\n        make_rest_data() {\r\n            let features = jeju_rest_all_data.features;\r\n            var j_source = new VectorSource()\r\n            var s_source = new VectorSource()\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position =  new Point([element.x, element.y])\r\n                let phone = element.phone;\r\n                var feat = new Feature({\r\n                    geometry: position,\r\n                    name : name,\r\n                    address: my_address,\r\n                    link: my_link,\r\n                    phone: phone,\r\n                })                \r\n                if ( city === '제주시')  {\r\n                    j_source.addFeature(feat)\r\n                } else if ( city === '서귀포시') {\r\n                    s_source.addFeature(feat)\r\n                }\r\n            });\r\n            jejurestLayer = new VectorLayer({\r\n                source: j_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/jeju_rest.png',\r\n                                scale: 0.8,\r\n                            })\r\n                })\r\n            })\r\n            seogwiporestLayer = new VectorLayer({\r\n                source: s_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/seogwipo_rest.png',\r\n                                scale: 0.8,\r\n                            })\r\n                })\r\n            })\r\n        },\r\n\r\n        make_hotel_data() {\r\n            let features = hotel_all_data.features;\r\n            var j_source = new VectorSource()\r\n            var s_source = new VectorSource()\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position =  new Point([element.x, element.y])\r\n                let phone = element.phone;\r\n                var feat = new Feature({\r\n                    geometry: position,\r\n                    name : name,\r\n                    address: my_address,\r\n                    link: my_link,\r\n                    phone: phone,\r\n                })                \r\n                if ( city === '제주시')  {\r\n                    j_source.addFeature(feat)\r\n                } else if ( city === '서귀포시') {\r\n                    s_source.addFeature(feat)\r\n                }\r\n            });            \r\n            jejuhotelLayer = new VectorLayer({\r\n                source: j_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/jeju_hotel.png',\r\n                                scale: 0.5,\r\n                            })\r\n                })\r\n            })\r\n            seogwipohotelLayer = new VectorLayer({\r\n                source: s_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/seogwipo_hotel.png',\r\n                                scale: 0.5,\r\n                            })\r\n                })\r\n            })\r\n        },\r\n\r\n        displayCafe(main_index){            \r\n            if(cafeIndex){\r\n                this.make_cafe_data()                \r\n                if ( jejucafeIndex ) this.map.addLayer(jejucafeLayer)\r\n                if ( seogwipocafeIndex ) this.map.addLayer(seogwipocafeLayer)\r\n                cafeIndex = false\r\n                jejucafeIndex = false\r\n                seogwipocafeIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    this.map.removeLayer(jejucafeLayer)\r\n                    this.map.removeLayer(seogwipocafeLayer)\r\n                    cafeIndex = true\r\n                    jejucafeIndex = true\r\n                    seogwipocafeIndex = true\r\n                } else {\r\n                    this.map.removeLayer(jejucafeLayer)\r\n                    this.map.removeLayer(seogwipocafeLayer)\r\n                    if ( jejucafeIndex ) this.map.addLayer(jejucafeLayer)\r\n                    else this.map.removeLayer(jejucafeLayer)\r\n                    if ( seogwipocafeIndex ) this.map.addLayer(seogwipocafeLayer)\r\n                    else this.map.removeLayer(seogwipocafeLayer)\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayRest(main_index){\r\n            // console.log(' restIndex ', restIndex, 'jejurestIndex ',jejurestIndex, 'seogwiporestIndex ', seogwiporestIndex  )\r\n            if(restIndex){\r\n                this.make_rest_data()                \r\n                if ( jejurestIndex ) this.map.addLayer(jejurestLayer)\r\n                if ( seogwiporestIndex ) this.map.addLayer(seogwiporestLayer)\r\n                restIndex = false\r\n                jejurestIndex = false\r\n                seogwiporestIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    this.map.removeLayer(jejurestLayer)\r\n                    this.map.removeLayer(seogwiporestLayer)\r\n                    restIndex = true\r\n                    jejurestIndex = true\r\n                    seogwiporestIndex = true\r\n                } else {\r\n                    this.map.removeLayer(jejurestLayer)\r\n                    this.map.removeLayer(seogwiporestLayer)\r\n                    if ( jejurestIndex ) this.map.addLayer(jejurestLayer)\r\n                    else this.map.removeLayer(seogwiporestLayer)\r\n                    if ( seogwiporestIndex ) this.map.addLayer(seogwiporestLayer)\r\n                    else this.map.removeLayer(seogwiporestLayer)\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayHotel(main_index){\r\n            // console.log(' hotelIndex ', hotelIndex, 'jejuhotelIndex ',jejuhotelIndex, 'seogwipohotelIndex ', seogwipohotelIndex  )\r\n            if(hotelIndex){\r\n                this.make_hotel_data()                \r\n                if ( jejuhotelIndex ) this.map.addLayer(jejuhotelLayer)\r\n                if ( seogwipohotelIndex ) this.map.addLayer(seogwipohotelLayer)\r\n                hotelIndex = false\r\n                jejuhotelIndex = false\r\n                seogwipohotelIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    this.map.removeLayer(jejuhotelLayer)\r\n                    this.map.removeLayer(seogwipohotelLayer)\r\n                    hotelIndex = true\r\n                    jejuhotelIndex = true\r\n                    seogwipohotelIndex = true\r\n                } else {\r\n                    this.map.removeLayer(jejuhotelLayer)\r\n                    this.map.removeLayer(seogwipohotelLayer)                    \r\n                    if ( jejuhotelIndex ) this.map.addLayer(jejuhotelLayer)\r\n                    else this.map.removeLayer(jejuhotelLayer)\r\n                    if ( seogwipohotelIndex ) this.map.addLayer(seogwipohotelLayer)\r\n                    else this.map.removeLayer(seogwipohotelLayer)\r\n                }               \r\n            }\r\n        },\r\n\r\n        // citydrawingMarker(cataindex, map, position, name, my_address, my_link, phone, city) {            \r\n        //     var feat = new Feature({\r\n        //         geometry: position,\r\n        //         name : name,\r\n        //         city : city,\r\n        //     })\r\n        //     if (cataindex ==10) {\r\n        //         if (city === '제주시') jejucafeSource.addFeature(feat)\r\n        //         else if (city === '서귀포시') seogwipocafeSource.addFeature(feat)\r\n        //     } else if (cataindex ==11) {\r\n        //         if (city === '제주시') jejurestMarkers.push(marker)\r\n        //         else if (city === '서귀포시') seogwiporestMarkers.push(marker)\r\n        //     } else if (cataindex ==12) {\r\n        //         if (city === '제주시') jejuhotelMarkers.push(marker)\r\n        //         else if (city === '서귀포시') seogwipohotelMarkers.push(marker)\r\n        //     }   \r\n        // },\r\n\r\n        // styleFunction(city) {\r\n        \r\n        //     var imageSrc='';\r\n            \r\n        //     if (cataindex == 10) {\r\n        //         if ( city === '제주시') {\r\n        //             imageSrc = new Icon({\r\n        //                 src:'/img/jeju_cafe.png'\r\n        //             });\r\n        //         } else if ( city === '서귀포시') {\r\n        //             imageSrc = new Icon({\r\n        //                 src:'/img/seogwipo_cafe.png'\r\n        //             })\r\n        //         }                \r\n        //     } else if (cataindex == 11) {\r\n        //         if ( city === '제주시') {\r\n        //             imageSrc = new Icon({\r\n        //                 src:'/img/jeju_rest.png'\r\n        //             })\r\n\r\n        //         } else if ( city === '서귀포시') {\r\n        //             imageSrc = new Icon({\r\n        //                 src:'/img/seogwipo_rest.png'\r\n        //             })\r\n        //         }                \r\n        //     } else if (cataindex ==12) {\r\n        //         if ( city === '제주시') {\r\n        //             imageSrc = new Icon({\r\n        //                 src: '/img/jeju_hotel.png'\r\n        //             })\r\n        //         } else if ( city === '서귀포시') {\r\n        //             imageSrc = new Icon({\r\n        //                 src:'/img/seogwipo_hotel.png'\r\n        //             })\r\n        //         }\r\n        //     }\r\n        //     let mystyle = new Style({                \r\n        //         image: imageSrc                \r\n        //     });\r\n        //     return mystyle;  \r\n        // }\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.bot1 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot2 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.ol-zoom {\r\n    top: 50px;\r\n    left: auto;\r\n    right: 10px;\r\n}\r\n\r\n.ol-zoom .ol-zoom-out {\r\n    margin-top: 200px;\r\n}\r\n/* .ol-zoomslider {\r\nbackground-color: transparent;\r\n/*\r\nZoom control top: 0.5em\r\nZoom control padding: 2px\r\nZoom in button margin top: 1px\r\nZoom in button height: font size 1.14em * 1.375 height\r\n*/\r\n/* top: calc(0.5em + 2px + 1px + 1.14 * 1.375em);\r\n}  */\r\n\r\n/* .ol-touch .ol-zoom .ol-zoom-out {\r\nmargin-top: 212px;\r\n}\r\n.ol-touch .ol-zoomslider {\r\ntop: 2.75em;\r\n}\r\n\r\n.ol-zoom-in.ol-has-tooltip:hover [role=tooltip],\r\n.ol-zoom-in.ol-has-tooltip:focus [role=tooltip] {\r\ntop: 3px;\r\n}\r\n\r\n.ol-zoom-out.ol-has-tooltip:hover [role=tooltip],\r\n.ol-zoom-out.ol-has-tooltip:focus [role=tooltip] {\r\ntop: 232px;\r\n} */\r\n.ol-popup {\r\n    position: absolute;\r\n    background-color: white;\r\n    box-shadow: 0 1px 4px rgba(0,0,0,0.2);\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n    border: 1px solid #cccccc;\r\n    bottom: 12px;\r\n    left: -50px;\r\n    min-width: 280px;\r\n}\r\n\r\n.ol-popup:after, .ol-popup:before {\r\n    top: 100%;\r\n    border: solid transparent;\r\n    content: \" \";\r\n    height: 0;\r\n    width: 0;\r\n    position: absolute;\r\n    pointer-events: none;\r\n}\r\n\r\n.ol-popup:after {\r\n    border-top-color: white;\r\n    border-width: 10px;\r\n    left: 48px;\r\n    margin-left: -10px;\r\n}\r\n\r\n.ol-popup:before {\r\n    border-top-color: #cccccc;\r\n    border-width: 11px;\r\n    left: 48px;\r\n    margin-left: -11px;\r\n}\r\n.ol-popup-closer {\r\n    text-decoration: none;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 8px;\r\n}\r\n\r\n.ol-popup-closer:after {\r\n    content: \"✖\";\r\n}\r\n\r\n\r\n</style>","import { render } from \"./OpenLayerMap.vue?vue&type=template&id=433719ae\"\nimport script from \"./OpenLayerMap.vue?vue&type=script&lang=js\"\nexport * from \"./OpenLayerMap.vue?vue&type=script&lang=js\"\n\nimport \"./OpenLayerMap.vue?vue&type=style&index=0&id=433719ae&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=459011b0&scoped=true\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=459011b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-459011b0\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_b_card","title","default","_withCtx","_component_b_card_header","_component_b_nav","align","$props","homeDisplay","_createCommentVNode","_createBlock","_component_b_button","key","pill","size","variant","to","_createTextVNode","_","getAuth","onClick","signOut","computed","this","$store","state","auth","user","authority","getUserName","username","getEmail","email","methods","dispatch","props","Boolean","__exports__","render","_Fragment","_component_Header","_createElementVNode","$options","changeMap","_toDisplayString","nextmap","_hoisted_2","mapindex","_component_MyKakaoMap","_component_MyNaverMap","_component_MyOpenLayerMap","_component_MyGoogleMap","id","displayOleum","displayOlle","displayHalla","displayHiking","displayzpt","_hoisted_3","_cache","$event","displayCafe","displayRest","displayHotel","changeMaptype","currentTypeId","apikey","ref","cataindex","hallaIndex","halla_polylines","olleIndex","olle_polylines","hikingIndex","hike_polylines","zptIndex","zpt_polylines","oleumIndex","oleum_circles","jejucafeIndex","jejucafeMarkers","seogwipocafeIndex","seogwipocafeMarkers","cafeIndex","jejurestIndex","jejurestMarkers","seogwiporestIndex","seogwiporestMarkers","restIndex","jejuhotelIndex","jejuhotelMarkers","seogwipohotelIndex","seogwipohotelMarkers","hotelIndex","name","data","created","process","mounted","window","kakao","maps","initMap","script","document","createElement","onload","load","src","head","appendChild","container","getElementById","options","center","LatLng","level","map","Map","CustomOverlay","InfoWindow","relayout","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","content","className","clientWidth","innerHTML","terrain_btn","querySelector","addEventListener","event","onSelectMap","traffic_btn","roadview_btn","use_district_btn","jejusi_btn","console","log","seogwiposi_btn","make_cafe_data","features","jeju_cafe_all_data","forEach","element","place_name","my_address","address_name","city","split","my_link","place_url","position","y","x","phone","citydrawingMarker","toRaw","make_rest_data","jeju_rest_all_data","make_hotel_data","hotel_all_data","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","marker","Marker","clickable","image","iwRemveable","infowindow","removable","addListener","open","push","main_index","cur","setMap","maptype","removeOverlayMapTypeId","setMapTypeId","MapTypeId","ROADMAP","TRAFFIC","ROADVIEW","TERRAIN","USE_DISTRICT","addOverlayMapTypeId","length","oleum_data","geometry","coordinates","dia","properties","drawingCircle","olle_data","coord","points","path","point","drawingPolyline","halla_data","hiking_data","PMNTN_NM","zpt_data","type","fillrealcolor","backcolor","circle","Circle","radius","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","infoBox","yAnchor","mouseEvent","setOptions","strokeStyle","setPosition","latLng","realcolor","polyline","Polyline","changeLayer","currentLayer","ncpclientid","naver","async","defer","mapOptions","zoom","style","ZoomControlStyle","LAGRE","Position","RIGHT_CENTER","bicycle_btn","markerOptions","icon","url","origin","anchor","scaledSize","Event","e","getMap","close","TrafficLayer","interval","StreetLayer","BicycleLayer","CadastralLayer","refresh","join","borderWidth","disableAnchor","backgroundColor","pixelOffset","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","SuppressedError","fastDeepEqual","equal","a","b","constructor","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","DEFAULT_ID","LoaderStatus","Loader","apiKey","authReferrerPolicy","channel","client","language","libraries","mapIds","nonce","region","retries","version","callbacks","loading","errors","instance","isEqual","Error","JSON","stringify","status","FAILURE","SUCCESS","LOADING","INITIALIZED","failed","createUrl","deleteScript","remove","loadPromise","loadCallback","err","error","google","importLibrary","execute","fn","setScript","callback","params","v","_b","_a","g","h","k","p","c","l","q","m","d","r","Set","URLSearchParams","u","f","n","set","replace","t","toLowerCase","onerror","append","warn","add","libraryPromises","library","all","ErrorEvent","loadErrorCallback","reset","onerrorEvent","resetIfRetryingFailed","delay","Math","pow","setTimeout","cb","loader","mapProp","lat","lng","mapTypeControlOptions","MapTypeControlStyle","HORIZONTAL_BAR","TOP_RIGHT","scale","BicyclingLayer","_hoisted_4","overlay","hallaLayer","VectorLayer","olleLayer","hikeLayer","zptLayer","oleumLayer","jejucafeLayer","seogwipocafeLayer","jejurestLayer","seogwiporestLayer","jejuhotelLayer","seogwipohotelLayer","baseLayer","TileLayer","satelliteLayer","hybridLayer","grayLayer","osmLayer","my_interaction","projection","target","XYZ","OlLayerTile","OSM","OlMap","layers","view","OlView","setVisible","basemap_btn","osmmap_btn","satellitemap_btn","hybridmap_btn","graymap_btn","check_button_jejusi","check_button_seogwiposi","ct","link","address","closer","Overlay","autoPan","animation","duration","onclick","undefined","blur","addOverlay","selected","on","selectStyle","setStyle","oleum_feature","forEachFeatureAtPixel","pixel","feature","get","_myStroke","Stroke","color","width","_myFill","Fill","CircleStyle","fill","stroke","Style","layerFilter","layer","oll_feature","hall_feature","hike_feature","zpt_feature","point_feature","coordinate","get_circlelayer","addLayer","removeLayer","fname","oleumstyleFunction","mystyle","oleum_source","VectorSource","format","GeoJSON","get_polylineLayer","styleFunction","num","nickname","label","ch_offset","polyline_source","polylineLayer","j_source","s_source","feat","Feature","addFeature","Icon","components","Header","MyKakaoMap","MyNaverMap","MyGoogleMap","MyOpenLayerMap"],"sourceRoot":""}