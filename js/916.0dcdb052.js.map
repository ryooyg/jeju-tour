{"version":3,"file":"js/916.0dcdb052.js","mappings":"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","sources":["webpack://jeju-tour/./src/components/Header.vue","webpack://jeju-tour/./src/components/Header.vue?801b","webpack://jeju-tour/./src/views/HomeView.vue","webpack://jeju-tour/./src/components/KakaoMap.vue","webpack://jeju-tour/./src/components/KakaoMap.vue?05cf","webpack://jeju-tour/./src/components/NaverMap.vue","webpack://jeju-tour/./src/components/NaverMap.vue?cd4b","webpack://jeju-tour/./src/components/GoogleMap.vue","webpack://jeju-tour/../node_modules/tslib/tslib.es6.js","webpack://jeju-tour/../node_modules/fast-deep-equal/index.js","webpack://jeju-tour/../../src/index.ts","webpack://jeju-tour/./src/components/GoogleMap.vue?751e","webpack://jeju-tour/./src/components/OpenLayerMap.vue","webpack://jeju-tour/./src/components/OpenLayerMap.vue?c24e","webpack://jeju-tour/./src/views/HomeView.vue?1da1"],"sourcesContent":["<template>\r\n    <div class=\"fheader\">        \r\n        <b-card title=\"Card Title\" no-body>\r\n            <b-card-header header-tag=\"nav\">\r\n                <b-nav align=\"center\">\r\n                    <b-button pill size=\"sm\" variant=\"success\" to=\"/userinfo\" v-if=\"!homeDisplay\">사용자정보</b-button>\r\n                    <b-button pill size=\"sm\" variant=\"success\" to=\"/admin\" v-if=\"this.getAuth===true && !homeDisplay\">권한설정</b-button>\r\n                    <b-button size=\"sm\" variant=\"success\" to=\"/home\" v-if=\"homeDisplay\">홈</b-button>\r\n                    <b-button size=\"sm\" variant=\"danger\" @click=\"this.signOut\" v-if=\"!homeDisplay\">로그아웃</b-button>\r\n                </b-nav>\r\n            </b-card-header>\r\n            <!-- <b-card-body v-if=\"this.getAuth===true\">\r\n                <b-card-text> 모든 권한 관리자인 [ {{this.getUserName}} ]님 환영합니다.</b-card-text>\r\n            </b-card-body>\r\n            <b-card-body v-if=\"this.getAuth===false\">\r\n                <b-card-text> {{this.getUserName}}님 환영합니다. </b-card-text>\r\n            </b-card-body> -->\r\n\r\n        </b-card>\r\n            \r\n        <!-- <b-nav align=\"center\">\r\n            <b-nav-text> {{this.getUserName}}님 환영합니다. </b-nav-text>\r\n            <b-button size=\"sm\" variant=\"danger\" @click=\"this.signOut\">로그아웃</b-button>\r\n            <b-button pill size=\"sm\" variant=\"success\" to=\"/ticketcount\" v-if=\"this.getAuth===true\">당일식수</b-button>\r\n            <b-button pill size=\"sm\" variant=\"success\" to=\"/userinfo\" v-if=\"this.getAuth===true\">사용자설정</b-button>\r\n            <b-nav-text>계정 : {{this.getEmail}}</b-nav-text>\r\n            <b-nav-item to=\"/ticketcount\" v-if=\"this.getAuth>=1\">당일식수</b-nav-item>\r\n            <b-button @click=\"this.signOut\" size=\"sm\" variant=\"danger\">로그아웃</b-button>            \r\n        </b-nav>         -->\r\n    </div>    \r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    computed: {\r\n        // getPhoto() {\r\n        // return this.$store.state.auth.user.photoURL;\r\n        // },\r\n        getAuth() {\r\n            return this.$store.state.auth.user.authority;\r\n        },\r\n        getUserName() {\r\n        return this.$store.state.auth.user.username;\r\n        },\r\n        getEmail() {\r\n        return this.$store.state.auth.user.email;\r\n        },\r\n    },\r\n    methods: {\r\n        signOut() {\r\n        this.$store.dispatch(\"signOut\");\r\n        },\r\n    },\r\n    props:{\r\n        homeDisplay: Boolean,\r\n    }    \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.fheader {\r\n    padding: 5px;\r\n}\r\n</style>","import { render } from \"./Header.vue?vue&type=template&id=1f45801a&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=1f45801a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f45801a\"]])\n\nexport default __exports__","<template>\r\n    <Header :homeDisplay=\"this.homeDisplay\" />\r\n    <div class=\"main_display\">        \r\n        <b-button pill variant=\"primary\" @click=\"changeMap\">{{this.nextmap}}으로 변경</b-button>            \r\n        <div class=\"map_display\">        \r\n            <MyKakaoMap     v-if=\"this.mapindex==0\"/> \r\n            <MyNaverMap     v-if=\"this.mapindex==1\"/>\r\n            <MyOpenLayerMap v-if=\"this.mapindex==2\"/>\r\n            <MyGoogleMap    v-if=\"this.mapindex==3\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {ref} from 'vue';\r\nimport Header from \"@/components/Header.vue\";\r\nconst homeDisplay = ref(false);\r\nimport MyKakaoMap from \"@/components/KakaoMap\";\r\nimport MyNaverMap from \"@/components/NaverMap\";\r\nimport MyGoogleMap from \"@/components/GoogleMap\";\r\nimport MyOpenLayerMap from \"@/components/OpenLayerMap\"\r\n\r\n// import oleum from \"../assets/jeju_oleum.json\"\r\n// import olle from \"../assets/jeju_olle_trail.json\"\r\n// import halla from \"../assets/jeju_halla_trail.json\"\r\n// import hiking from \"../assets/jeju_hiking_total.json\"\r\n\r\n// import { ref } from 'vue'\r\n// import { useElementSize } from '@vueuse/core'\r\n\r\n// var init_height = '380px';\r\n// var init_width = '350px'\r\n\r\nexport default{\r\n    name: \"HomeView\",\r\n\r\n    components: {\r\n        Header,\r\n        MyKakaoMap,\r\n        MyNaverMap,\r\n        MyGoogleMap,\r\n        MyOpenLayerMap,\r\n    },\r\n\r\n    data() {\r\n        return{\r\n            homeDisplay:homeDisplay,\r\n            mapindex: 0,\r\n            nextmap:'네이버맵',\r\n            // mapindex: 0,\r\n            // nextmap:'네이버맵',\r\n            // height: init_height,\r\n            // width: init_width,\r\n            // oleum_data: oleum,\r\n            // olle_data: olle,\r\n            // halla_data: halla,\r\n            // hiking_data: hiking,\r\n        }\r\n    },\r\n\r\n    methods:{\r\n\r\n        changeMap() {            \r\n            \r\n            this.mapindex++;           \r\n            \r\n            if (this.mapindex==0) { this.nextmap='네이버맵'}\r\n            if (this.mapindex==1) { this.nextmap='오픈맵'}\r\n            if (this.mapindex==2) { this.nextmap='구글맵'}\r\n            if (this.mapindex==3) { this.nextmap='카카오맵'}\r\n            \r\n            if (this.mapindex > 3) {\r\n                this.mapindex=0;\r\n                this.nextmap='네이버맵';\r\n            }\r\n        },\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.main_display {\r\n    padding: 5px;\r\n}\r\n.map_display {\r\n    padding-top : 3px;\r\n}\r\n</style>\r\n\r\n// .container {\r\n//     padding-top: 5px;\r\n//     background-color: white;\r\n//     max-height: 100%;\r\n//     max-width: 100%;\r\n// }\r\n","<template>\r\n    <div id=\"map\"></div>\r\n    <div class=\"bot1\">\r\n        <b-button pill variant=\"primary\" @click=\"displayOleum\">오름</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayOlle\">제주올레</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHalla\">한라산 둘레길</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHiking\">등산로</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayzpt\">제로포인트루트</b-button>\r\n    </div>\r\n    <div class=\"bot2\">\r\n        <b-button pill variant=\"success\" @click=\"displayCafe(true)\">제주카페</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayRest(true)\">제주식당</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayHotel(true)\">제주숙박</b-button>\r\n    </div> \r\n    <div class=\"bot3\">\r\n        <b-button pill variant=\"primary\" @click=\"displayReg\">제주예보구역</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayEquv(true)\">제주기상장비</b-button>\r\n    </div>\r\n</template>\r\n    \r\n\r\n<script>\r\nimport { toRaw } from \"vue\";\r\nimport { ref } from 'vue';\r\n\r\nimport oleum_data from \"../assets/jeju_oleum.json\"\r\nimport olle_data from \"../assets/jeju_olle_trail.json\"\r\nimport halla_data from \"../assets/jeju_halla_trail.json\"\r\nimport hiking_data from \"../assets/jeju_hiking_total.json\"\r\nimport zpt_data from \"../assets/jeju_zpt.json\"\r\nimport land_data from \"../assets/jeju_land.json\"\r\n\r\nimport jeju_rest_all_data from \"../assets/jeju_rest_all.json\"\r\nimport jeju_cafe_all_data from \"../assets/jeju_cafe_all.json\"\r\nimport hotel_all_data from \"../assets/jeju_hotel_all.json\"\r\n\r\nimport equv_all_data from \"../assets/jeju_obs.json\"\r\nvar apikey= ref('');\r\n\r\nvar customOverlay=({});\r\nvar infoWindow=({});\r\n\r\nvar cataindex=0;\r\nvar hallaIndex=true;\r\nvar halla_polylines=[];\r\nvar olleIndex=true;\r\nvar olle_polylines=[];\r\nvar hikingIndex=true;\r\nvar hike_polylines=[];\r\nvar zptIndex=true;\r\nvar zpt_polylines=[];\r\nvar oleumIndex=true;\r\nvar oleum_circles=[];\r\n\r\nvar regIndex=true;\r\nvar reg_polygones=[];\r\n\r\nvar jejuequvIndex=true;\r\nvar jejuequvMarkers=[];\r\nvar seogwipoequvIndex=true;\r\nvar seogwipoequvMarkers=[];\r\nvar equvIndex = true;\r\n\r\nvar jejucafeIndex=true;\r\nvar jejucafeMarkers=[];\r\nvar seogwipocafeIndex=true;\r\nvar seogwipocafeMarkers=[];\r\nvar cafeIndex = true;\r\n\r\nvar jejurestIndex=true;\r\nvar jejurestMarkers=[];\r\nvar seogwiporestIndex=true;\r\nvar seogwiporestMarkers=[];\r\nvar restIndex = true;\r\n\r\nvar jejuhotelIndex=true;\r\nvar jejuhotelMarkers=[];\r\nvar seogwipohotelIndex=true;\r\nvar seogwipohotelMarkers=[];\r\nvar hotelIndex= true;\r\n\r\nvar changeMaptype;\r\nvar currentTypeId;\r\n\r\nexport default {\r\n    name: \"KakaoMap\",\r\n\r\n    data() {\r\n        return {            \r\n            // jejusi_index:jejusi_index,\r\n            // seogwiposi_index:seogwiposi_index,\r\n            // my_btns:[\r\n            //     { caption: '제주카페', state:false, func : this.displayCafe(true)},\r\n            //     { caption: '제주식당', state:true , func : this.displayRest(true)},\r\n            //     { caption: '제주숙박', state:false, func : this.displayHotel(true)},\r\n            // ]                        \r\n        };\r\n    },\r\n\r\n    created() {\r\n        apikey = process.env.VUE_APP_KAKAOMAP_API_KEY;        \r\n        // console.log('api_key ', apikey);\r\n    },\r\n\r\n    mounted() {\r\n        if (!window.kakao || !window.kakao.maps) {            \r\n            const script = document.createElement(\"script\");\r\n            script.onload = () => kakao.maps.load(this.initMap);\r\n            script.src =\"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=\"+apikey+'&libraries=services';\r\n            document.head.appendChild(script);\r\n        } else {\r\n            this.initMap();            \r\n        }            \r\n    },\r\n\r\n    methods: {\r\n\r\n        initMap() {\r\n\r\n            const container = document.getElementById(\"map\");           \r\n            // container.style.width = `${this.width}`;\r\n            // container.style.height = `${this.height}`;            \r\n            const options = {\r\n                center: new kakao.maps.LatLng(33.38, 126.58),\r\n                level: 10,\r\n            };\r\n            this.map = new kakao.maps.Map(container, options), \r\n            customOverlay = new kakao.maps.CustomOverlay({}),\r\n            infoWindow = new kakao.maps.InfoWindow({});\r\n            this.map.relayout();\r\n\r\n            var mapTypeControl = new kakao.maps.MapTypeControl();\r\n            this.map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n            var zoomControl = new kakao.maps.ZoomControl();\r\n            this.map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n\r\n            var content = document.createElement('div');\r\n            content.className = 'modes';\r\n\r\n            if ( container.clientWidth > 360 ) {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                '<button id=\"terrain\">지형</button>\\n' +\r\n                '<button id=\"traffic\">교통</button>\\n' +\r\n                '<button id=\"roadview\">도로</button>\\n' +\r\n                '<button id=\"use_district\">지적</button>\\n' +\r\n                '<button id=\"jejusi\">제주시</button>\\n' +\r\n                '<button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n';\r\n            } else {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                '<button id=\"terrain\">지형</button>\\n' +\r\n                '<button id=\"traffic\">교통</button>\\n' +\r\n                '<div>\\n'+\r\n                '   <button id=\"roadview\">도로</button>\\n' +\r\n                '   <button id=\"use_district\">지적</button>\\n' +\r\n                '</div>\\n'+\r\n                '<div>\\n'+\r\n                '   <button id=\"jejusi\">제주시</button>\\n' +\r\n                '   <button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n'+\r\n                '</div>\\n';\r\n            }            \r\n\r\n            container.appendChild(content);              \r\n            // console.log(document);\r\n\r\n            // const hybrid_btn = document.querySelector('#hybrid');  \r\n            // hybrid_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('hybrid')\r\n            // });\r\n\r\n            const terrain_btn = document.querySelector('#terrain');  \r\n            terrain_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('terrain')\r\n            });\r\n\r\n            const traffic_btn = document.querySelector('#traffic');  \r\n            traffic_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('traffic')\r\n            });\r\n\r\n            const roadview_btn = document.querySelector('#roadview');  \r\n            roadview_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('roadview')\r\n            });\r\n\r\n            const use_district_btn = document.querySelector('#use_district');  \r\n            use_district_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('use_district')\r\n            });\r\n\r\n            const jejusi_btn = document.querySelector('#jejusi');  \r\n            jejusi_btn.addEventListener('click', (event) => {\r\n                if ( !cafeIndex ) {\r\n                    jejucafeIndex = jejucafeIndex ? false : true\r\n                    seogwipocafeIndex = false\r\n                    cafeIndex = false                                \r\n                    this.displayCafe(false)\r\n                }\r\n\r\n                if ( !restIndex ) {\r\n                    jejurestIndex = jejurestIndex ? false : true\r\n                    seogwiporestIndex = false\r\n                    restIndex = false                                \r\n                    this.displayRest(false)\r\n                }\r\n\r\n                if ( !hotelIndex ) {\r\n                    jejuhotelIndex = jejuhotelIndex ? false : true\r\n                    seogwipohotelIndex = false\r\n                    hotelIndex = false                                \r\n                    this.displayHotel(false)\r\n                }\r\n                \r\n                if ( !equvIndex ) {\r\n                    jejuequvIndex = jejuequvIndex ? false : true\r\n                    seogwipoequvIndex = false\r\n                    equvIndex = false                                \r\n                    this.displayEquv(false)\r\n                }               \r\n                \r\n            });\r\n\r\n            const seogwiposi_btn = document.querySelector('#seogwiposi');  \r\n            seogwiposi_btn.addEventListener('click', (event) => {\r\n                \r\n                if ( !cafeIndex ) {\r\n                    seogwipocafeIndex = seogwipocafeIndex ? false : true\r\n                    cafeIndex = false\r\n                    jejucafeIndex = false\r\n                    this.displayCafe(false)\r\n                } \r\n                if ( !restIndex ) {\r\n                    seogwiporestIndex = seogwiporestIndex ? false : true\r\n                    restIndex = false\r\n                    jejurestIndex = false\r\n                    this.displayRest(false)\r\n                } \r\n                if ( !hotelIndex ) {\r\n                    seogwipohotelIndex = seogwipohotelIndex ? false : true\r\n                    hotelIndex = false\r\n                    jejuhotelIndex = false\r\n                    this.displayHotel(false)\r\n                }\r\n\r\n                if ( !equvIndex ) {\r\n                    seogwipoequvIndex = seogwipoequvIndex ? false : true\r\n                    equvIndex = false\r\n                    jejuequvIndex = false\r\n                    this.displayEquv(false)\r\n                }\r\n                \r\n                \r\n            });\r\n\r\n            // console.log(div);\r\n            // // toRaw(this.map).relayout();            \r\n            // this.make_cafe_data()\r\n            // this.make_rest_data()\r\n            // this.make_hotel_data()\r\n        },\r\n\r\n        \r\n        make_cafe_data() {\r\n            cataindex=10;\r\n            let features = jeju_cafe_all_data.features;\r\n            features.forEach( element => {\r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new kakao.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;                        \r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_rest_data() {\r\n            cataindex=11;\r\n            let features = jeju_rest_all_data.features;\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new kakao.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_hotel_data() {\r\n            cataindex=12;\r\n            let features = hotel_all_data.features;            \r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new kakao.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);\r\n            });\r\n\r\n        },\r\n\r\n        make_equv_data() {\r\n            \r\n            cataindex=13;\r\n            let features = equv_all_data.features;\r\n            features.forEach( element => {\r\n                let name = element.properties['지점명']\r\n                let ename = element.properties['장비명']\r\n                let lng = element.properties['경도']\r\n                let lat = element.properties['위도']\r\n                let dpoint = element.properties['기관지점번호']\r\n                let my_address = element.properties['법정동 주소']\r\n                let city=''\r\n                if( my_address !== null ){\r\n                    city = my_address.split(' ')[1]\r\n                }                \r\n                let position = new kakao.maps.LatLng(lat, lng)\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, ename, dpoint, city);                \r\n            });\r\n        },\r\n\r\n        citydrawingMarker(cataindex, map, position, name, my_address, my_link, phone, city) {\r\n\r\n            var imageSrc = '';\r\n            \r\n            if (cataindex == 10) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_cafe.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_cafe.png';\r\n                }                \r\n            } else if (cataindex == 11) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_rest.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_rest.png';\r\n                }                \r\n            } else if (cataindex ==12) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_hotel.png';\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_hotel.png';\r\n                }\r\n            } else if (cataindex ==13) {\r\n\r\n                if ( my_link === '종관기상관측장비') {\r\n                    imageSrc = '/markers/asos.png'\r\n                } else if (my_link ==='방재기상관측장비') {\r\n                    imageSrc = '/markers/aws.png'\r\n                } else if (my_link ==='해양기상부이') {\r\n                    imageSrc = '/markers/buoy.png'\r\n                } else if (my_link ==='파고부이') {\r\n                    imageSrc = '/markers/tidalbuoy.png'\r\n                } else if (my_link ==='지진관측장비') {\r\n                    imageSrc = '/markers/earth.png'\r\n                } else if (my_link ==='연직바람관측장비') {\r\n                    imageSrc = '/markers/wind.png'\r\n                } else if (my_link ==='연안방재관측장비') {\r\n                    imageSrc = '/markers/beacon.png'\r\n                } else {\r\n                    console.log(my_link)\r\n                }                \r\n            }\r\n\r\n            var imageSize = new kakao.maps.Size(16, 17);\r\n            var imageOption = {offset: new kakao.maps.Point(8, 9)};            \r\n            var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption)\r\n            var marker = new kakao.maps.Marker({\r\n                position : position,\r\n                clickable: true,\r\n                image : markerImage,\r\n                title : name+'_'+my_link,\r\n            });\r\n\r\n            var content = '<div class=\"placeinfo\">'\r\n                if ( cataindex ===13) {\r\n                    content +='   <a class=\"title\" title=\"' + name + '\">' + name + '_'+ my_link+'</a>';\r\n                } else {\r\n                    content +='   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n                }\r\n                    content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n                if ( cataindex ===13) {\r\n                    content += '      <span class=\"tel\"> 지점번호 : ' + phone + '</span>'; \r\n                } else {\r\n                    content += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n                }                \r\n                    content += '<div class=\"after\"></div>';\r\n\r\n            var iwRemveable = true;\r\n            var infowindow = new kakao.maps.InfoWindow({\r\n                content: content,\r\n                removable: iwRemveable,\r\n            });            \r\n            new kakao.maps.event.addListener(marker, 'click', function() {                                  \r\n                infowindow.open(map, marker);\r\n            })\r\n\r\n            if (cataindex ==10) {\r\n                if (city === '제주시') jejucafeMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipocafeMarkers.push(marker)\r\n            } else if (cataindex ==11) {\r\n                if (city === '제주시') jejurestMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwiporestMarkers.push(marker)\r\n            } else if (cataindex ==12) {\r\n                if (city === '제주시') jejuhotelMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipohotelMarkers.push(marker)\r\n            } else if (cataindex ==13) {\r\n                if (city === '제주시') jejuequvMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipoequvMarkers.push(marker)\r\n            }           \r\n        },\r\n\r\n        displayEquv(main_index){\r\n            // console.log(' cafeIndex ', cafeIndex, 'jejucafelIndex ',jejucafeIndex, 'seogwipocafeIndex ', seogwipocafeIndex  )\r\n            if(equvIndex){\r\n                this.make_equv_data()                \r\n                if ( jejuequvIndex ) jejuequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipoequvIndex ) seogwipoequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                equvIndex = false\r\n                jejuequvIndex = false\r\n                seogwipoequvIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejuequvMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipoequvMarkers.map((cur) => cur.setMap(null))\r\n                    equvIndex = true\r\n                    jejuequvIndex = true\r\n                    seogwipoequvIndex = true\r\n                } else {\r\n                    if ( jejuequvIndex ) jejuequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejuequvMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipoequvIndex ) seogwipoequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipoequvMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayCafe(main_index){\r\n            // console.log(' cafeIndex ', cafeIndex, 'jejucafelIndex ',jejucafeIndex, 'seogwipocafeIndex ', seogwipocafeIndex  )\r\n            if(cafeIndex){\r\n                this.make_cafe_data()                \r\n                if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                cafeIndex = false\r\n                jejucafeIndex = false\r\n                seogwipocafeIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejucafeMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                    cafeIndex = true\r\n                    jejucafeIndex = true\r\n                    seogwipocafeIndex = true\r\n                } else {\r\n                    if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejucafeMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayRest(main_index){\r\n            // console.log(' restIndex ', restIndex, 'jejurestIndex ',jejurestIndex, 'seogwiporestIndex ', seogwiporestIndex  )\r\n            if(restIndex){\r\n                this.make_rest_data()                \r\n                if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                restIndex = false\r\n                jejurestIndex = false\r\n                seogwiporestIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejurestMarkers.map((cur) => cur.setMap(null))\r\n                    seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                    restIndex = true\r\n                    jejurestIndex = true\r\n                    seogwiporestIndex = true\r\n                } else {\r\n                    if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejurestMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayHotel(main_index){\r\n            // console.log(' hotelIndex ', hotelIndex, 'jejuhotelIndex ',jejuhotelIndex, 'seogwipohotelIndex ', seogwipohotelIndex  )\r\n            if(hotelIndex){\r\n                this.make_hotel_data()                \r\n                if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                hotelIndex = false\r\n                jejuhotelIndex = false\r\n                seogwipohotelIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejuhotelMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                    hotelIndex = true\r\n                    jejuhotelIndex = true\r\n                    seogwipohotelIndex = true\r\n                } else {\r\n                    if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejuhotelMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },        \r\n\r\n        onSelectMap: function(maptype) {\r\n            if(maptype ==='roadmap') {\r\n                if (currentTypeId) {\r\n                    this.map.removeOverlayMapTypeId(currentTypeId);    \r\n                }\r\n                this.map.setMapTypeId(kakao.maps.MapTypeId.ROADMAP)\r\n            } \r\n            // else if (maptype ==='hybrid') {\r\n            //     this.map.setMapTypeId(kakao.maps.MapTypeId.HYBRID) \r\n            // } \r\n            else {\r\n                \r\n                if (maptype === 'traffic') {\r\n                    changeMaptype = kakao.maps.MapTypeId.TRAFFIC;\r\n                } else if (maptype === 'roadview') {\r\n                    changeMaptype = kakao.maps.MapTypeId.ROADVIEW;\r\n                } else if (maptype === 'terrain') {\r\n                    changeMaptype = kakao.maps.MapTypeId.TERRAIN;\r\n                } else if (maptype === 'use_district') {\r\n                    changeMaptype = kakao.maps.MapTypeId.USE_DISTRICT;           \r\n                }\r\n                if (currentTypeId) {\r\n                    this.map.removeOverlayMapTypeId(currentTypeId);    \r\n                }\r\n                this.map.addOverlayMapTypeId(changeMaptype);\r\n                currentTypeId = changeMaptype;\r\n            }\r\n            \r\n            // else if (maptype ==='terrain') {\r\n            //     this.map.addOverlayMapTypeId(kakao.maps.MapTypeId.TERRAIN)\r\n            //     this.map.removeOverlayMapTypeId(kakao.maps.MapTypeId.TRAFFIC) \r\n            // } else if (maptype ==='traffic') {\r\n            //     // const container = document.getElementById(\"map\"); \r\n            //     // const now_center = this.map.getCenter()\r\n            //     // const options = {\r\n            //     //     center: new kakao.maps.LatLng(now_center.Ma, now_center.La),\r\n            //     //     level: 5,\r\n            //     // };\r\n            //     // this.map = new kakao.maps.Map(container, options) \r\n            //     this.map.addOverlayMapTypeId(kakao.maps.MapTypeId.TRAFFIC)\r\n            // }            \r\n        },\r\n\r\n        displayOleum() {\r\n\r\n            cataindex=1;\r\n            if(oleumIndex) {\r\n\r\n                if(oleum_circles.length <=0 ) {\r\n                    let features = oleum_data.features;\r\n                    features.forEach( element => {\r\n                        let position = new kakao.maps.LatLng(element.geometry.coordinates[1], element.geometry.coordinates[0]);\r\n                        let dia = element.properties['반경']; \r\n                        let name = element.properties['오름명']\r\n                        this.drawingCircle(cataindex, toRaw(this.map), position, dia, name);                        \r\n                    });                    \r\n                } else {\r\n                    oleum_circles.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                oleumIndex = false;\r\n            } else {\r\n                oleum_circles.map( (cur) => cur.setMap(null));\r\n                oleumIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayOlle() {\r\n\r\n            cataindex=1;\r\n            if(olleIndex) {\r\n                if( olle_polylines.length <=0 ) {\r\n                    let features = olle_data.features;            \r\n                    features.forEach( element => {      \r\n                        let name = element.properties.name;             \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex,toRaw(this.map), path, name);\r\n                        });\r\n                    });\r\n                } else {\r\n                    olle_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }                \r\n                olleIndex = false;\r\n            } else {\r\n                olle_polylines.map( (cur) => cur.setMap(null));\r\n                olleIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHalla() {\r\n\r\n            cataindex=2; \r\n            if(hallaIndex) {\r\n                if ( halla_polylines.length <=0 ) {\r\n                    let features = halla_data.features;            \r\n                    features.forEach( element => { \r\n                        let name = element.properties.name;  \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);                     \r\n                        });\r\n                    });\r\n                } else {\r\n                    halla_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                hallaIndex = false;\r\n            } else {\r\n                halla_polylines.map( (cur) => cur.setMap(null));\r\n                hallaIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayHiking() {\r\n\r\n            cataindex=3;\r\n            if(hikingIndex){\r\n                if ( hike_polylines.length <=0 ) {                    \r\n                    let features = hiking_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = '등산로 '+ element.properties.PMNTN_NM;                \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                        });\r\n                    });\r\n                } else {\r\n                    hike_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                hikingIndex = false;\r\n            } else {\r\n                hike_polylines.map( (cur) => cur.setMap(null));\r\n                hikingIndex = true;\r\n            }          \r\n        },\r\n\r\n        displayzpt(){\r\n\r\n            cataindex=4;\r\n            if(zptIndex){\r\n                if ( zpt_polylines.length <=0 ) {                    \r\n                    let features = zpt_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = element.properties.name;                \r\n                        let coord = element.geometry.coordinates;\r\n\r\n                        if ( element.geometry.type=='LineString' ) {                            \r\n                            \r\n                            var path=[];                            \r\n                            coord.forEach( point => {\r\n                                let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);              \r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);\r\n\r\n                        } else if (element.geometry.type=='MultiLineString'){\r\n                            \r\n                            coord.forEach( points => {\r\n                                var path=[];\r\n                                points.forEach ( point => {\r\n                                    let position = new kakao.maps.LatLng(point[1], point[0]);\r\n                                    path.push(position);\r\n                                });\r\n                                this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                            });\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n                    zpt_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                zptIndex = false;\r\n            } else {\r\n                zpt_polylines.map( (cur) => cur.setMap(null));\r\n                zptIndex = true;\r\n            }\r\n\r\n        },\r\n\r\n        displayReg() {\r\n            cataindex=5;\r\n            if(regIndex){\r\n                if ( reg_polygones.length <=0 ) {                    \r\n                    let features = land_data.features;\r\n                    features.forEach( element => {\r\n                        let name = element.properties.Name;\r\n                        let coord = element.geometry.coordinates;\r\n                        \r\n                        if ( element.geometry.type=='Polygon' ) {                                                        \r\n                            var path=[]                            \r\n                            coord.forEach( point => {\r\n                                let position = new kakao.maps.LatLng(point[1], point[0])\r\n                                path.push(position)              \r\n                            })\r\n                            this.drawingPolygon(cataindex, toRaw(this.map), path, name)\r\n                        } else if (element.geometry.type=='MultiPolygon'){\r\n                            coord.forEach( mpoints => {\r\n                                var path=[]\r\n                                mpoints.forEach ( points => {\r\n                                    points.forEach( point => {\r\n                                        let position = new kakao.maps.LatLng(point[1], point[0])\r\n                                        path.push(position)\r\n                                    })\r\n                                })\r\n                                this.drawingPolygon(cataindex, toRaw(this.map), path, name)                                \r\n                            })\r\n                        }\r\n\r\n                    })\r\n                } else {\r\n                    reg_polygones.map( (cur) => cur.setMap(toRaw(this.map)))                    \r\n                }\r\n                regIndex = false;\r\n            } else {\r\n                reg_polygones.map( (cur) => cur.setMap(null));\r\n                regIndex = true;\r\n            }\r\n        },\r\n\r\n        drawingCircle(cataindex, map, position, dia, name) {\r\n            \r\n            let fillrealcolor='';\r\n            let backcolor='';\r\n            \r\n            if (cataindex==1) {\r\n                fillrealcolor = '#E51D1A';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                fillrealcolor = '#00FF0F';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==3) { \r\n                fillrealcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                fillrealcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var circle = new kakao.maps.Circle({\r\n                    map: map,\r\n                    center : position,\r\n                    radius: dia,    \r\n                    strokeColor: '#5347AA',\r\n                    strokeOpacity: 0.5,\r\n                    strokeWeight: 2,\r\n                    fillColor: fillrealcolor,\r\n                    fillOpacity: 0.3,\r\n                    // 원의 중심좌표 입니다 \r\n                    // radius: 5000, // 미터 단위의 원의 반지름입니다 \r\n                    // strokeWeight: 5, // 선의 두께입니다 \r\n                    // strokeColor: '#75B8FA', // 선의 색깔입니다\r\n                    // strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    // strokeStyle: 'dashed', // 선의 스타일 입니다\r\n                    // fillColor: '#CFE7FF', // 채우기 색깔입니다\r\n                    // fillOpacity: 0.7  // 채우기 불투명도 입니다   \r\n            });           \r\n            \r\n            var infoBox = new kakao.maps.CustomOverlay({\r\n                content: name + '  [반경 '+dia+' m]',\r\n                yAnchor: 1.5,\r\n            });\r\n\r\n            new kakao.maps.event.addListener(circle, 'mouseover', function(mouseEvent) {                                  \r\n                circle.setOptions({\r\n                    fillOpacity: 0.6,\r\n                    strokeStyle: 'dashed'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            })\r\n            \r\n            new kakao.maps.event.addListener(circle, 'mousemove', function(mouseEvent) {                \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new kakao.maps.event.addListener(circle, 'mouseout', function() {                \r\n                circle.setOptions({\r\n                    fillOpacity: 0.3,\r\n                    strokeStyle: 'line'\r\n                });\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==1) {\r\n                oleum_circles.push(circle);\r\n            } \r\n            // else if (cataindex==2) {\r\n            //     halla_polylines.push(polyline);\r\n            // } else if (cataindex==3) { \r\n            //     hike_polylines.push(polyline);\r\n            // } else if (cataindex==4) { \r\n            //     zpt_polylines.push(polyline);\r\n            // }  \r\n        },\r\n\r\n        drawingPolygon(cataindex, map, path, name){\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==5) { \r\n                realcolor = '#0000FF';\r\n                backcolor = '#00FF00';\r\n            }\r\n\r\n            var polygon = new kakao.maps.Polygon({\r\n                map: map,\r\n                path:path, // 그려질 다각형의 좌표 배열입니다\r\n                strokeWeight: 2, // 선의 두께입니다\r\n                strokeColor: realcolor, // 선의 색깔입니다\r\n                strokeOpacity: 0.8, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid', // 선의 스타일입니다\r\n                fillColor: backcolor, // 채우기 색깔입니다\r\n                fillOpacity: 0.01 // 채우기 불투명도 입니다\r\n            });\r\n\r\n            var infoBox = new kakao.maps.CustomOverlay({\r\n                content: name,\r\n                yAnchor: 1,\r\n            });\r\n\r\n            new kakao.maps.event.addListener(polygon, 'mouseover', function(mouseEvent) {                                  \r\n                polygon.setOptions({\r\n                    fillColor: backcolor, // 채우기 색깔입니다\r\n                    fillOpacity: 0.8, \r\n                    strokeWeight: 3,\r\n                    strokeColor: backcolor,\r\n                    strokeOpacity: 1,\r\n                    strokeStyle: 'solid'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n                // console.log('ddd ', infoBox);\r\n            })\r\n            \r\n            new kakao.maps.event.addListener(polygon, 'mousemove', function(mouseEvent) {                \r\n                // customOverlay.setPosition(mouseEvent.latLng); \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new kakao.maps.event.addListener(polygon, 'mouseout', function() {                \r\n                polygon.setOptions({\r\n                    strokeWeight: 2, // 선의 두께입니다\r\n                    strokeColor: realcolor, // 선의 색깔입니다\r\n                    strokeOpacity: 0.8, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    strokeStyle: 'solid', // 선의 스타일입니다\r\n                    fillColor: backcolor, // 채우기 색깔입니다\r\n                    fillOpacity: 0.01 \r\n                })\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==5) { \r\n                reg_polygones.push(polygon);\r\n            }  \r\n\r\n        },\r\n\r\n        drawingPolyline(cataindex, map, path, name) {\r\n\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==1) {\r\n                realcolor = '#0004FF';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                realcolor = '#FF0000';\r\n                backcolor = '#00FF00';      \r\n            } else if (cataindex==3) { \r\n                realcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                realcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            } \r\n\r\n            var polyline = new kakao.maps.Polyline({\r\n                map: map,\r\n                path: path, // 선을 구성하는 좌표배열 입니다\r\n                strokeWeight: 2, // 선의 두께 입니다\r\n                strokeColor: realcolor, // 선의 색깔입니다\r\n                strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid'                 \r\n            });            \r\n            \r\n            var infoBox = new kakao.maps.CustomOverlay({\r\n                content: name,\r\n                yAnchor: 1,\r\n            });\r\n\r\n            new kakao.maps.event.addListener(polyline, 'mouseover', function(mouseEvent) {                                  \r\n                polyline.setOptions({\r\n                    strokeWeight: 7,\r\n                    strokeColor: backcolor,\r\n                    strokeOpacity: 1,\r\n                    strokeStyle: 'solid'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n                // console.log('ddd ', infoBox);\r\n            })\r\n            \r\n            new kakao.maps.event.addListener(polyline, 'mousemove', function(mouseEvent) {                \r\n                // customOverlay.setPosition(mouseEvent.latLng); \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new kakao.maps.event.addListener(polyline, 'mouseout', function() {                \r\n                polyline.setOptions({\r\n                    strokeWeight: 2, // 선의 두께 입니다\r\n                    strokeColor: realcolor, // 선의 색깔입니다\r\n                    strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    strokeStyle: 'solid' \r\n                })\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==1) {\r\n                olle_polylines.push(polyline);\r\n            } else if (cataindex==2) {\r\n                halla_polylines.push(polyline);\r\n            } else if (cataindex==3) { \r\n                hike_polylines.push(polyline);\r\n            } else if (cataindex==4) { \r\n                zpt_polylines.push(polyline);\r\n            } \r\n        },\r\n        \r\n    },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bot1 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot2 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot3 {\r\n    margin-top: 5px;\r\n}\r\n</style>\r\n\r\n<!-- MT1 대형마트\r\nCS2 편의점\r\nPS3 어린이집, 유치원\r\nSC4 학교\r\nAC5 학원\r\nPK6 주차장\r\nOL7 주유소, 충전소\r\nSW8 지하철역\r\nBK9 은행\r\nCT1 문화시설\r\nAG2 중개업소\r\nPO3 공공기관\r\nAT4 관광명소\r\nAD5 숙박\r\nFD6 음식점\r\nCE7 카페\r\nHP8 병원\r\nPM9 약국 -->\r\n","import { render } from \"./KakaoMap.vue?vue&type=template&id=a96f8848&scoped=true\"\nimport script from \"./KakaoMap.vue?vue&type=script&lang=js\"\nexport * from \"./KakaoMap.vue?vue&type=script&lang=js\"\n\nimport \"./KakaoMap.vue?vue&type=style&index=0&id=a96f8848&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a96f8848\"]])\n\nexport default __exports__","<template>\r\n\r\n    <div id=\"map\"></div>\r\n    <div class=\"bot1\">\r\n        <b-button pill variant=\"primary\" @click=\"displayOleum\">오름</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayOlle\">제주올레</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHalla\">한라산 둘레길</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHiking\">등산로</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayzpt\">제로포인트루트</b-button>\r\n    </div>\r\n    <div class=\"bot2\">\r\n        <b-button pill variant=\"success\" @click=\"displayCafe(true)\">제주카페</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayRest(true)\">제주식당</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayHotel(true)\">제주숙박</b-button>\r\n    </div>\r\n    <div class=\"bot3\">\r\n        <b-button pill variant=\"primary\" @click=\"displayReg\">제주예보구역</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayEquv(true)\">제주기상장비</b-button>\r\n    </div>        \r\n    \r\n</template>\r\n\r\n<script>\r\nimport { toRaw } from \"vue\";\r\nimport { ref } from 'vue';\r\nvar ncpclientid= ref('');\r\n\r\nimport oleum_data from \"../assets/jeju_oleum.json\"\r\nimport olle_data from \"../assets/jeju_olle_trail.json\"\r\nimport halla_data from \"../assets/jeju_halla_trail.json\"\r\nimport hiking_data from \"../assets/jeju_hiking_total.json\"\r\nimport zpt_data from \"../assets/jeju_zpt.json\"\r\nimport land_data from \"../assets/jeju_land.json\"\r\n\r\nimport jeju_rest_all_data from \"../assets/jeju_rest_all.json\"\r\nimport jeju_cafe_all_data from \"../assets/jeju_cafe_all.json\"\r\nimport hotel_all_data from \"../assets/jeju_hotel_all.json\"\r\n\r\nimport equv_all_data from \"../assets/jeju_obs.json\"\r\n// var customOverlay=({});\r\n// var infoWindow=({});\r\n\r\nvar cataindex=0;\r\nvar hallaIndex=true;\r\nvar halla_polylines=[];\r\nvar olleIndex=true;\r\nvar olle_polylines=[];\r\nvar hikingIndex=true;\r\nvar hike_polylines=[];\r\nvar zptIndex=true;\r\nvar zpt_polylines=[];\r\nvar oleumIndex=true;\r\nvar oleum_circles=[];\r\n\r\nvar regIndex=true;\r\nvar reg_polygones=[];\r\n\r\nvar jejuequvIndex=true;\r\nvar jejuequvMarkers=[];\r\nvar seogwipoequvIndex=true;\r\nvar seogwipoequvMarkers=[];\r\nvar equvIndex = true;\r\n\r\nvar jejucafeIndex=true;\r\nvar jejucafeMarkers=[];\r\nvar seogwipocafeIndex=true;\r\nvar seogwipocafeMarkers=[];\r\nvar cafeIndex = true;\r\n\r\nvar jejurestIndex=true;\r\nvar jejurestMarkers=[];\r\nvar seogwiporestIndex=true;\r\nvar seogwiporestMarkers=[];\r\nvar restIndex = true;\r\n\r\nvar jejuhotelIndex=true;\r\nvar jejuhotelMarkers=[];\r\nvar seogwipohotelIndex=true;\r\nvar seogwipohotelMarkers=[];\r\nvar hotelIndex= true;\r\n\r\nvar changeMaptype;\r\nvar currentTypeId;\r\n\r\nvar changeLayer;\r\nvar currentLayer;\r\n\r\nexport default {\r\n    name: \"NaverMap\",\r\n\r\n    data() {\r\n        return {\r\n        };\r\n    },\r\n\r\n    created() {\r\n        // console.log(process.env.VUE_APP_NAVERMAP_NCPCLIENTID);\r\n        ncpclientid = process.env.VUE_APP_NAVERMAP_NCPCLIENTID;\r\n        // console.log('ncpclientid ', ncpclientid);\r\n    },\r\n\r\n    mounted() {\r\n        \r\n        if (!window.naver || !window.naver.maps) {\r\n            const script = document.createElement(\"script\");\r\n            script.src =\"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=\"+ncpclientid;\r\n            script.async = true;\r\n            script.defer = true;\r\n            script.onload = () => this.initMap();\r\n            document.head.appendChild(script);\r\n\r\n        } else {\r\n            this.initMap();\r\n        }       \r\n\r\n    },\r\n\r\n    methods: {\r\n\r\n        initMap() {\r\n\r\n            const container = document.getElementById(\"map\");           \r\n            var mapOptions = {\r\n                center: new naver.maps.LatLng(33.38, 126.58),                \r\n                zoom: 10\r\n            };\r\n            this.map = new naver.maps.Map(container, mapOptions);\r\n\r\n            this.map.setOptions(\"mapTypeControl\", true)            \r\n            this.map.setOptions(\"scaleControl\", true)\r\n            this.map.setOptions(\"zoomControlOptions\",{\r\n                style: naver.maps.ZoomControlStyle.LAGRE,\r\n                position: naver.maps.Position.RIGHT_CENTER,\r\n            })\r\n            this.map.setOptions(\"zoomControl\", true)\r\n\r\n            var content = document.createElement('div');\r\n            content.className = 'modes';\r\n\r\n            if ( container.clientWidth > 360 ) {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +                \r\n                '<button id=\"traffic\">교통</button>\\n' +\r\n                '<button id=\"bicycle\">자전거</button>\\n' +\r\n                '<button id=\"roadview\">도로</button>\\n' +\r\n                '<button id=\"use_district\">지적</button>\\n' +\r\n                '<button id=\"jejusi\">제주시</button>\\n' +\r\n                '<button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n';\r\n            } else {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                '<button id=\"traffic\">교통</button>\\n' +\r\n                '<button id=\"bicycle\">자전거</button>\\n' +\r\n                '<div>\\n'+\r\n                '   <button id=\"roadview\">도로</button>\\n' +\r\n                '   <button id=\"use_district\">지적</button>\\n' +\r\n                '</div>\\n'+\r\n                '<div>\\n'+\r\n                '   <button id=\"jejusi\">제주시</button>\\n' +\r\n                '   <button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n'+\r\n                '</div>\\n';\r\n            }            \r\n\r\n            container.appendChild(content);              \r\n            // // console.log(document);\r\n            // console.log('naver ', container)\r\n\r\n            const bicycle_btn = document.querySelector('#bicycle');  \r\n            bicycle_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('bicycle')\r\n            });\r\n\r\n            const traffic_btn = document.querySelector('#traffic');  \r\n            traffic_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('traffic')\r\n            });\r\n\r\n            const roadview_btn = document.querySelector('#roadview');  \r\n            roadview_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('roadview')\r\n            });\r\n\r\n            const use_district_btn = document.querySelector('#use_district');  \r\n            use_district_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('use_district')\r\n            });\r\n\r\n            const jejusi_btn = document.querySelector('#jejusi');  \r\n            jejusi_btn.addEventListener('click', (event) => {\r\n                if ( !cafeIndex ) {\r\n                    jejucafeIndex = jejucafeIndex ? false : true\r\n                    seogwipocafeIndex = false\r\n                    cafeIndex = false                                \r\n                    this.displayCafe(false)\r\n                }\r\n                if ( !restIndex ) {\r\n                    jejurestIndex = jejurestIndex ? false : true\r\n                    seogwiporestIndex = false\r\n                    restIndex = false                                \r\n                    this.displayRest(false)\r\n                }\r\n                if ( !hotelIndex ) {\r\n                    jejuhotelIndex = jejuhotelIndex ? false : true\r\n                    console.log('jejuhotelIndex', jejuhotelIndex)\r\n                    seogwipohotelIndex = false\r\n                    hotelIndex = false                                \r\n                    this.displayHotel(false)\r\n                }\r\n                if ( !equvIndex ) {\r\n                    jejuequvIndex = jejuequvIndex ? false : true\r\n                    seogwipoequvIndex = false\r\n                    equvIndex = false                                \r\n                    this.displayEquv(false)\r\n                } \r\n            });\r\n\r\n            const seogwiposi_btn = document.querySelector('#seogwiposi');  \r\n            seogwiposi_btn.addEventListener('click', (event) => {                \r\n                if ( !cafeIndex ) {\r\n                    seogwipocafeIndex = seogwipocafeIndex ? false : true\r\n                    cafeIndex = false\r\n                    jejucafeIndex = false\r\n                    this.displayCafe(false)\r\n                } \r\n                if ( !restIndex ) {\r\n                    seogwiporestIndex = seogwiporestIndex ? false : true\r\n                    restIndex = false\r\n                    jejurestIndex = false\r\n                    this.displayRest(false)\r\n                } \r\n                if ( !hotelIndex ) {\r\n                    seogwipohotelIndex = seogwipohotelIndex ? false : true\r\n                    hotelIndex = false\r\n                    jejuhotelIndex = false\r\n                    this.displayHotel(false)\r\n                }\r\n                if ( !equvIndex ) {\r\n                    seogwipoequvIndex = seogwipoequvIndex ? false : true\r\n                    equvIndex = false\r\n                    jejuequvIndex = false\r\n                    this.displayEquv(false)\r\n                }                \r\n            });\r\n\r\n            // console.log(div);\r\n            // // toRaw(this.map).relayout();            \r\n            // this.make_cafe_data()\r\n            // this.make_rest_data()\r\n            // this.make_hotel_data()\r\n        },\r\n        \r\n        make_cafe_data() {\r\n            cataindex=10;\r\n            let features = jeju_cafe_all_data.features;\r\n            features.forEach( element => {\r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new naver.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;                        \r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_rest_data() {\r\n            cataindex=11;\r\n            let features = jeju_rest_all_data.features;\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new naver.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_hotel_data() {\r\n            cataindex=12;\r\n            let features = hotel_all_data.features;            \r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                var position = new naver.maps.LatLng(element.y, element.x);\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);\r\n            });\r\n\r\n        },\r\n\r\n        make_equv_data() {\r\n            \r\n            cataindex=13;\r\n            let features = equv_all_data.features;\r\n            features.forEach( element => {\r\n                let name = element.properties['지점명']\r\n                let ename = element.properties['장비명']\r\n                let lng = element.properties['경도']\r\n                let lat = element.properties['위도']\r\n                let dpoint = element.properties['기관지점번호']\r\n                let my_address = element.properties['법정동 주소']\r\n                let city=''\r\n                if( my_address !== null ){\r\n                    city = my_address.split(' ')[1]\r\n                }                \r\n                let position = new naver.maps.LatLng(lat, lng)\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, ename, dpoint, city);                \r\n            });\r\n        },\r\n\r\n        citydrawingMarker(cataindex, map, position, name, my_address, my_link, phone, city) {\r\n\r\n            var imageSrc = '';\r\n            \r\n            if (cataindex == 10) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_cafe.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_cafe.png';\r\n                }                \r\n            } else if (cataindex == 11) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_rest.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_rest.png';\r\n                }                \r\n            } else if (cataindex ==12) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_hotel.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_hotel.png';\r\n                }\r\n            }  else if (cataindex ==13) {\r\n\r\n                if ( my_link === '종관기상관측장비') {\r\n                    imageSrc = '/markers/asos.png'\r\n                } else if (my_link ==='방재기상관측장비') {\r\n                    imageSrc = '/markers/aws.png'\r\n                } else if (my_link ==='해양기상부이') {\r\n                    imageSrc = '/markers/buoy.png'\r\n                } else if (my_link ==='파고부이') {\r\n                    imageSrc = '/markers/tidalbuoy.png'\r\n                } else if (my_link ==='지진관측장비') {\r\n                    imageSrc = '/markers/earth.png'\r\n                } else if (my_link ==='연직바람관측장비') {\r\n                    imageSrc = '/markers/wind.png'\r\n                } else if (my_link ==='연안방재관측장비') {\r\n                    imageSrc = '/markers/beacon.png'\r\n                } else {\r\n                    console.log(my_link)\r\n                }                \r\n            }\r\n\r\n            var imageSize = new naver.maps.Size(25, 28);\r\n            var markerOptions = {\r\n                position : position,\r\n                clickable: true,\r\n                icon: {\r\n                    url: imageSrc,\r\n                    size: imageSize,\r\n                    origin: new naver.maps.Point(0, 0),\r\n                    anchor: new naver.maps.Point(13, 14),\r\n                    scaledSize: new naver.maps.Size(13, 14)\r\n                }\r\n            };\r\n\r\n            var marker = new naver.maps.Marker(markerOptions)\r\n            // var content = '<div class=\"placeinfo\">'+\r\n            //     '   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n            //     content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n            //     content += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n            //     content += '<div class=\"after\"></div>';\r\n            \r\n            var content = '<div class=\"placeinfo\">'\r\n                if ( cataindex ===13) {\r\n                    content +='   <a class=\"title\" title=\"' + name + '\">' + name + '_'+ my_link+'</a>';\r\n                } else {\r\n                    content +='   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n                }\r\n                    content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n                if ( cataindex ===13) {\r\n                    content += '      <span class=\"tel\"> 지점번호 : ' + phone + '</span>'; \r\n                } else {\r\n                    content += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n                }                \r\n                    content += '<div class=\"after\"></div>';\r\n\r\n\r\n            var infowindow = new naver.maps.InfoWindow({\r\n                content: content,\r\n                // borderWidth: 0,\r\n                // disableAnchor: true,\r\n                // backgroundColor: 'transparent',\r\n                // pixelOffset: new naver.maps.Point(0, -28),\r\n                // removable: iwRemveable,\r\n            });     \r\n            \r\n            new naver.maps.Event.addListener(marker, 'click', function(e) {\r\n                if (infowindow.getMap()) {\r\n                    infowindow.close();\r\n                } else {\r\n                    infowindow.open(map, marker);\r\n                }                \r\n            })\r\n\r\n            // new naver.maps.Event.addListener(map, \"click\", function(e){\r\n            //     marker.setPosition(e.coord);\r\n            //     if(infoWindow.getMap()) {\r\n            //         infoWindow.close();\r\n            //     }\r\n            // })\r\n\r\n            if (cataindex ==10) {\r\n                if (city === '제주시') jejucafeMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipocafeMarkers.push(marker)\r\n            } else if (cataindex ==11) {\r\n                if (city === '제주시') jejurestMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwiporestMarkers.push(marker)\r\n            } else if (cataindex ==12) {\r\n                if (city === '제주시') jejuhotelMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipohotelMarkers.push(marker)\r\n            }  else if (cataindex ==13) {\r\n                if (city === '제주시') jejuequvMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipoequvMarkers.push(marker)\r\n            }             \r\n        },\r\n\r\n        displayCafe(main_index){\r\n            // console.log(' cafeIndex ', cafeIndex, 'jejucafelIndex ',jejucafeIndex, 'seogwipocafeIndex ', seogwipocafeIndex  )\r\n            if(cafeIndex){\r\n                this.make_cafe_data()                \r\n                if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                cafeIndex = false\r\n                jejucafeIndex = false\r\n                seogwipocafeIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejucafeMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                    cafeIndex = true\r\n                    jejucafeIndex = true\r\n                    seogwipocafeIndex = true\r\n                } else {\r\n                    if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejucafeMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n        \r\n        displayRest(main_index){\r\n            // console.log(' restIndex ', restIndex, 'jejurestIndex ',jejurestIndex, 'seogwiporestIndex ', seogwiporestIndex  )\r\n            if(restIndex){\r\n                this.make_rest_data()                \r\n                if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                restIndex = false\r\n                jejurestIndex = false\r\n                seogwiporestIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejurestMarkers.map((cur) => cur.setMap(null))\r\n                    seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                    restIndex = true\r\n                    jejurestIndex = true\r\n                    seogwiporestIndex = true\r\n                } else {\r\n                    if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejurestMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayHotel(main_index){\r\n            // console.log(' hotelIndex ', hotelIndex, 'jejuhotelIndex ',jejuhotelIndex, 'seogwipohotelIndex ', seogwipohotelIndex  )\r\n            if(hotelIndex){\r\n                this.make_hotel_data()                \r\n                if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                hotelIndex = false\r\n                jejuhotelIndex = false\r\n                seogwipohotelIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejuhotelMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                    hotelIndex = true\r\n                    jejuhotelIndex = true\r\n                    seogwipohotelIndex = true\r\n                } else {\r\n                    if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejuhotelMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n        \r\n        displayEquv(main_index){\r\n            // console.log(' cafeIndex ', cafeIndex, 'jejucafelIndex ',jejucafeIndex, 'seogwipocafeIndex ', seogwipocafeIndex  )\r\n            if(equvIndex){\r\n                this.make_equv_data()                \r\n                if ( jejuequvIndex ) jejuequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipoequvIndex ) seogwipoequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                equvIndex = false\r\n                jejuequvIndex = false\r\n                seogwipoequvIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejuequvMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipoequvMarkers.map((cur) => cur.setMap(null))\r\n                    equvIndex = true\r\n                    jejuequvIndex = true\r\n                    seogwipoequvIndex = true\r\n                } else {\r\n                    if ( jejuequvIndex ) jejuequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejuequvMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipoequvIndex ) seogwipoequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipoequvMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        onSelectMap: function(maptype) {\r\n\r\n            if (maptype === 'traffic') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new naver.maps.TrafficLayer({\r\n                    interval: 300000 // 5분마다 새로고침 (최소값 5분)\r\n                });                    \r\n                changeLayer.setMap(toRaw(this.map))                    \r\n                currentLayer = changeLayer                \r\n            } else if (maptype === 'roadview') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new naver.maps.StreetLayer()\r\n                changeLayer.setMap(toRaw(this.map))\r\n                currentLayer = changeLayer\r\n            } else if (maptype === 'bicycle') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new naver.maps.BicycleLayer()\r\n                changeLayer.setMap(toRaw(this.map))\r\n                currentLayer = changeLayer\r\n            } \r\n            //\r\n            \r\n            // else if (maptype === 'terrain') {                    \r\n            //     if ( currentLayer != null ) currentLayer.setMap(null)\r\n            //     if ( this.map.getMapTypeId() === naver.maps.MapTypeId.TERRAIN) {\r\n            //         changeMaptype = naver.maps.MapTypeId.NORMAL;\r\n            //         this.map.setMapTypeId(changeMaptype);\r\n            //     } else {\r\n            //         changeMaptype = naver.maps.MapTypeId.TERRAIN;\r\n            //         this.map.setMapTypeId(changeMaptype);\r\n            //     }                    \r\n                \r\n            // } \r\n\r\n            else if (maptype === 'use_district') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new naver.maps.CadastralLayer();\r\n                changeLayer.setMap(toRaw(this.map))\r\n                currentLayer = changeLayer\r\n            }\r\n            this.map.refresh();\r\n            currentTypeId = changeMaptype;\r\n            \r\n        },\r\n\r\n        displayOleum() {\r\n\r\n            cataindex=1;\r\n            if(oleumIndex) {\r\n                if(oleum_circles.length <=0 ) {\r\n                    let features = oleum_data.features;\r\n                    features.forEach( element => {\r\n                        let position = new naver.maps.LatLng(element.geometry.coordinates[1], element.geometry.coordinates[0]);\r\n                        let dia = element.properties['반경']; \r\n                        let name = element.properties['오름명']\r\n                        this.drawingCircle(cataindex, toRaw(this.map), position, dia, name);                        \r\n                    });                    \r\n                } else {\r\n                    oleum_circles.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                oleumIndex = false;\r\n            } else {\r\n                oleum_circles.map( (cur) => cur.setMap(null));\r\n                oleumIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayOlle() {\r\n\r\n            cataindex=1;\r\n            if(olleIndex) {\r\n                if( olle_polylines.length <=0 ) {\r\n                    let features = olle_data.features;            \r\n                    features.forEach( element => {      \r\n                        let name = element.properties.name;             \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex,toRaw(this.map), path, name);\r\n                        });\r\n                    });\r\n                } else {\r\n                    olle_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }                \r\n                olleIndex = false;\r\n            } else {\r\n                olle_polylines.map( (cur) => cur.setMap(null));\r\n                olleIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHalla() {\r\n            cataindex=2; \r\n            if(hallaIndex) {\r\n                if ( halla_polylines.length <=0 ) {\r\n                    let features = halla_data.features;            \r\n                    features.forEach( element => { \r\n                        let name = element.properties.name;  \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);                     \r\n                        });\r\n                    });\r\n                } else {\r\n                    halla_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                hallaIndex = false;\r\n            } else {\r\n                halla_polylines.map( (cur) => cur.setMap(null));\r\n                hallaIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHiking() {\r\n\r\n            cataindex=3;\r\n            if(hikingIndex){\r\n                if ( hike_polylines.length <=0 ) {                    \r\n                    let features = hiking_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = '등산로 '+ element.properties.PMNTN_NM;                \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                        });\r\n                    });\r\n                } else {\r\n                    hike_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                hikingIndex = false;\r\n            } else {\r\n                hike_polylines.map( (cur) => cur.setMap(null));\r\n                hikingIndex = true;\r\n            }          \r\n        },\r\n\r\n        displayzpt(){\r\n\r\n            cataindex=4;\r\n            if(zptIndex){\r\n                if ( zpt_polylines.length <=0 ) {                    \r\n                    let features = zpt_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = element.properties.name;                \r\n                        let coord = element.geometry.coordinates;\r\n                        if ( element.geometry.type=='LineString' ) {\r\n                            var path=[];                            \r\n                            coord.forEach( point => {\r\n                                let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);              \r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);\r\n                        } else if (element.geometry.type=='MultiLineString'){                            \r\n                            coord.forEach( points => {\r\n                                var path=[];\r\n                                points.forEach ( point => {\r\n                                    let position = new naver.maps.LatLng(point[1], point[0]);\r\n                                    path.push(position);\r\n                                });\r\n                                this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                            });\r\n                        }\r\n                    });\r\n                } else {\r\n                    zpt_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                zptIndex = false;\r\n            } else {\r\n                zpt_polylines.map( (cur) => cur.setMap(null));\r\n                zptIndex = true;\r\n            }\r\n\r\n        },\r\n\r\n        displayReg() {\r\n            cataindex=5;\r\n            if(regIndex){\r\n                if ( reg_polygones.length <=0 ) {                    \r\n                    let features = land_data.features;\r\n                    features.forEach( element => {\r\n                        let name = element.properties.Name;\r\n                        let coord = element.geometry.coordinates;\r\n                        \r\n                        if ( element.geometry.type=='Polygon' ) {                                                        \r\n                            var path=[]                            \r\n                            coord.forEach( point => {\r\n                                let position = new naver.maps.LatLng(point[1], point[0])\r\n                                path.push(position)              \r\n                            })\r\n                            this.drawingPolygon(cataindex, toRaw(this.map), path, name)\r\n                        } else if (element.geometry.type=='MultiPolygon'){\r\n                            coord.forEach( mpoints => {\r\n                                var path=[]\r\n                                mpoints.forEach ( points => {\r\n                                    points.forEach( point => {\r\n                                        let position = new naver.maps.LatLng(point[1], point[0])\r\n                                        path.push(position)\r\n                                    })\r\n                                })\r\n                                this.drawingPolygon(cataindex, toRaw(this.map), path, name)                                \r\n                            })\r\n                        }\r\n\r\n                    })\r\n                } else {\r\n                    reg_polygones.map( (cur) => cur.setMap(toRaw(this.map)))                    \r\n                }\r\n                regIndex = false;\r\n            } else {\r\n                reg_polygones.map( (cur) => cur.setMap(null));\r\n                regIndex = true;\r\n            }\r\n        },\r\n\r\n        drawingCircle(cataindex, map, position, dia, name) {\r\n            \r\n            let fillrealcolor='';\r\n            let backcolor='';\r\n            \r\n            if (cataindex==1) {\r\n                fillrealcolor = '#E51D1A';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                fillrealcolor = '#00FF0F';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==3) { \r\n                fillrealcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                fillrealcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var circle = new naver.maps.Circle({\r\n                    map: map,\r\n                    center : position,\r\n                    radius: dia,    \r\n                    strokeColor: '#5347AA',\r\n                    strokeOpacity: 0.5,\r\n                    strokeWeight: 2,\r\n                    fillColor: fillrealcolor,\r\n                    fillOpacity: 0.3,\r\n                    clickable: true,\r\n                    // 원의 중심좌표 입니다 \r\n                    // radius: 5000, // 미터 단위의 원의 반지름입니다 \r\n                    // strokeWeight: 5, // 선의 두께입니다 \r\n                    // strokeColor: '#75B8FA', // 선의 색깔입니다\r\n                    // strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    // strokeStyle: 'dashed', // 선의 스타일 입니다\r\n                    // fillColor: '#CFE7FF', // 채우기 색깔입니다\r\n                    // fillOpacity: 0.7  // 채우기 불투명도 입니다   \r\n            });           \r\n            \r\n            // var content = name + '  [반경 '+dia+' m]'\r\n            var content =[\r\n                '<div class=\"name_display\" >',\r\n                    name,\r\n                '</div>',\r\n                '<div>',\r\n                '반경:',\r\n                    dia,\r\n                'm',\r\n                '</div>',\r\n            ].join('')\r\n            \r\n            var infowindow = new naver.maps.InfoWindow({\r\n                content: content,\r\n                borderWidth: 0,\r\n                disableAnchor: true,\r\n                backgroundColor: 'transparent',\r\n                pixelOffset: new naver.maps.Point(0, -13),\r\n            });\r\n\r\n            new naver.maps.Event.addListener(circle, 'mouseover', function(e) {                                  \r\n                circle.setOptions({\r\n                    fillOpacity: 0.6,\r\n                });\r\n                // console.log('dddd ', infowindow)\r\n                // console.log('cccc ', e)\r\n                // console.log('ffff ', e.coord.x , e.coord.y)\r\n                infowindow.open(map, new naver.maps.LatLng(e.coord.y, e.coord.x));\r\n            })\r\n            \r\n            // new naver.maps.Event.addListener(circle, 'mousemove', function(e) {                \r\n            //     infoBox.setPosition(mouseEvent.latLng);\r\n            //     infoBox.setMap(map);\r\n            // });\r\n            \r\n            new naver.maps.Event.addListener(circle, 'mouseout', function() {                \r\n                circle.setOptions({\r\n                    fillOpacity: 0.3,\r\n                });\r\n                infowindow.setMap(null)\r\n            });\r\n\r\n            if (cataindex==1) {\r\n                oleum_circles.push(circle);\r\n            } \r\n            // else if (cataindex==2) {\r\n            //     halla_polylines.push(polyline);\r\n            // } else if (cataindex==3) { \r\n            //     hike_polylines.push(polyline);\r\n            // } else if (cataindex==4) { \r\n            //     zpt_polylines.push(polyline);\r\n            // }  \r\n        },\r\n\r\n        drawingPolygon(cataindex, map, paths, name){\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==5) { \r\n                realcolor = '#0000FF';\r\n                backcolor = '#00FF00';\r\n            }\r\n\r\n            var polygon = new naver.maps.Polygon({\r\n                map: map,\r\n                paths: paths, // 그려질 다각형의 좌표 배열입니다\r\n                clickable: true,\r\n                strokeWeight: 2, // 선의 두께입니다\r\n                strokeColor: realcolor, // 선의 색깔입니다\r\n                strokeOpacity: 0.8, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid', // 선의 스타일입니다\r\n                fillColor: backcolor, // 채우기 색깔입니다\r\n                fillOpacity: 0.01 // 채우기 불투명도 입니다\r\n            });\r\n\r\n            var infowindow = new naver.maps.InfoWindow({\r\n                content: name,\r\n                borderWidth: 0,\r\n                disableAnchor: true,\r\n                backgroundColor: 'transparent',\r\n                pixelOffset: new naver.maps.Point(0, -13),\r\n            });\r\n\r\n            new naver.maps.Event.addListener(polygon, 'mouseover', function(e) {                                  \r\n                polygon.setOptions({\r\n                    fillColor: backcolor, // 채우기 색깔입니다\r\n                    fillOpacity: 0.8, \r\n                    strokeWeight: 3,\r\n                    strokeColor: realcolor,\r\n                    strokeOpacity: 1,\r\n                    strokeStyle: 'solid'\r\n                });\r\n                infowindow.open(map, new naver.maps.LatLng(e.coord.y, e.coord.x))\r\n                // console.log('ddd ', infoBox);\r\n            })\r\n            \r\n            new naver.maps.Event.addListener(polygon, 'mousemove', function(e) {                \r\n                // customOverlay.setPosition(mouseEvent.latLng); \r\n                // infoBox.setPosition(mouseEvent.latLng);\r\n                // infoBox.setMap(map);\r\n                infowindow.open(map, new naver.maps.LatLng(e.coord.y, e.coord.x)) \r\n            });\r\n            \r\n            new naver.maps.Event.addListener(polygon, 'mouseout', function() {                \r\n                polygon.setOptions({\r\n                    strokeWeight: 2, // 선의 두께입니다\r\n                    strokeColor: realcolor, // 선의 색깔입니다\r\n                    strokeOpacity: 0.8, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    strokeStyle: 'solid', // 선의 스타일입니다\r\n                    fillColor: backcolor, // 채우기 색깔입니다\r\n                    fillOpacity: 0.01 \r\n                })\r\n                infowindow.setMap(null)   \r\n            });\r\n\r\n            if (cataindex==5) { \r\n                reg_polygones.push(polygon);\r\n            }  \r\n\r\n        },\r\n\r\n        drawingPolyline(cataindex, map, path, name) {\r\n\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==1) {\r\n                realcolor = '#0004FF';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                realcolor = '#FF0000';\r\n                backcolor = '#00FF00';      \r\n            } else if (cataindex==3) { \r\n                realcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                realcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var polyline = new naver.maps.Polyline({\r\n                map: map,\r\n                path: path, // 선을 구성하는 좌표배열 입니다\r\n                clickable: true,\r\n                strokeWeight: 2, // 선의 두께 입니다\r\n                strokeColor: realcolor, // 선의 색깔입니다\r\n                strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid'                 \r\n            });            \r\n            \r\n            var infowindow = new naver.maps.InfoWindow({\r\n                content: name,\r\n                borderWidth: 0,\r\n                disableAnchor: true,\r\n                backgroundColor: 'transparent',\r\n                pixelOffset: new naver.maps.Point(0, -13),\r\n            });\r\n\r\n            new naver.maps.Event.addListener(polyline, 'mouseover', function(e) {                                  \r\n                polyline.setOptions({\r\n                    strokeWeight: 7,\r\n                    strokeColor: backcolor,\r\n                    strokeOpacity: 1,\r\n                    strokeStyle: 'solid'\r\n                })\r\n                infowindow.open(map, new naver.maps.LatLng(e.coord.y, e.coord.x))                \r\n            })\r\n            \r\n            new naver.maps.Event.addListener(polyline, 'mousemove', function(e) {                \r\n                infowindow.open(map, new naver.maps.LatLng(e.coord.y, e.coord.x)) \r\n                // customOverlay.setPosition(mouseEvent.latLng); \r\n                // infoBox.setPosition(mouseEvent.latLng);\r\n                // infoBox.setMap(map);\r\n            });\r\n            \r\n            new naver.maps.Event.addListener(polyline, 'mouseout', function() {                \r\n                polyline.setOptions({\r\n                    strokeWeight: 2,\r\n                    strokeColor: realcolor,\r\n                    strokeOpacity: 0.5,\r\n                    strokeStyle: 'solid' \r\n                })\r\n                infowindow.setMap(null)\r\n            });\r\n\r\n            if (cataindex==1) {\r\n                olle_polylines.push(polyline);\r\n            } else if (cataindex==2) {\r\n                halla_polylines.push(polyline);\r\n            } else if (cataindex==3) { \r\n                hike_polylines.push(polyline);\r\n            } else if (cataindex==4) { \r\n                zpt_polylines.push(polyline);\r\n            }  \r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bot1 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot2 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot3 {\r\n    margin-top: 5px;\r\n}\r\n\r\n#namedisplay {\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n</style>","import { render } from \"./NaverMap.vue?vue&type=template&id=1f4b4c29&scoped=true\"\nimport script from \"./NaverMap.vue?vue&type=script&lang=js\"\nexport * from \"./NaverMap.vue?vue&type=script&lang=js\"\n\nimport \"./NaverMap.vue?vue&type=style&index=0&id=1f4b4c29&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f4b4c29\"]])\n\nexport default __exports__","<template>\r\n    <div id=\"map\"></div>\r\n    <div class=\"bot1\">\r\n        <b-button pill variant=\"primary\" @click=\"displayOleum\">오름</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayOlle\">제주올레</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHalla\">한라산 둘레길</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHiking\">등산로</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayzpt\">제로포인트루트</b-button>\r\n    </div>\r\n    <div class=\"bot2\">\r\n        <b-button pill variant=\"success\" @click=\"displayCafe(true)\">제주카페</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayRest(true)\">제주식당</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayHotel(true)\">제주숙박</b-button>\r\n    </div>\r\n    <div class=\"bot3\">\r\n        <b-button pill variant=\"primary\" @click=\"displayReg\">제주예보구역</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayEquv(true)\">제주기상장비</b-button>\r\n    </div> \r\n</template>\r\n\r\n<script>\r\nimport { toRaw } from \"vue\";\r\nimport { ref } from 'vue';\r\nimport { Loader } from \"@googlemaps/js-api-loader\"\r\n\r\nimport oleum_data from \"../assets/jeju_oleum.json\"\r\nimport olle_data from \"../assets/jeju_olle_trail.json\"\r\nimport halla_data from \"../assets/jeju_halla_trail.json\"\r\nimport hiking_data from \"../assets/jeju_hiking_total.json\"\r\nimport zpt_data from \"../assets/jeju_zpt.json\"\r\nimport land_data from \"../assets/jeju_land.json\"\r\n\r\nimport jeju_rest_all_data from \"../assets/jeju_rest_all.json\"\r\nimport jeju_cafe_all_data from \"../assets/jeju_cafe_all.json\"\r\nimport hotel_all_data from \"../assets/jeju_hotel_all.json\"\r\n\r\nimport equv_all_data from \"../assets/jeju_obs.json\"\r\n\r\nvar apikey= ref('');\r\n\r\nvar customOverlay=({});\r\nvar infoWindow=({});\r\n\r\nvar cataindex=0;\r\nvar hallaIndex=true;\r\nvar halla_polylines=[];\r\nvar olleIndex=true;\r\nvar olle_polylines=[];\r\nvar hikingIndex=true;\r\nvar hike_polylines=[];\r\nvar zptIndex=true;\r\nvar zpt_polylines=[];\r\nvar oleumIndex=true;\r\nvar oleum_circles=[];\r\n\r\nvar regIndex=true;\r\nvar reg_polygones=[];\r\n\r\nvar jejuequvIndex=true;\r\nvar jejuequvMarkers=[];\r\nvar seogwipoequvIndex=true;\r\nvar seogwipoequvMarkers=[];\r\nvar equvIndex = true;\r\n\r\nvar jejucafeIndex=true;\r\nvar jejucafeMarkers=[];\r\nvar seogwipocafeIndex=true;\r\nvar seogwipocafeMarkers=[];\r\nvar cafeIndex = true;\r\n\r\nvar jejurestIndex=true;\r\nvar jejurestMarkers=[];\r\nvar seogwiporestIndex=true;\r\nvar seogwiporestMarkers=[];\r\nvar restIndex = true;\r\n\r\nvar jejuhotelIndex=true;\r\nvar jejuhotelMarkers=[];\r\nvar seogwipohotelIndex=true;\r\nvar seogwipohotelMarkers=[];\r\nvar hotelIndex= true;\r\n\r\nvar changeMaptype;\r\nvar currentTypeId;\r\nvar loader;\r\n\r\nvar changeLayer;\r\nvar currentLayer;\r\n\r\nexport default {\r\n    name: \"GoogleMap\",\r\n\r\n    data() {\r\n        return {\r\n            // jejusi_index:jejusi_index,\r\n            // seogwiposi_index:seogwiposi_index,\r\n            // my_btns:[\r\n            //     { caption: '제주카페', state:false, func : this.displayCafe(true)},\r\n            //     { caption: '제주식당', state:true , func : this.displayRest(true)},\r\n            //     { caption: '제주숙박', state:false, func : this.displayHotel(true)},\r\n            // ]                        \r\n        };\r\n    },\r\n\r\n    created() {\r\n        apikey = process.env.VUE_APP_GOOGLEMAP_API_KEY;        \r\n        // console.log('api_key ', apikey);\r\n        \r\n    },\r\n\r\n    mounted() {\r\n        loader = new Loader({\r\n            apiKey: apikey,\r\n            version: \"weekly\",\r\n            // ...additionalOptions,\r\n        });\r\n\r\n        this.initMap();\r\n    },\r\n\r\n    methods: {\r\n\r\n        initMap() {\r\n            \r\n            const container = document.getElementById(\"map\");            \r\n            \r\n            loader.load().then(async () => {\r\n\r\n                const { Map } = await google.maps.importLibrary(\"maps\");\r\n                // const { AdvancedMarkerElement } = await google.maps.importLibrary(\"marker\");\r\n                const mapProp = {\r\n                    center: { lat :33.38, lng: 126.58 },\r\n                    zoom: 10,\r\n                    mapTypeControl: true,\r\n                    mapTypeControlOptions: {\r\n                    style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\r\n                    position: google.maps.ControlPosition.TOP_RIGHT,\r\n                    },\r\n                }                \r\n\r\n                this.map = new Map(container, mapProp);\r\n\r\n                // const leftControlDiv = document.createElement(\"div\")\r\n                // const control = new LeftControl(leftControlDiv, toRaw(this.map))\r\n                // leftControlDiv.index=1\r\n                // leftControlDiv.style.paddingTop = \"10px\"\r\n                // this.map.control[google.maps.ControlPosition.TOP_LEFT].push(leftControlDiv)\r\n\r\n                var content = document.createElement('div');\r\n                content.className = 'modes';\r\n\r\n                if ( container.clientWidth > 360 ) {                \r\n                    content.innerHTML =  \r\n                    // '<div class=\"modes\">\\n'+\r\n                    // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                    // '<button id=\"terrain\">지형</button>\\n' +\r\n                    '<button id=\"traffic\">교통</button>\\n' +\r\n                    '<button id=\"bicycle\">자전거</button>\\n' +\r\n                    // '<button id=\"roadview\">도로</button>\\n' +\r\n                    '<button id=\"jejusi\">제주시</button>\\n' +\r\n                    '<button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                    '</div>\\n';\r\n                } else {                \r\n                    content.innerHTML =  \r\n                    // '<div class=\"modes\">\\n'+\r\n                    // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                    // '<button id=\"terrain\">지형</button>\\n' +\r\n                    '<button id=\"traffic\">교통</button>\\n' +\r\n                    '<button id=\"bicycle\">자전거</button>\\n' +\r\n                    // '<div>\\n'+\r\n                    //     '<button id=\"bicycle\">자전거</button>\\n' +\r\n                    //     // '<button id=\"roadview\">도로</button>\\n' +\r\n                    // '</div>\\n'+\r\n                    '<div>\\n'+\r\n                    '   <button id=\"jejusi\">제주시</button>\\n' +\r\n                    '   <button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                    '</div>\\n'+\r\n                    '</div>\\n';\r\n                }            \r\n\r\n                container.appendChild(content);\r\n                // console.log('google ', container)                \r\n\r\n                // this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(content);\r\n            \r\n                // const hybrid_btn = document.querySelector('#hybrid');  \r\n                // hybrid_btn.addEventListener('click', (event) => {\r\n                //     this.onSelectMap('hybrid')\r\n                // });\r\n\r\n                // const terrain_btn = document.querySelector('#terrain');  \r\n                // terrain_btn.addEventListener('click', (event) => {\r\n                //     this.onSelectMap('terrain')\r\n                // });\r\n\r\n                const bicycle_btn = document.querySelector('#bicycle');  \r\n                bicycle_btn.addEventListener('click', (event) => {\r\n                    this.onSelectMap('bicycle')\r\n                });\r\n\r\n                const traffic_btn = document.querySelector('#traffic');  \r\n                traffic_btn.addEventListener('click', (event) => {\r\n                    this.onSelectMap('traffic')\r\n                });\r\n\r\n                // const roadview_btn = document.querySelector('#roadview');  \r\n                // roadview_btn.addEventListener('click', (event) => {\r\n                //     this.onSelectMap('roadview')\r\n                // });\r\n\r\n                // const use_district_btn = document.querySelector('#use_district');  \r\n                // use_district_btn.addEventListener('click', (event) => {\r\n                //     this.onSelectMap('use_district')\r\n                // });\r\n\r\n                const jejusi_btn = document.querySelector('#jejusi');  \r\n                jejusi_btn.addEventListener('click', (event) => {\r\n                    if ( !cafeIndex ) {\r\n                        jejucafeIndex = jejucafeIndex ? false : true\r\n                        seogwipocafeIndex = false\r\n                        cafeIndex = false                                \r\n                        this.displayCafe(false)\r\n                    }\r\n\r\n                    if ( !restIndex ) {\r\n                        jejurestIndex = jejurestIndex ? false : true\r\n                        seogwiporestIndex = false\r\n                        restIndex = false                                \r\n                        this.displayRest(false)\r\n                    }\r\n\r\n                    if ( !hotelIndex ) {\r\n                        jejuhotelIndex = jejuhotelIndex ? false : true\r\n                        console.log('jejuhotelIndex', jejuhotelIndex)\r\n                        seogwipohotelIndex = false\r\n                        hotelIndex = false                                \r\n                        this.displayHotel(false)\r\n                    }\r\n                    \r\n                    if ( !equvIndex ) {\r\n                        jejuequvIndex = jejuequvIndex ? false : true\r\n                        seogwipoequvIndex = false\r\n                        equvIndex = false                                \r\n                        this.displayEquv(false)\r\n                    }                 \r\n                    \r\n                });\r\n\r\n                const seogwiposi_btn = document.querySelector('#seogwiposi');  \r\n                seogwiposi_btn.addEventListener('click', (event) => {\r\n                    \r\n                    if ( !cafeIndex ) {\r\n                        seogwipocafeIndex = seogwipocafeIndex ? false : true\r\n                        cafeIndex = false\r\n                        jejucafeIndex = false\r\n                        this.displayCafe(false)\r\n                    } \r\n                    if ( !restIndex ) {\r\n                        seogwiporestIndex = seogwiporestIndex ? false : true\r\n                        restIndex = false\r\n                        jejurestIndex = false\r\n                        this.displayRest(false)\r\n                    } \r\n                    if ( !hotelIndex ) {\r\n                        seogwipohotelIndex = seogwipohotelIndex ? false : true\r\n                        hotelIndex = false\r\n                        jejuhotelIndex = false\r\n                        this.displayHotel(false)\r\n                    }\r\n                    if ( !equvIndex ) {\r\n                        seogwipoequvIndex = seogwipoequvIndex ? false : true\r\n                        equvIndex = false\r\n                        jejuequvIndex = false\r\n                        this.displayEquv(false)\r\n                    }\r\n                });\r\n\r\n            });\r\n            // console.log(div);\r\n            // // toRaw(this.map).relayout();            \r\n            // this.make_cafe_data()\r\n            // this.make_rest_data()\r\n            // this.make_hotel_data()\r\n        },\r\n        \r\n        make_cafe_data() {\r\n            cataindex=10;\r\n            let features = jeju_cafe_all_data.features;\r\n            features.forEach( element => {\r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position = new google.maps.LatLng(element.y, element.x)\r\n                let phone = element.phone;                        \r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_rest_data() {\r\n            cataindex=11;\r\n            let features = jeju_rest_all_data.features;\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position = new google.maps.LatLng(element.y, element.x)\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);                \r\n            });\r\n\r\n        },\r\n\r\n        make_hotel_data() {\r\n            cataindex=12;\r\n            let features = hotel_all_data.features;            \r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position = new google.maps.LatLng(element.y, element.x)\r\n                let phone = element.phone;\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, my_link, phone, city);\r\n            });\r\n\r\n        },\r\n\r\n        make_equv_data() {\r\n            \r\n            cataindex=13;\r\n            let features = equv_all_data.features;\r\n            features.forEach( element => {\r\n                let name = element.properties['지점명']\r\n                let ename = element.properties['장비명']\r\n                let lng = element.properties['경도']\r\n                let lat = element.properties['위도']\r\n                let dpoint = element.properties['기관지점번호']\r\n                let my_address = element.properties['법정동 주소']\r\n                let city=''\r\n                if( my_address !== null ){\r\n                    city = my_address.split(' ')[1]\r\n                }                \r\n                let position = new google.maps.LatLng(lat, lng)\r\n                this.citydrawingMarker(cataindex, toRaw(this.map), position, name, my_address, ename, dpoint, city);                \r\n            });\r\n        },\r\n\r\n        citydrawingMarker(cataindex, map, position, name, my_address, my_link, phone, city) {\r\n\r\n            var imageSrc = ''\r\n            var image =''\r\n            \r\n            if (cataindex == 10) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_cafe.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_cafe.png';\r\n                }\r\n                image = new google.maps.MarkerImage(imageSrc, null, null, null, new google.maps.Size(16,16))\r\n            } else if (cataindex == 11) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_rest.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_rest.png';\r\n                }\r\n                image = new google.maps.MarkerImage(imageSrc, null, null, null, new google.maps.Size(16,16))\r\n            } else if (cataindex ==12) {\r\n                if ( city === '제주시') {\r\n                    imageSrc = '/img/jeju_hotel.png';\r\n\r\n                } else if ( city === '서귀포시') {\r\n                    imageSrc = '/img/seogwipo_hotel.png';\r\n                }\r\n                image = new google.maps.MarkerImage(imageSrc, null, null, null, new google.maps.Size(16,16))                \r\n            }  else if (cataindex ==13) {\r\n\r\n                if ( my_link === '종관기상관측장비') {\r\n                    imageSrc = '/markers/asos.png'\r\n                } else if (my_link ==='방재기상관측장비') {\r\n                    imageSrc = '/markers/aws.png'\r\n                } else if (my_link ==='해양기상부이') {\r\n                    imageSrc = '/markers/buoy.png'\r\n                } else if (my_link ==='파고부이') {\r\n                    imageSrc = '/markers/tidalbuoy.png'\r\n                } else if (my_link ==='지진관측장비') {\r\n                    imageSrc = '/markers/earth.png'\r\n                } else if (my_link ==='연직바람관측장비') {\r\n                    imageSrc = '/markers/wind.png'\r\n                } else if (my_link ==='연안방재관측장비') {\r\n                    imageSrc = '/markers/beacon.png'\r\n                } else {\r\n                    // console.log(my_link)\r\n                }\r\n                image = new google.maps.MarkerImage(imageSrc, null, null, null, new google.maps.Size(16,16))\r\n                // {\r\n                //     url : imageSrc,\r\n                //     size : new google.maps.Size(16, 17),\r\n                // }\r\n                // scale = 0.01                                \r\n            }\r\n\r\n            // var imageSize = new google.maps.Size(16, 17);\r\n            // var imageOption = {offset: new google.maps.Point(8, 9)};            \r\n            // var markerImage = new google.maps.MarkerImage(imageSrc, imageSize, imageOption)\r\n            // var imageSize = new google.maps.Size(16, 17);\r\n            // var imageOption = {offset: new google.maps.Point(8, 9)};            \r\n            // var markerImage = new google.maps.MarkerImage(imageSrc, imageSize, imageOption)\r\n\r\n            // const icon = {\r\n            //     url : imageSrc, // url\r\n            //     scaledSize: new google.maps.Size(15, 15), // scaled size\r\n            //     // origin: new google.maps.Point(0,0), // origin\r\n            //     // anchor: new google.maps.Point(0, 0) // anchor\r\n            // };\r\n\r\n            var marker = new google.maps.Marker({\r\n                position : position,\r\n                icon : image,                \r\n            });\r\n\r\n\r\n            // var content =  '<div style=\"width:250px; height: 150px; padding: 5px;\">';\r\n            //     content += '    <a href='+my_link+' target=\"_blank\"><strong> [ 오름명 : '+name+']</strong></a>';\r\n            //     content += '    <div> 주소 : '+my_address+' </div>';\r\n            //     content += '</div>';\r\n            \r\n            // var content = '<div style=\"width:250px; height: 100px; padding: 5px;\"> <div></div>' +\r\n            // var content = '<div class=\"placeinfo\">'+\r\n            //     '   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n            //     content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n            //     content += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n            //     content += '<div class=\"after\"></div>';\r\n\r\n            var content = '<div class=\"placeinfo\">'\r\n                if ( cataindex ===13) {\r\n                    content +='   <a class=\"title\" title=\"' + name + '\">' + name + '_'+ my_link+'</a>';\r\n                } else {\r\n                    content +='   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n                }\r\n                    content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n                if ( cataindex ===13) {\r\n                    content += '      <span class=\"tel\"> 지점번호 : ' + phone + '</span>'; \r\n                } else {\r\n                    content += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n                }                \r\n                    content += '<div class=\"after\"></div>';\r\n\r\n            var infowindow = new google.maps.InfoWindow({\r\n                content: content,\r\n            });\r\n\r\n            new google.maps.event.addListener(marker, 'click', function() {                                  \r\n                infowindow.open(map, marker);\r\n            })\r\n\r\n            if (cataindex ==10) {\r\n                if (city === '제주시') jejucafeMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipocafeMarkers.push(marker)\r\n            } else if (cataindex ==11) {\r\n                if (city === '제주시') jejurestMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwiporestMarkers.push(marker)\r\n            } else if (cataindex ==12) {\r\n                if (city === '제주시') jejuhotelMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipohotelMarkers.push(marker)\r\n            }  else if (cataindex ==13) {\r\n                if (city === '제주시') jejuequvMarkers.push(marker)\r\n                else if (city === '서귀포시') seogwipoequvMarkers.push(marker)\r\n            }               \r\n        },\r\n\r\n        displayEquv(main_index){\r\n            // console.log(' cafeIndex ', cafeIndex, 'jejucafelIndex ',jejucafeIndex, 'seogwipocafeIndex ', seogwipocafeIndex  )\r\n            if(equvIndex){\r\n                \r\n                this.make_equv_data()\r\n\r\n                if ( jejuequvIndex ) jejuequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipoequvIndex ) seogwipoequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                equvIndex = false\r\n                jejuequvIndex = false\r\n                seogwipoequvIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejuequvMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipoequvMarkers.map((cur) => cur.setMap(null))\r\n                    equvIndex = true\r\n                    jejuequvIndex = true\r\n                    seogwipoequvIndex = true\r\n                } else {\r\n                    if ( jejuequvIndex ) jejuequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejuequvMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipoequvIndex ) seogwipoequvMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipoequvMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayCafe(main_index){\r\n            // console.log(' cafeIndex ', cafeIndex, 'jejucafelIndex ',jejucafeIndex, 'seogwipocafeIndex ', seogwipocafeIndex  )\r\n            if(cafeIndex){\r\n                this.make_cafe_data()                \r\n                if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                cafeIndex = false\r\n                jejucafeIndex = false\r\n                seogwipocafeIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejucafeMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                    cafeIndex = true\r\n                    jejucafeIndex = true\r\n                    seogwipocafeIndex = true\r\n                } else {\r\n                    if ( jejucafeIndex ) jejucafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejucafeMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipocafeIndex ) seogwipocafeMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipocafeMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayRest(main_index){\r\n            // console.log(' restIndex ', restIndex, 'jejurestIndex ',jejurestIndex, 'seogwiporestIndex ', seogwiporestIndex  )\r\n            if(restIndex){\r\n                this.make_rest_data()                \r\n                if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                restIndex = false\r\n                jejurestIndex = false\r\n                seogwiporestIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejurestMarkers.map((cur) => cur.setMap(null))\r\n                    seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                    restIndex = true\r\n                    jejurestIndex = true\r\n                    seogwiporestIndex = true\r\n                } else {\r\n                    if ( jejurestIndex ) jejurestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejurestMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwiporestIndex ) seogwiporestMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwiporestMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayHotel(main_index){\r\n            // console.log(' hotelIndex ', hotelIndex, 'jejuhotelIndex ',jejuhotelIndex, 'seogwipohotelIndex ', seogwipohotelIndex  )\r\n            if(hotelIndex){\r\n                this.make_hotel_data()                \r\n                if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                hotelIndex = false\r\n                jejuhotelIndex = false\r\n                seogwipohotelIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    jejuhotelMarkers.map((cur) => cur.setMap(null))\r\n                    seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                    hotelIndex = true\r\n                    jejuhotelIndex = true\r\n                    seogwipohotelIndex = true\r\n                } else {\r\n                    if ( jejuhotelIndex ) jejuhotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else jejuhotelMarkers.map((cur) => cur.setMap(null))                    \r\n                    if ( seogwipohotelIndex ) seogwipohotelMarkers.map((cur) => cur.setMap(toRaw(this.map)))\r\n                    else seogwipohotelMarkers.map((cur) => cur.setMap(null))\r\n                }               \r\n            }\r\n        },        \r\n\r\n        onSelectMap: function(maptype) {\r\n            \r\n            if (maptype === 'traffic') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new google.maps.TrafficLayer()\r\n                // console.log('ddd ', changeLayer)        \r\n                changeLayer.setMap(toRaw(this.map))\r\n                // currentLayer = changeLayer                \r\n            } \r\n            // else if (maptype === 'roadview') {\r\n            //     if ( currentLayer !== null ) currentLayer.setMap(null)\r\n            //     changeLayer = new google.maps.TransitLayer()\r\n            //     changeLayer.setMap(toRaw(this.map))\r\n            //     currentLayer = changeLayer\r\n            // } \r\n            else if (maptype === 'bicycle') {\r\n                if ( currentLayer != null ) currentLayer.setMap(null)\r\n                changeLayer = new google.maps.BicyclingLayer()\r\n                changeLayer.setMap(toRaw(this.map))\r\n                currentLayer = changeLayer\r\n            } \r\n            //\r\n            \r\n            // else if (maptype === 'terrain') {                    \r\n            //     if ( currentLayer != null ) currentLayer.setMap(null)\r\n            //     if ( this.map.getMapTypeId() === naver.maps.MapTypeId.TERRAIN) {\r\n            //         changeMaptype = naver.maps.MapTypeId.NORMAL;\r\n            //         this.map.setMapTypeId(changeMaptype);\r\n            //     } else {\r\n            //         changeMaptype = naver.maps.MapTypeId.TERRAIN;\r\n            //         this.map.setMapTypeId(changeMaptype);\r\n            //     }                    \r\n                \r\n            // } \r\n\r\n            // else if (maptype === 'use_district') {\r\n            //     if ( currentLayer != null ) currentLayer.setMap(null)\r\n            //     changeLayer = new naver.maps.CadastralLayer();\r\n            //     changeLayer.setMap(toRaw(this.map))\r\n            //     currentLayer = changeLayer\r\n            // }\r\n            \r\n            currentTypeId = changeMaptype;          \r\n        },\r\n\r\n        displayOleum() {\r\n\r\n            cataindex=1;\r\n            if(oleumIndex) {\r\n\r\n                if(oleum_circles.length <=0 ) {\r\n                    let features = oleum_data.features;\r\n                    features.forEach( element => {\r\n                        let position = new google.maps.LatLng(element.geometry.coordinates[1], element.geometry.coordinates[0]);\r\n                        let dia = element.properties['반경']; \r\n                        let name = element.properties['오름명']\r\n                        this.drawingCircle(cataindex, toRaw(this.map), position, dia, name);                        \r\n                    });                    \r\n                } else {\r\n                    oleum_circles.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                oleumIndex = false;\r\n            } else {\r\n                oleum_circles.map( (cur) => cur.setMap(null));\r\n                oleumIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayOlle() {\r\n\r\n            cataindex=1;\r\n            if(olleIndex) {\r\n                if( olle_polylines.length <=0 ) {\r\n                    let features = olle_data.features;            \r\n                    features.forEach( element => {      \r\n                        let name = element.properties.name;             \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new google.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex,toRaw(this.map), path, name);\r\n                        });\r\n                    });\r\n                } else {\r\n                    olle_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }                \r\n                olleIndex = false;\r\n            } else {\r\n                olle_polylines.map( (cur) => cur.setMap(null));\r\n                olleIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHalla() {\r\n\r\n            cataindex=2; \r\n            if(hallaIndex) {\r\n                if ( halla_polylines.length <=0 ) {\r\n                    let features = halla_data.features;            \r\n                    features.forEach( element => { \r\n                        let name = element.properties.name;  \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new google.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);                     \r\n                        });\r\n                    });\r\n                } else {\r\n                    halla_polylines.map( (cur) => cur.setMap(toRaw(this.map)));\r\n                }\r\n                hallaIndex = false;\r\n            } else {\r\n                halla_polylines.map( (cur) => cur.setMap(null));\r\n                hallaIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayHiking() {\r\n\r\n            cataindex=3;\r\n            if(hikingIndex){\r\n                if ( hike_polylines.length <=0 ) {                    \r\n                    let features = hiking_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = '등산로 '+ element.properties.PMNTN_NM;                \r\n                        let coord = element.geometry.coordinates;\r\n                        coord.forEach( points => {\r\n                            var path=[];\r\n                            points.forEach ( point => {\r\n                                let position = new google.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);\r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                        });\r\n                    });\r\n                } else {\r\n                    hike_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                hikingIndex = false;\r\n            } else {\r\n                hike_polylines.map( (cur) => cur.setMap(null));\r\n                hikingIndex = true;\r\n            }          \r\n        },\r\n\r\n        displayzpt(){\r\n\r\n            cataindex=4;\r\n            if(zptIndex){\r\n                if ( zpt_polylines.length <=0 ) {                    \r\n                    let features = zpt_data.features;\r\n                    features.forEach( element => {                        \r\n                        let name = element.properties.name;                \r\n                        let coord = element.geometry.coordinates;\r\n\r\n                        if ( element.geometry.type=='LineString' ) {                            \r\n                            \r\n                            var path=[];                            \r\n                            coord.forEach( point => {\r\n                                let position = new google.maps.LatLng(point[1], point[0]);\r\n                                path.push(position);              \r\n                            });\r\n                            this.drawingPolyline(cataindex, toRaw(this.map), path, name);\r\n\r\n                        } else if (element.geometry.type=='MultiLineString'){\r\n                            \r\n                            coord.forEach( points => {\r\n                                var path=[];\r\n                                points.forEach ( point => {\r\n                                    let position = new google.maps.LatLng(point[1], point[0]);\r\n                                    path.push(position);\r\n                                });\r\n                                this.drawingPolyline(cataindex, toRaw(this.map), path, name);            \r\n                            });\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n                    zpt_polylines.map( (cur) => cur.setMap(toRaw(this.map)));                    \r\n                }\r\n                zptIndex = false;\r\n            } else {\r\n                zpt_polylines.map( (cur) => cur.setMap(null));\r\n                zptIndex = true;\r\n            }\r\n\r\n        },\r\n\r\n        displayReg() {\r\n            cataindex=5;\r\n            if(regIndex){\r\n                if ( reg_polygones.length <=0 ) {                    \r\n                    let features = land_data.features;\r\n                    features.forEach( element => {\r\n                        let name = element.properties.Name;\r\n                        let coord = element.geometry.coordinates;\r\n                        \r\n                        if ( element.geometry.type=='Polygon' ) {                                                        \r\n                            var path=[]                            \r\n                            coord.forEach( point => {\r\n                                let position = new  google.maps.LatLng(point[1], point[0])\r\n                                path.push(position)              \r\n                            })\r\n                            this.drawingPolygon(cataindex, toRaw(this.map), path, name)\r\n                        } else if (element.geometry.type=='MultiPolygon'){\r\n                            coord.forEach( mpoints => {\r\n                                var path=[]\r\n                                mpoints.forEach ( points => {\r\n                                    points.forEach( point => {\r\n                                        let position = new google.maps.LatLng(point[1], point[0])\r\n                                        path.push(position)\r\n                                    })\r\n                                })\r\n                                this.drawingPolygon(cataindex, toRaw(this.map), path, name)                                \r\n                            })\r\n                        }\r\n\r\n                    })\r\n                } else {\r\n                    reg_polygones.map( (cur) => cur.setMap(toRaw(this.map)))                    \r\n                }\r\n                regIndex = false;\r\n            } else {\r\n                reg_polygones.map( (cur) => cur.setMap(null));\r\n                regIndex = true;\r\n            }\r\n        },\r\n\r\n        drawingCircle(cataindex, map, position, dia, name) {\r\n            \r\n            let fillrealcolor='';\r\n            let backcolor='';\r\n            \r\n            if (cataindex==1) {\r\n                fillrealcolor = '#E51D1A';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                fillrealcolor = '#00FF0F';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==3) { \r\n                fillrealcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                fillrealcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var circle = new google.maps.Circle({\r\n                    map: map,\r\n                    center : position,\r\n                    radius: dia,    \r\n                    strokeColor: '#5347AA',\r\n                    strokeOpacity: 0.5,\r\n                    strokeWeight: 2,\r\n                    fillColor: fillrealcolor,\r\n                    fillOpacity: 0.3,\r\n                    // 원의 중심좌표 입니다 \r\n                    // radius: 5000, // 미터 단위의 원의 반지름입니다 \r\n                    // strokeWeight: 5, // 선의 두께입니다 \r\n                    // strokeColor: '#75B8FA', // 선의 색깔입니다\r\n                    // strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    // strokeStyle: 'dashed', // 선의 스타일 입니다\r\n                    // fillColor: '#CFE7FF', // 채우기 색깔입니다\r\n                    // fillOpacity: 0.7  // 채우기 불투명도 입니다   \r\n            });           \r\n            \r\n            var infoBox = new google.maps.InfoWindow({\r\n                content: name + '  [반경 '+dia+' m]',\r\n                // yAnchor: 2.5,\r\n            });\r\n            \r\n            // var infoBox = new google.maps.OverlayView({\r\n            //     content: name + '  [반경 '+dia+' m]',\r\n            //     yAnchor: 1.5,\r\n            // });\r\n\r\n            new google.maps.event.addListener(circle, 'mouseover', function(mouseEvent) {                                  \r\n                circle.setOptions({\r\n                    fillOpacity: 0.6,\r\n                    strokeStyle: 'dashed'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            })\r\n            \r\n            new google.maps.event.addListener(circle, 'mousemove', function(mouseEvent) {                \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new google.maps.event.addListener(circle, 'mouseout', function() {                \r\n                circle.setOptions({\r\n                    fillOpacity: 0.3,\r\n                    strokeStyle: 'line'\r\n                });\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==1) {\r\n                oleum_circles.push(circle);\r\n            } \r\n            // else if (cataindex==2) {\r\n            //     halla_polylines.push(polyline);\r\n            // } else if (cataindex==3) { \r\n            //     hike_polylines.push(polyline);\r\n            // } else if (cataindex==4) { \r\n            //     zpt_polylines.push(polyline);\r\n            // }  \r\n        },\r\n\r\n        drawingPolygon(cataindex, map, paths, name){\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==5) { \r\n                realcolor = '#0000FF';\r\n                backcolor = '#00FF00';\r\n            }\r\n\r\n            var polygon = new google.maps.Polygon({\r\n                map: map,\r\n                paths: paths, // 그려질 다각형의 좌표 배열입니다\r\n                clickable: true,\r\n                strokeWeight: 2, // 선의 두께입니다\r\n                strokeColor: realcolor, // 선의 색깔입니다\r\n                strokeOpacity: 0.8, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid', // 선의 스타일입니다\r\n                fillColor: backcolor, // 채우기 색깔입니다\r\n                fillOpacity: 0.01 // 채우기 불투명도 입니다\r\n            });\r\n\r\n            var infoBox = new google.maps.InfoWindow({\r\n                content: name,\r\n                yAnchor: 1,\r\n            });\r\n\r\n            new google.maps.event.addListener(polygon, 'mouseover', function(mouseEvent) {                                  \r\n                polygon.setOptions({\r\n                    fillColor: backcolor, // 채우기 색깔입니다\r\n                    fillOpacity: 0.8, \r\n                    strokeWeight: 3,\r\n                    strokeColor: realcolor,\r\n                    strokeOpacity: 1,\r\n                    strokeStyle: 'solid'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n                // console.log('ddd ', infoBox);\r\n            })\r\n            \r\n            new google.maps.event.addListener(polygon, 'mousemove', function(mouseEvent) {                \r\n                // customOverlay.setPosition(mouseEvent.latLng); \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new google.maps.event.addListener(polygon, 'mouseout', function() {                \r\n                polygon.setOptions({\r\n                    strokeWeight: 2, // 선의 두께입니다\r\n                    strokeColor: realcolor, // 선의 색깔입니다\r\n                    strokeOpacity: 0.8, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    strokeStyle: 'solid', // 선의 스타일입니다\r\n                    fillColor: backcolor, // 채우기 색깔입니다\r\n                    fillOpacity: 0.01 \r\n                })\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==5) { \r\n                reg_polygones.push(polygon);\r\n            }  \r\n\r\n        },\r\n\r\n        drawingPolyline(cataindex, map, path, name) {\r\n\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==1) {\r\n                realcolor = '#0004FF';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                realcolor = '#FF0000';\r\n                backcolor = '#00FF00';      \r\n            } else if (cataindex==3) { \r\n                realcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                realcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            var polyline = new google.maps.Polyline({\r\n                map: map,\r\n                path: path, // 선을 구성하는 좌표배열 입니다\r\n                strokeWeight: 2, // 선의 두께 입니다\r\n                strokeColor: realcolor, // 선의 색깔입니다\r\n                strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid'                 \r\n            });            \r\n            \r\n            var infoBox = new google.maps.InfoWindow({\r\n                content: name,\r\n                yAnchor: 1,\r\n            });\r\n\r\n            new google.maps.event.addListener(polyline, 'mouseover', function(mouseEvent) {                                  \r\n                polyline.setOptions({\r\n                    strokeWeight: 7,\r\n                    strokeColor: backcolor,\r\n                    strokeOpacity: 1,\r\n                    strokeStyle: 'solid'\r\n                });\r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n                // console.log('ddd ', infoBox);\r\n            })\r\n            \r\n            new google.maps.event.addListener(polyline, 'mousemove', function(mouseEvent) {                \r\n                // customOverlay.setPosition(mouseEvent.latLng); \r\n                infoBox.setPosition(mouseEvent.latLng);\r\n                infoBox.setMap(map);\r\n            });\r\n            \r\n            new google.maps.event.addListener(polyline, 'mouseout', function() {                \r\n                polyline.setOptions({\r\n                    strokeWeight: 2, // 선의 두께 입니다\r\n                    strokeColor: realcolor, // 선의 색깔입니다\r\n                    strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n                    strokeStyle: 'solid' \r\n                })\r\n                infoBox.setMap(null);   \r\n            });\r\n\r\n            if (cataindex==1) {\r\n                olle_polylines.push(polyline);\r\n            } else if (cataindex==2) {\r\n                halla_polylines.push(polyline);\r\n            } else if (cataindex==3) { \r\n                hike_polylines.push(polyline);\r\n            } else if (cataindex==4) { \r\n                zpt_polylines.push(polyline);\r\n            }  \r\n        },\r\n        \r\n    },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bot1 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot2 {\r\n    margin-top: 5px;\r\n}\r\n</style>","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n",null,"import { render } from \"./GoogleMap.vue?vue&type=template&id=87c51366&scoped=true\"\nimport script from \"./GoogleMap.vue?vue&type=script&lang=js\"\nexport * from \"./GoogleMap.vue?vue&type=script&lang=js\"\n\nimport \"./GoogleMap.vue?vue&type=style&index=0&id=87c51366&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-87c51366\"]])\n\nexport default __exports__","<template>  \r\n    <div id=\"map\" style=\"position: relative; overflow: hidden;\"></div>\r\n    <div class=\"bot1\">        \r\n        <b-button pill variant=\"primary\" @click=\"displayOleum\">오름</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayOlle\">제주올레</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHalla\">한라산 둘레길</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayHiking\">등산로</b-button>\r\n        <b-button pill variant=\"primary\" @click=\"displayzpt\">제로포인트루트</b-button>\r\n    </div>\r\n    <div class=\"bot2\">\r\n        <b-button pill variant=\"success\" @click=\"displayCafe(true)\">제주카페</b-button>        \r\n        <b-button pill variant=\"success\" @click=\"displayRest(true)\">제주식당</b-button>\r\n        <b-button pill variant=\"success\" @click=\"displayHotel(true)\">제주숙박</b-button>\r\n    </div>\r\n    <div class=\"bot3\">\r\n        <b-button pill variant=\"primary\" @click=\"displayReg\">제주예보구역</b-button>        \r\n        <b-button pill variant=\"primary\" @click=\"displayEquv(true)\">제주기상장비</b-button>\r\n    </div>\r\n    <!-- <div id=\"name\" style=\"font-size: 24px;\"></div>     -->\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { toRaw } from \"vue\";\r\nimport OlLayerTile from 'ol/layer/Tile.js'\r\nimport OlView from 'ol/View.js'\r\nimport OlMap from 'ol/Map.js'\r\nimport OSM from 'ol/source/OSM'\r\nimport XYZ from 'ol/source/XYZ'\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer.js'\r\nimport { fromLonLat, toLonLat } from 'ol/proj.js'\r\nimport VectorSource from 'ol/source/Vector'\r\nimport GeoJSON from 'ol/format/GeoJSON'\r\nimport Feature from 'ol/Feature.js';\r\nimport Point from 'ol/geom/Point.js';\r\nimport {\r\n    Circle as CircleStyle,\r\n    Fill,\r\n    Icon,\r\n    Stroke,\r\n    Style,\r\n    Text,\r\n} from 'ol/style.js';\r\nimport {\r\n    Select,\r\n    Translate,\r\n    defaults as defaultInteractions,\r\n} from 'ol/interaction.js';\r\nimport {altKeyOnly, click, pointerMove} from 'ol/events/condition.js';\r\nimport Overlay from 'ol/Overlay.js';\r\nimport { toStringHDMS } from 'ol/coordinate';\r\nimport {defaults} from 'ol/control/defaults';\r\n// import {ZoomSlider} from 'ol/control.js';\r\n\r\nimport jeju_rest_all_data from \"../assets/jeju_rest_all.json\"\r\nimport jeju_cafe_all_data from \"../assets/jeju_cafe_all.json\"\r\nimport hotel_all_data from \"../assets/jeju_hotel_all.json\"\r\nimport equv_all_data from \"../assets/jeju_obs.json\"\r\n\r\nvar cataindex=0;\r\nvar hallaIndex=true;\r\nvar hallaLayer=new VectorLayer();\r\nvar olleIndex=true;\r\nvar olleLayer= new VectorLayer();\r\nvar hikingIndex=true;\r\nvar hikeLayer= new VectorLayer();\r\nvar zptIndex=true;\r\nvar zptLayer= new VectorLayer();\r\nvar oleumIndex=true;\r\nvar oleumLayer= new VectorLayer();\r\n\r\nvar regIndex=true;\r\nvar regLayer= new VectorLayer();\r\n\r\nvar jejuequvIndex=true;\r\nvar jejuequvLayer=new VectorLayer();\r\nvar seogwipoequvIndex=true;\r\nvar seogwipoequvLayer=new VectorLayer();\r\nvar equvIndex = true;\r\n\r\nvar jejucafeIndex=true;\r\nvar jejucafeLayer=new VectorLayer();\r\nvar seogwipocafeIndex=true;\r\nvar seogwipocafeLayer=new VectorLayer();\r\nvar cafeIndex = true;\r\n\r\nvar jejurestIndex=true;\r\nvar jejurestLayer=new VectorLayer();\r\nvar seogwiporestIndex=true;\r\nvar seogwiporestLayer=new VectorLayer();\r\nvar restIndex = true;\r\n\r\nvar jejuhotelIndex=true;\r\nvar jejuhotelLayer=new VectorLayer();\r\nvar seogwipohotelIndex=true;\r\nvar seogwipohotelLayer=new VectorLayer();\r\nvar hotelIndex= true;\r\n\r\nvar overlay;\r\n// var popup = new Overlay.Popup()\r\nvar baseLayer = new TileLayer();\r\nvar satelliteLayer = new TileLayer();\r\nvar hybridLayer = new TileLayer();\r\nvar grayLayer = new TileLayer();\r\nvar osmLayer = new TileLayer();\r\nvar array = null;\r\nvar apikey= '';\r\n// const zoomslider = new ZoomSlider();\r\n\r\nexport default {\r\n    name: 'OpenLayerMap',\r\n\r\n    created() {\r\n        apikey = process.env.VUE_APP_VWORLDMAP_API_KEY;      \r\n        // console.log('apikey ', apikey);        \r\n    },\r\n\r\n    mounted() {\r\n        this.initMap()\r\n        this.my_interaction()\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            center: [126.58, 33.38 ], \r\n            zoom: 10,\r\n            projection:\"EPSG:4326\",\r\n        }\r\n    },\r\n\r\n    methods:{\r\n\r\n        initMap() {\r\n\r\n            const target = document.getElementById('map')\r\n            \r\n            baseLayer = new TileLayer({\r\n                name : 'baseLayer',\r\n                source: new XYZ({\r\n                    url: `http://api.vworld.kr/req/wmts/1.0.0/${apikey}/Base/{z}/{y}/{x}.png`\r\n                    // url: `http://api.vworld.kr/req/wmts/1.0.0/${process.env.VUE_APP_VWORLDMAP_API_KEY}/Base/{z}/{y}/{x}.png`\r\n                })\r\n                // source :  new XYZ({\r\n                //     url: 'http://xdworld.vworld.kr:8080/2d/Base/202002/{z}/{x}/{y}.png'\r\n                // })\r\n            })\r\n\r\n            satelliteLayer = new TileLayer({\r\n                name : 'satelliteLayer',\r\n                source: new XYZ({\r\n                    url: `http://api.vworld.kr/req/wmts/1.0.0/${apikey}/Satellite/{z}/{y}/{x}.png`\r\n                })\r\n            })\r\n\r\n            hybridLayer = new TileLayer({\r\n                name : 'hybridLayer',\r\n                source: new XYZ({\r\n                    url: `http://api.vworld.kr/req/wmts/1.0.0/${apikey}/Hybrid/{z}/{y}/{x}.png`\r\n                })\r\n            })\r\n\r\n            grayLayer = new TileLayer({\r\n                name : 'grayLayer',\r\n                source: new XYZ({\r\n                    url: `http://api.vworld.kr/req/wmts/1.0.0/${apikey}/midnight/{z}/{y}/{x}.png`\r\n                })\r\n            })\r\n\r\n            osmLayer = new OlLayerTile({ \r\n                source: new OSM()\r\n            })\r\n\r\n            // layers: [new OlLayerTile({ source: new OSM()}), vWorld], \r\n            this.map = new OlMap({\r\n                // controls: defaults({\r\n                //     zoom: false,\r\n                //     attribution: false,\r\n                //     rotate: false,\r\n                // }),\r\n                target: target,\r\n                layers: [osmLayer, baseLayer, satelliteLayer, hybridLayer, grayLayer], \r\n                view: new OlView({\r\n                    center: this.center,\r\n                    zoom: this.zoom,\r\n                    projection: this.projection,\r\n                }),\r\n            })\r\n\r\n            // this.map.addControl(zoomslider)\r\n            // array = this.map.getLayers().getArray()\r\n            // console.log(array)\r\n\r\n            baseLayer.setVisible(true)\r\n            osmLayer.setVisible(false)\r\n            satelliteLayer.setVisible(false)\r\n            hybridLayer.setVisible(false)\r\n            grayLayer.setVisible(false)\r\n            \r\n            var content = document.createElement('div');\r\n            content.className = 'modes'\r\n            if ( target.clientWidth > 360 ) {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                // '<button id=\"terrain\">지형</button>\\n' +\r\n                '<button id=\"basemap\">기본맵(v)</button>\\n' +\r\n                '<button id=\"osmmap\">OSM맵</button>\\n' +\r\n                '<button id=\"satellitemap\">위성사진(v)</button>\\n' +\r\n                '<button id=\"hybridmap\">복합지도(v)</button>\\n' +\r\n                '<button id=\"graymap\">흑백지도(v)</button>\\n' +\r\n                // '<button id=\"bicycle\">자전거</button>\\n' +\r\n                // '<button id=\"roadview\">도로</button>\\n' +\r\n                '<button id=\"jejusi\">제주시</button>\\n' +\r\n                '<button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                // '<span id=\"popup\">&nbsp;</span>'+\r\n                '</div>\\n';\r\n            } else {                \r\n                content.innerHTML =  \r\n                // '<div class=\"modes\">\\n'+\r\n                // '<button id=\"hybrid\">하이브리드</button>\\n' +\r\n                // '<button id=\"terrain\">지형</button>\\n' +\r\n                '<button id=\"basemap\">기본맵(v)</button>\\n' +\r\n                '<button id=\"osmmap\">OSM맵</button>\\n' +\r\n                '<button id=\"satellitemap\">위성사진(v)</button>\\n' +\r\n                '<div>\\n'+\r\n                '<button id=\"hybridmap\">복합지도(v)</button>\\n' +\r\n                '<button id=\"graymap\">흑백지도(v)</button>\\n' +\r\n                '</div>\\n'+\r\n                // '<button id=\"bicycle\">자전거</button>\\n' +\r\n                // '<div>\\n'+\r\n                //     '<button id=\"bicycle\">자전거</button>\\n' +\r\n                //     // '<button id=\"roadview\">도로</button>\\n' +\r\n                // '</div>\\n'+\r\n                '<div>\\n'+\r\n                '   <button id=\"jejusi\">제주시</button>\\n' +\r\n                '   <button id=\"seogwiposi\">서귀포시</button>\\n' +\r\n                '</div>\\n'+\r\n                // '<span id=\"popup\">&nbsp;</span>'+\r\n                '</div>\\n';\r\n            }\r\n            target.appendChild(content);\r\n            \r\n            // this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(content);\r\n        \r\n            // const hybrid_btn = document.querySelector('#hybrid');  \r\n            // hybrid_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('hybrid')\r\n            // });\r\n\r\n            // const terrain_btn = document.querySelector('#terrain');  \r\n            // terrain_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('terrain')\r\n            // });\r\n\r\n            const basemap_btn = document.querySelector('#basemap');  \r\n            basemap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('basemap')\r\n            });\r\n\r\n            const osmmap_btn = document.querySelector('#osmmap');  \r\n            osmmap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('osmmap')\r\n            });\r\n            \r\n            const satellitemap_btn = document.querySelector('#satellitemap');  \r\n            satellitemap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('satellitemap')\r\n            });\r\n            // '<button id=\"hybridmap\">복합지도</button>\\n' +\r\n            //     '<button id=\"graymap\">흑백지도</button>\\n' +\r\n\r\n            const hybridmap_btn = document.querySelector('#hybridmap');  \r\n            hybridmap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('hybridmap')\r\n            });\r\n\r\n            const graymap_btn = document.querySelector('#graymap');  \r\n            graymap_btn.addEventListener('click', (event) => {\r\n                this.onSelectMap('graymap')\r\n            });\r\n\r\n            // const traffic_btn = document.querySelector('#traffic');  \r\n            // traffic_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('traffic')\r\n            // });\r\n\r\n            // const roadview_btn = document.querySelector('#roadview');  \r\n            // roadview_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('roadview')\r\n            // });\r\n\r\n            // const use_district_btn = document.querySelector('#use_district');  \r\n            // use_district_btn.addEventListener('click', (event) => {\r\n            //     this.onSelectMap('use_district')\r\n            // });\r\n\r\n\r\n            const jejusi_btn = document.querySelector('#jejusi');  \r\n            jejusi_btn.addEventListener('click', (event) => {\r\n                this.check_button_jejusi()                \r\n            });\r\n\r\n            const seogwiposi_btn = document.querySelector('#seogwiposi');  \r\n            seogwiposi_btn.addEventListener('click', (event) => {\r\n                this.check_button_seogwiposi()\r\n            });\r\n            \r\n            // var body = document.getElementsByTagName('body')[0];            \r\n            var ct = document.createElement('div');\r\n            ct.innerHTML =\r\n                '<div id=\"popup\" class=\"ol-popup\">\\n'+\r\n                '<a href=\"#\" id=\"popup-closer\" class=\"ol-popup-closer\"></a>\\n'+\r\n                '<div id=\"popup-content\"></div>\\n'+\r\n                '</div>';\r\n\r\n            target.appendChild(ct);\r\n\r\n            // console.log(document)\r\n            // this.map.on('pointermove', this.my_interaction)\r\n\r\n        },\r\n\r\n        // onMouseMove(browserEvent) {\r\n        //     var coordinate = browserEvent.coordinate;\r\n        //     var pixel = this.map.getPixelFromCoordinate(coordinate);\r\n        //     var el = document.getElementById('name');\r\n        //     el.innerHTML = '';\r\n        //     map.forEachFeatureAtPixel(pixel, function(feature) {\r\n        //     el.innerHTML += feature.get('name') + '<br>';\r\n        //     });\r\n        // },\r\n\r\n        my_interaction() {\r\n\r\n            var name=''\r\n            var dia=0.0\r\n            var link=''\r\n            var phone=''\r\n            var address=''\r\n\r\n            const container = document.getElementById('popup');\r\n            const content = document.getElementById('popup-content');\r\n            const closer = document.getElementById('popup-closer');\r\n\r\n            overlay = new Overlay({\r\n                element: container,\r\n                autoPan: {\r\n                    animation: {\r\n                    duration: 250,\r\n                    },\r\n                },\r\n            });\r\n\r\n            closer.onclick = function () {\r\n                overlay.setPosition(undefined);\r\n                closer.blur();\r\n                return false;\r\n            };\r\n\r\n            this.map.addOverlay(overlay)\r\n        \r\n            // var selectPointerMove = new Select({\r\n            //     condition: pointerMove,\r\n            //     style: new Style({\r\n            //         stroke: new Stroke({\r\n            //             color: 'red',\r\n            //             width: 3\r\n            //         }),\r\n            //         fill: new Fill({\r\n            //             color: 'rgba(0,0,255,0.6)'\r\n            //         })\r\n            //     })\r\n            // });\r\n            \r\n            // this.map.addInteraction(selectPointerMove);\r\n\r\n            // let style = new Style({\r\n            //     fill : new Fill({color : 'rgba(215, 35, 77, 1)'}), // rgb 코드 사용 가능\r\n            //     // fill : new ol.style.Fill({color : '#d7234d'}), // HEX 코드 사용 가능\r\n            //     stroke : new Stroke({color: 'rgba(34, 160, 235, 1)'})\r\n            // });\r\n\r\n            // let selectSingleClick = new Select({\r\n            //     condition: click, // click 하는 이벤트 (pointMove, singleclick, altClick 등)\r\n            //     style: new Style({\r\n            //         stroke: new Stroke({\r\n            //             color: 'white',\r\n            //             width: 2\r\n            //         }),\r\n            //         fill: new Fill({\r\n            //             color: 'rgba(0,0,255,0.6)'\r\n            //         })\r\n            //     })\r\n            // });\r\n\r\n\r\n            // this.map.addInteraction(selectSingleClick)\r\n\r\n            // let _style = null;\r\n            // // feature 를 선택할 때 이벤트\r\n            // selectSingleClick.on('select', function(e) {\r\n            //     if(e.target.getFeatures().a[0] != undefined){\r\n            //         _style = e.target.getFeatures().a[0]; // 기존 색상 담기\r\n            //         e.target.getFeatures().a[0].setStyle(null); // 기존 색상 제거\r\n            //     }\r\n            //     if(e.target.getFeatures().a.length > 0){\r\n            //         document.getElementById('info').innerHTML = e.target.getFeatures().a[0].N.zoneName;\r\n            //     }else{\r\n            //         _style.setStyle(style); // 기존 색상 추가\r\n            //         document.getElementById('info').innerHTML = \"\";\r\n            //     }\r\n            // });\r\n\r\n            \r\n            let selected = null;            \r\n            // var el = document.getElementById('name');\r\n            // var highlightStyle = new Style({\r\n            //     stroke: new Stroke({\r\n            //         color: [255,0,0,0.6],\r\n            //         width: 2\r\n            //     }),\r\n            //     fill: new Fill({\r\n            //         color: [255,0,0,0.2]\r\n            //     }),\r\n            //     zIndex: 1\r\n            // });            \r\n            // function styleFunction(feature, resolution) {\r\n            //         var style;\r\n            //         var geom = feature.getGeometry();\r\n            //         if (geom.getType() == 'Point') {\r\n            //         var text = feature.get('text');\r\n            //         baseTextStyle.text = text;\r\n            //         // this is inefficient as it could create new style objects for the\r\n            //         // same text.\r\n            //         // A good exercise to see if you understand would be to add caching\r\n            //         // of this text style\r\n            //         var isoCode = feature.get('isoCode').toLowerCase();\r\n            //         style = new Style({\r\n            //             text: new Text(baseTextStyle),\r\n            //             image: new Icon({\r\n            //             src: '../assets/img/flags/'+isoCode+'.png'\r\n            //             }),\r\n            //             zIndex: 2\r\n            //         });\r\n            //         } else {\r\n            //         style = highlightStyle;\r\n            //         }\r\n            //         return [style];\r\n            // }\r\n            // var featureOverlay = new Overlay({\r\n            //     map: this.map,\r\n            //     style: styleFunction\r\n            // });\r\n\r\n            this.map.on('pointermove', function (e) {\r\n\r\n                let selectStyle\r\n                \r\n                if (selected !== null) {\r\n                    selected.setStyle(undefined);\r\n                    selected = null;\r\n                }                \r\n                // featureOverlay.getFeatures().clear()\r\n                // this.forEachFeatureAtPixel(e.pixel, function (feature, layer) {\r\n                //     selected = feature\r\n                //     feature.setStyle(selectStyle);\r\n                //     console.log( 'layer ',layer.get('layer_name'))\r\n                //     olleLayer.getFeatures(e.pixel).then(function (ollefeature){\r\n                //         if (ollefeature.length >0 ) console.log(ollefeature)\r\n                //         return\r\n                //     })\r\n                //     return                  \r\n                // })\r\n\r\n                var oleum_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        \r\n                        selected = feature\r\n                        let dia = feature.get('반경')/50;\r\n                        let _myStroke = new Stroke({\r\n                            color : 'rgba(255,0,0,1.0)',\r\n                            width : 1,\r\n                        })\r\n                        let _myFill = new Fill({\r\n                            color: 'rgba(255,0,0,0.7)'\r\n                        })\r\n                        let circle = new CircleStyle({\r\n                            radius: dia,\r\n                            fill: _myFill,\r\n                            stroke: _myStroke,\r\n                        })\r\n\r\n                        selectStyle = new Style({\r\n                            image : circle,\r\n                        })\r\n\r\n                        feature.setStyle(selectStyle)\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === oleumLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( oleum_feature != null ) {\r\n                    name = oleum_feature.get('오름명')\r\n                    dia = oleum_feature.get('반경')\r\n                    address =''         \r\n                }\r\n\r\n                var oll_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        \r\n                        selected = feature\r\n                        selectStyle = new Style({\r\n                            fill: new Fill({\r\n                                color: '#eeeeee',\r\n                            }),\r\n                            // backcolor = '#FF0000'; \r\n                            stroke: new Stroke({\r\n                                color: '#FF0000',\r\n                                width: 2,\r\n                            }),\r\n                        })                \r\n                        feature.setStyle(selectStyle)\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === olleLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( oll_feature != null ) {\r\n                    name = oll_feature.get('name')\r\n                    address =''\r\n                    dia=-1.0                    \r\n                }\r\n                \r\n                var hall_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        \r\n                        selected = feature\r\n                        selectStyle = new Style({\r\n                            fill: new Fill({\r\n                                color: '#eeeeee',\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                color: '#00FF00',\r\n                                width: 2,\r\n                            }),\r\n                        });                \r\n                        feature.setStyle(selectStyle);\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === hallaLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( hall_feature != null ) {\r\n                    //console.log(  hall_feature.get('name'))\r\n                    name = hall_feature.get('name')\r\n                    address =''\r\n                    dia=-1.0                    \r\n                }\r\n\r\n                var hike_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        \r\n                        selected = feature\r\n                        selectStyle = new Style({\r\n                            fill: new Fill({\r\n                                color: '#eeeeee',\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                color: '#0000FF',\r\n                                width: 2,\r\n                            }),\r\n                        });                \r\n                        feature.setStyle(selectStyle);\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === hikeLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( hike_feature != null ) {\r\n                    name = hike_feature.get('PMNTN_NM')\r\n                    address =''\r\n                    dia=-1.0                     \r\n                }\r\n\r\n                var zpt_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {                        \r\n                        selected = feature\r\n                        selectStyle = new Style({\r\n                            fill: new Fill({\r\n                                color: '#eeeeee',\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                color: '#00FF00',\r\n                                width: 2,\r\n                            }),\r\n                        });                \r\n                        feature.setStyle(selectStyle);\r\n\r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === zptLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( zpt_feature != null ) {\r\n                    name = zpt_feature.get('name')\r\n                    address =''                    \r\n                    dia=-1.0 \r\n                }\r\n                \r\n                var point_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature) {\r\n                        selected = feature                        \r\n                        return feature;\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return (layer === seogwipocafeLayer) || (layer === jejucafeLayer) \r\n                        ||  (layer === seogwiporestLayer) ||(layer === jejurestLayer)\r\n                        ||  (layer === seogwipohotelLayer) ||(layer === jejuhotelLayer)                      \r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( point_feature != null ) {\r\n                    name = point_feature.get('name')\r\n                    link = point_feature.get('link')\r\n                    phone = point_feature.get('phone')\r\n                    address = point_feature.get('address')\r\n                    dia=-1.0\r\n                }\r\n\r\n                var reg_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature, layer) {\r\n\r\n                        if (!layer) { return}\r\n                        \r\n                        var geometry = feature.getGeometry();\r\n                        // var point;\r\n                        // switch (geometry.getType()) {\r\n                        //     case 'MultiPolygon':\r\n                        //         var poly = geometry.getPolygons().reduce(function(left, right) {\r\n                        //         return left.getArea() > right.getArea() ? left : right;\r\n                        //         });\r\n                        //         point = poly.getInteriorPoint().getCoordinates();\r\n                        //         break;\r\n                        //     case 'Polygon':\r\n                        //         point = geometry.getInteriorPoint().getCoordinates();\r\n                        //         break;\r\n                        //     default:\r\n                        //         point = geometry.getClosestPoint(coordinate);\r\n                        // }\r\n                        // console.log(' point ', point)\r\n\r\n                        // featureOverlay.addFeature(feature);\r\n\r\n\r\n                        // var pgeom = feature.getGeometry()\r\n                        if ( geometry.intersectsCoordinate(e.coordinate)) {\r\n                            // console.log(feature)\r\n                            selected = feature\r\n                            selectStyle = new Style({\r\n                                fill: new Fill({\r\n                                    color: '#00FF00',\r\n                                }),\r\n                                stroke: new Stroke({\r\n                                    color: '#00FF00',\r\n                                    width: 2,\r\n                                }),\r\n                            });                \r\n                            feature.setStyle(selectStyle);\r\n                            return feature\r\n                        } else {\r\n                            return\r\n                        }                       \r\n                        // // console.log('dddd ', feature)\r\n                        // // return feature;                       \r\n\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return layer === regLayer;\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if( reg_feature != null ) {\r\n                    name = reg_feature.get('Name')\r\n                    address =''                    \r\n                    dia=-1.0 \r\n                } else {\r\n                    name = ''\r\n                    address =''                    \r\n                    dia=-1.0 \r\n                }\r\n\r\n                var equv_feature = this.forEachFeatureAtPixel(\r\n                    e.pixel,\r\n                    function (feature, layer) {\r\n\r\n                        if (!layer) { return}\r\n                        selected = feature                        \r\n\r\n                        return feature\r\n                    },\r\n                    {\r\n                        layerFilter: function (layer) {\r\n                        return (layer === jejuequvLayer) || (layer === seogwipoequvLayer)\r\n                        },\r\n                    }\r\n                )\r\n\r\n                if( equv_feature != null ) {\r\n                    // geometry: position,\r\n                    // name : name,\r\n                    // address: my_address,\r\n                    // ename : ename,\r\n                    // dpoint : dpoint,\r\n\r\n                    name = '<div><h4>'+ equv_feature.get('ename')+'</h4></div>'+\r\n                            '<div><h5>'+equv_feature.get('name')+'</h5></div>'+                            \r\n                            '<div>'+ equv_feature.get('address')+'</div>'\r\n                    address =''                    \r\n                    dia=-1.0 \r\n                } else {\r\n                    name = ''\r\n                    address =''                    \r\n                    dia=-1.0 \r\n                }\r\n\r\n                if (selected ) {\r\n                    if( name !== null) {\r\n                        const coordinate = e.coordinate\r\n                        if (dia > 0.0 ) {\r\n                            content.innerHTML = '<p>' + name + '</p>'+'<p>반경:' + dia + ' m</p>';\r\n                            // overlay.setPosition(coordinate);\r\n                        } else {\r\n                            \r\n                            // overlay.setPosition(coordinate);\r\n                            if (address.length >1 ) {\r\n                                content.innerHTML = '<div class=\"placeinfo\">'+\r\n                                '   <a class=\"title\" href=\"' + link + '\" target=\"_blank\" title=\"' + name + '\">' + name + '</a>';\r\n                                content.innerHTML += '<div> <span title=\"' + address + '\">' + address + '</span> </div>';   \r\n                                content.innerHTML += '      <span class=\"tel\"> Tel. ' + phone + '</span>'; \r\n                                content.innerHTML += '<div class=\"after\"></div>';\r\n                            } else {\r\n                                content.innerHTML = '<p>' + name + '</p>';\r\n                            }\r\n                        }\r\n                        overlay.setPosition(coordinate);\r\n                        // el.innerHTML = name + '<br>';\r\n                    }\r\n                } else {                    \r\n                    content.innerHTML = '&nbsp;'\r\n                    overlay.setPosition(null)                    \r\n                }               \r\n\r\n                // console.log(p_feature)\r\n                // if (p_feature !== null) {\r\n                //     console.log('dddd  ',p_feature)\r\n                //         // const coordinate = e.coordinate\r\n                //         // let my_name = p_feature.get('name')\r\n                //         // console.log(my_name)\r\n                //         // let my_link = point_feature.get('link')\r\n                //         // let my_phone = point_feature.get('phone')\r\n                //         // let my_address = point_feature.get('address')\r\n                //         // content.innerHTML = '<div class=\"placeinfo\">'+\r\n                //         // '   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + my_name + '\">' + my_name + '</a>';\r\n                //         // content.innerHTML += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n                //         // content.innerHTML += '      <span class=\"tel\"> Tel. ' + my_phone + '</span>'; \r\n                //         // content.innerHTML += '<div class=\"after\"></div>';\r\n                //         // overlay.setPosition(coordinate)\r\n                // }\r\n\r\n                // console.log('point   ',point_feature)\r\n\r\n            }) \r\n            \r\n            // this.map.on('click', function (evt) {\r\n                \r\n            //     // const coordinate = evt.coordinate\r\n\r\n            //     // let feature = this.forEachFeatureAtPixel(e.pixel, function (feature) {                    \r\n            //     //     return feature                 \r\n            //     // })\r\n            //     // let my_name = feature.get('name')\r\n            //     // let my_link = feature.get('link')\r\n            //     // let my_phone = feature.get('phone')\r\n            //     // let my_address = feature.get('address')\r\n            //     // let content = '<div class=\"placeinfo\">'+\r\n            //     // '   <a class=\"title\" href=\"' + my_link + '\" target=\"_blank\" title=\"' + my_name + '\">' + my_name + '</a>';\r\n            //     // content += '<div> <span title=\"' + my_address + '\">' + my_address + '</span> </div>';   \r\n            //     // content += '      <span class=\"tel\"> Tel. ' + my_phone + '</span>'; \r\n            //     // content += '<div class=\"after\"></div>';\r\n                \r\n                \r\n            // })\r\n            // this.map.on('click', (e) => {\r\n            //     overlayLayer.setPosition(undefined);\r\n            //     this.map.forEachFeatureAtPixel(e.pixel, function (feature, layer) {\r\n            //         let clickedCoordinate = e.coordinate;\r\n            //         let clickedFeatureName = feature.get('name');\r\n            //         let clickedFeatureAdditionInfo = feature.get('additionalinfo');\r\n            //         if (clickedFeatureName && clickedFeatureAdditionInfo != undefined) {\r\n            //             overlayLayer.setPosition(clickedCoordinate);\r\n            //             overlayFeatureName.innerHTML = clickedFeatureName;\r\n            //             overlayFeatureAdditionInfo.innerHTML = clickedFeatureAdditionInfo;\r\n            //         }\r\n            //     })\r\n            // }) \r\n\r\n            // console.log('dddd ', document)\r\n            \r\n        },\r\n\r\n        check_button_jejusi() {\r\n                if ( !cafeIndex ) {\r\n                    jejucafeIndex = jejucafeIndex ? false : true\r\n                    seogwipocafeIndex = false\r\n                    cafeIndex = false                                \r\n                    this.displayCafe(false)\r\n                }\r\n                if ( !restIndex ) {\r\n                    jejurestIndex = jejurestIndex ? false : true\r\n                    seogwiporestIndex = false\r\n                    restIndex = false                                \r\n                    this.displayRest(false)\r\n                }\r\n                if ( !hotelIndex ) {\r\n                    jejuhotelIndex = jejuhotelIndex ? false : true\r\n                    seogwipohotelIndex = false\r\n                    hotelIndex = false                                \r\n                    this.displayHotel(false)\r\n                }\r\n                if ( !equvIndex ) {\r\n                    jejuequvIndex = jejuequvIndex ? false : true\r\n                    seogwipoequvIndex = false\r\n                    equvIndex = false                                \r\n                    this.displayEquv(false)\r\n                }\r\n\r\n        },\r\n\r\n        check_button_seogwiposi() {\r\n                if ( !cafeIndex ) {\r\n                    seogwipocafeIndex = seogwipocafeIndex ? false : true\r\n                    cafeIndex = false\r\n                    jejucafeIndex = false\r\n                    this.displayCafe(false)\r\n                } \r\n                if ( !restIndex ) {\r\n                    seogwiporestIndex = seogwiporestIndex ? false : true\r\n                    restIndex = false\r\n                    jejurestIndex = false\r\n                    this.displayRest(false)\r\n                } \r\n                if ( !hotelIndex ) {\r\n                    seogwipohotelIndex = seogwipohotelIndex ? false : true\r\n                    hotelIndex = false\r\n                    jejuhotelIndex = false\r\n                    this.displayHotel(false)\r\n                }\r\n                if ( !equvIndex ) {\r\n                    seogwipoequvIndex = seogwipoequvIndex ? false : true\r\n                    equvIndex = false\r\n                    jejuequvIndex = false\r\n                    this.displayEquv(false)\r\n                }        \r\n\r\n        },               \r\n\r\n        onSelectMap(name) {\r\n\r\n            if (name ==='basemap') {\r\n                baseLayer.setVisible(true)\r\n                osmLayer.setVisible(false)\r\n                satelliteLayer.setVisible(false)\r\n                hybridLayer.setVisible(false)\r\n                grayLayer.setVisible(false)\r\n            } else if (name ==='osmmap') {\r\n                baseLayer.setVisible(false)\r\n                osmLayer.setVisible(true)\r\n                satelliteLayer.setVisible(false)\r\n                hybridLayer.setVisible(false)\r\n                grayLayer.setVisible(false)\r\n            } else if (name === 'satellitemap') {\r\n                baseLayer.setVisible(false)\r\n                osmLayer.setVisible(false)\r\n                satelliteLayer.setVisible(true)\r\n                hybridLayer.setVisible(false)\r\n                grayLayer.setVisible(false)\r\n            } else if ( name === 'hybridmap') {\r\n                baseLayer.setVisible(false)\r\n                osmLayer.setVisible(false)\r\n                satelliteLayer.setVisible(false)\r\n                hybridLayer.setVisible(true)\r\n                grayLayer.setVisible(false)\r\n            } else if ( name === 'graymap') {\r\n                baseLayer.setVisible(false)\r\n                osmLayer.setVisible(false)\r\n                satelliteLayer.setVisible(false)\r\n                hybridLayer.setVisible(false)\r\n                grayLayer.setVisible(true)\r\n            }\r\n\r\n        },\r\n\r\n        displayOleum(){            \r\n            if(oleumIndex) {\r\n                oleumLayer= this.get_circlelayer('./assets/jeju_oleum.json')\r\n                this.map.addLayer(oleumLayer)\r\n                oleumIndex = false;\r\n            } else {\r\n                this.map.removeLayer(oleumLayer)\r\n                oleumIndex = true;\r\n            }\r\n        },\r\n\r\n        get_circlelayer(fname) {\r\n\r\n            const oleumstyleFunction = function (feature) {\r\n        \r\n                // let name = feature.get('오름명');\r\n                // let num = feature.get('연번');\r\n                // let nickname = feature.get('타오름명');\r\n                let dia = feature.get('반경')/90;\r\n\r\n                let _myStroke = new Stroke({\r\n                    color : 'rgba(255,0,0,1.0)',\r\n                    width : 1,\r\n                })\r\n                let _myFill = new Fill({\r\n                    color: 'rgba(229,29,26,0.3)'\r\n                })\r\n                let circle = new CircleStyle({\r\n                    radius: dia,\r\n                    fill: _myFill,\r\n                    stroke: _myStroke,\r\n                })\r\n\r\n                let mystyle = new Style({\r\n                    image : circle\r\n                })\r\n\r\n                // let label= ''\r\n                // let ch_offset=0\r\n                // if (nickname ==null) {\r\n                //     label = num +'\\n'+name  \r\n                //     ch_offset = -25\r\n                // } else{\r\n                //     label = num +'\\n'+name+'\\n'+nickname\r\n                //     ch_offset = -30\r\n                // }\r\n                \r\n                // let mystyle = new Style({      \r\n                    \r\n                //     // text: new Text({\r\n                //     //         text: label,\r\n                //     //         font: 'bold 11px Calibri,sans-serif',                            \r\n                //     // fill: new Fill({\r\n                //     //     color: '#E51D1A',\r\n                //     // }),\r\n                //     //         stroke: new Stroke({\r\n                //     //             color: 'white',\r\n                //     //             width: 2,\r\n                //     //         }),\r\n                //     //         offsetY : ch_offset\r\n                //     //     }),                        \r\n                //     image: new CircleStyle({\r\n                //             radius: dia,\r\n                //             fill: new Fill({\r\n                //                     color: '#E51D1A',\r\n                //             }),\r\n                //     })\r\n                // });\r\n\r\n                // let mystyle = new Circle({\r\n                //     radius: dia,\r\n                //     fill : new Fill({\r\n                //         color: 'blue',\r\n                //     })\r\n                // })\r\n\r\n                // let mystyle=  new Style({\r\n                //     fill: new Fill({\r\n                //         color: 'rgba(0, 255,0, 0.3)'\r\n                //     }),\r\n                //     stroke: new Stroke({\r\n                //         color: '#737373',\r\n                //         width: 2\r\n                //     }),\r\n                //     image: new Circle({\r\n                //         radius: dia,\r\n                //         fill: new Fill({\r\n                //             color: '#ffcc33'\r\n                //         })\r\n                //     }),\r\n                // });\r\n\r\n                return mystyle;  \r\n            }\r\n            const oleum_source = new VectorSource({\r\n                url: fname,\r\n                projection: 'EPSG:4326',\r\n                format: new GeoJSON(),\r\n            });\r\n            const oleumLayer = new VectorLayer({\r\n                source: oleum_source,\r\n                style : oleumstyleFunction,\r\n            });\r\n            return oleumLayer;\r\n        },\r\n\r\n        displayOlle() {\r\n            cataindex=1;\r\n            if(olleIndex) {\r\n                olleLayer= this.get_polylineLayer('../assets/jeju_olle_trail.json')\r\n                this.map.addLayer(olleLayer)\r\n                olleIndex = false;\r\n            } else {\r\n                this.map.removeLayer(olleLayer)\r\n                olleIndex = true;\r\n            }            \r\n        },\r\n\r\n        displayHalla() {\r\n            cataindex=2;\r\n            if(hallaIndex) {\r\n                hallaLayer = this.get_polylineLayer('../assets/jeju_halla_trail.json')\r\n                this.map.addLayer(hallaLayer)\r\n                hallaIndex = false;\r\n            } else {\r\n                this.map.removeLayer(hallaLayer)\r\n                hallaIndex = true;\r\n            }\r\n            \r\n        },\r\n\r\n        displayHiking() {\r\n            cataindex=3;\r\n            if(hikingIndex){\r\n                hikeLayer = this.get_polylineLayer('../assets/jeju_hiking_total.json')\r\n                this.map.addLayer(hikeLayer)            \r\n                hikingIndex = false;\r\n            } else {\r\n\r\n                this.map.removeLayer(hikeLayer)                \r\n                hikingIndex = true;\r\n            }          \r\n        },\r\n\r\n        displayzpt(){\r\n            cataindex=4;\r\n            if(zptIndex){\r\n                zptLayer = this.get_polylineLayer('../assets/jeju_zpt.json')\r\n                this.map.addLayer(zptLayer)\r\n                zptIndex = false;\r\n            } else {\r\n                this.map.removeLayer(zptLayer)\r\n                zptIndex = true;\r\n            }\r\n        },\r\n\r\n        displayReg() {\r\n            cataindex=5;\r\n            if(regIndex){\r\n                regLayer = this.get_polylineLayer('../assets/jeju_land.json')\r\n                this.map.addLayer(regLayer)\r\n                regIndex = false;\r\n            } else {\r\n                this.map.removeLayer(regLayer)\r\n                regIndex = true;\r\n            }\r\n        },\r\n\r\n        get_polylineLayer(fname) {\r\n\r\n            let realcolor='';\r\n            let backcolor='';\r\n\r\n            if (cataindex==1) {\r\n                realcolor = '#0004FF';\r\n                backcolor = '#FF0000';      \r\n            } else if (cataindex==2) {\r\n                realcolor = '#FF0000';\r\n                backcolor = '#00FF00';      \r\n            } else if (cataindex==3) { \r\n                realcolor = '#FF00FF';\r\n                backcolor = '#0000FF';                      \r\n            }  else if (cataindex==4) { \r\n                realcolor = '#FF0000';\r\n                backcolor = '#0000FF';\r\n            } else if (cataindex==5) { \r\n                realcolor = '#0000FF';\r\n                backcolor = '#0000FF';\r\n            }\r\n\r\n            const styleFunction = function (feature) {\r\n        \r\n                // let name = feature.get('오름명');\r\n                // let num = feature.get('연번');\r\n                // let nickname = feature.get('타오름명');\r\n                // // let dia = feature.get('반경')/50;\r\n\r\n                // let label= ''\r\n                // let ch_offset=0\r\n                // if (nickname ==null) {\r\n                //     label = num +'\\n'+name  \r\n                //     ch_offset = -25\r\n                // } else{\r\n                //     label = num +'\\n'+name+'\\n'+nickname\r\n                //     ch_offset = -30\r\n                // }\r\n                let mystyle = new Style({      \r\n                    // text: new Text({\r\n                    // text: label,\r\n                    // font: 'bold 11px Calibri,sans-serif',\r\n                    // fill: new Fill({\r\n                    //     color: 'black',\r\n                    // }),\r\n                    // stroke: new Stroke({\r\n                    //     color: 'white',\r\n                    //     width: 2,\r\n                    // }),\r\n                    // offsetY : ch_offset\r\n                    // }),\r\n                    // image: new CircleStyle({\r\n                    //     radius: dia,\r\n                    //     fill: new Fill({\r\n                    //             color: 'red',\r\n                    //     }),\r\n                    // }),\r\n                    stroke: new Stroke({\r\n                        color: realcolor,\r\n                        width: 2,\r\n                    }),\r\n                });\r\n\r\n                return mystyle;  \r\n            }\r\n            const polyline_source = new VectorSource({\r\n                url: fname,\r\n                projection: 'EPSG:4326',\r\n                format: new GeoJSON(),\r\n            });\r\n            const polylineLayer = new VectorLayer({\r\n                source: polyline_source,\r\n                style : styleFunction,\r\n            });\r\n\r\n            return polylineLayer;\r\n        },\r\n        \r\n        make_equv_data() {\r\n            let features = equv_all_data.features;\r\n            var j_source = new VectorSource()\r\n            var s_source = new VectorSource()\r\n\r\n            features.forEach( element => {\r\n                // console.log(element)\r\n                let name = element.properties['지점명']\r\n                let ename = element.properties['장비명']\r\n                let lng = element.properties['경도']\r\n                let lat = element.properties['위도']\r\n                let dpoint = element.properties['기관지점번호']\r\n                let my_address = element.properties['법정동 주소']\r\n                // console.log( name, ename, lat, lng, dpoint, my_address)\r\n                let city=''\r\n                if( my_address !== null ){\r\n                    city = my_address.split(' ')[1]\r\n                }                \r\n                let position = new Point([lng, lat])\r\n                var feat = new Feature({\r\n                    geometry: position,\r\n                    name : name,\r\n                    address: my_address,\r\n                    ename : ename,\r\n                    dpoint : dpoint,\r\n                })                \r\n                if ( city === '제주시')  {\r\n                    j_source.addFeature(feat)\r\n                } else if ( city === '서귀포시') {\r\n                    s_source.addFeature(feat)\r\n                }\r\n            });\r\n\r\n            let imageSrc=''\r\n            let scale =0.0\r\n            let ename = ''\r\n\r\n            const equvstyleFunction = function (feature) {\r\n        \r\n                ename = feature.get('ename')\r\n\r\n                if ( ename === '종관기상관측장비') {\r\n                    imageSrc = '/markers/asos.png'\r\n                    scale = 0.6\r\n                } else if (ename ==='방재기상관측장비') {\r\n                    imageSrc = '/markers/aws.png'\r\n                    scale = 0.6\r\n                } else if (ename ==='해양기상부이') {\r\n                    imageSrc = '/markers/buoy.png'\r\n                    scale = 0.6\r\n                } else if (ename ==='파고부이') {\r\n                    imageSrc = '/markers/tidalbuoy.png'\r\n                    scale = 0.6\r\n                } else if (ename ==='지진관측장비') {\r\n                    imageSrc = '/markers/earth.png'\r\n                    scale = 0.6\r\n                } else if (ename ==='연직바람관측장비') {\r\n                    imageSrc = '/markers/wind.png'\r\n                    scale = 0.6\r\n                } else if (ename ==='연안방재관측장비') {\r\n                    imageSrc = '/markers/beancon.png'\r\n                    scale = 0.6\r\n                } else {\r\n                    // console.log('ename ', ename)\r\n                    return\r\n                }\r\n\r\n                let mystyle = new Style({      \r\n                    image:  new Icon({\r\n                        src : imageSrc,\r\n                        scale : scale,\r\n                    })\r\n                });\r\n\r\n                return mystyle;  \r\n            }\r\n\r\n            jejuequvLayer = new VectorLayer({\r\n                source: j_source,\r\n                style: equvstyleFunction,\r\n            })\r\n            seogwipoequvLayer = new VectorLayer({\r\n                source: s_source,\r\n                style: equvstyleFunction,\r\n            })\r\n        },\r\n\r\n        displayEquv(main_index){            \r\n            if(equvIndex){\r\n                this.make_equv_data()                \r\n                if ( jejuequvIndex ) this.map.addLayer(jejuequvLayer)\r\n                if ( seogwipoequvIndex ) this.map.addLayer(seogwipoequvLayer)\r\n                equvIndex = false\r\n                jejuequvIndex = false\r\n                seogwipoequvIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    this.map.removeLayer(jejuequvLayer)\r\n                    this.map.removeLayer(seogwipoequvLayer)\r\n                    equvIndex = true\r\n                    jejuequvIndex = true\r\n                    seogwipoequvIndex = true\r\n                } else {\r\n                    this.map.removeLayer(jejuequvLayer)\r\n                    this.map.removeLayer(seogwipoequvLayer)\r\n                    if ( jejuequvIndex ) this.map.addLayer(jejuequvLayer)\r\n                    else this.map.removeLayer(jejuequvLayer)\r\n                    if ( seogwipoequvIndex ) this.map.addLayer(seogwipoequvLayer)\r\n                    else this.map.removeLayer(seogwipoequvLayer)\r\n                }               \r\n            }\r\n        },\r\n\r\n        make_cafe_data() {\r\n            let features = jeju_cafe_all_data.features;\r\n            var j_source = new VectorSource()\r\n            var s_source = new VectorSource()\r\n\r\n            features.forEach( element => {\r\n                let name = element.place_name                \r\n                let my_address = element.address_name\r\n                let city = element.address_name.split(' ')[1]\r\n                let my_link = element.place_url\r\n                let position = new Point([element.x, element.y])\r\n                let phone = element.phone                \r\n                var feat = new Feature({\r\n                    geometry: position,\r\n                    name : name,\r\n                    address: my_address,\r\n                    link: my_link,\r\n                    phone: phone,\r\n                })                \r\n                if ( city === '제주시')  {\r\n                    j_source.addFeature(feat)\r\n                } else if ( city === '서귀포시') {\r\n                    s_source.addFeature(feat)\r\n                }\r\n            });            \r\n            jejucafeLayer = new VectorLayer({\r\n                source: j_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/jeju_cafe.png',\r\n                                scale: 0.7,\r\n                            })\r\n                })\r\n            })\r\n            seogwipocafeLayer = new VectorLayer({\r\n                source: s_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/seogwipo_cafe.png',\r\n                                scale: 0.7,\r\n                            })\r\n                })\r\n            })\r\n        },\r\n\r\n        make_rest_data() {\r\n            let features = jeju_rest_all_data.features;\r\n            var j_source = new VectorSource()\r\n            var s_source = new VectorSource()\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position =  new Point([element.x, element.y])\r\n                let phone = element.phone;\r\n                var feat = new Feature({\r\n                    geometry: position,\r\n                    name : name,\r\n                    address: my_address,\r\n                    link: my_link,\r\n                    phone: phone,\r\n                })                \r\n                if ( city === '제주시')  {\r\n                    j_source.addFeature(feat)\r\n                } else if ( city === '서귀포시') {\r\n                    s_source.addFeature(feat)\r\n                }\r\n            });\r\n            jejurestLayer = new VectorLayer({\r\n                source: j_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/jeju_rest.png',\r\n                                scale: 0.8,\r\n                            })\r\n                })\r\n            })\r\n            seogwiporestLayer = new VectorLayer({\r\n                source: s_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/seogwipo_rest.png',\r\n                                scale: 0.8,\r\n                            })\r\n                })\r\n            })\r\n        },\r\n\r\n        make_hotel_data() {\r\n            let features = hotel_all_data.features;\r\n            var j_source = new VectorSource()\r\n            var s_source = new VectorSource()\r\n            features.forEach( element => {   \r\n                let name = element.place_name;                \r\n                let my_address = element.address_name;\r\n                let city = element.address_name.split(' ')[1];\r\n                let my_link = element.place_url;\r\n                let position =  new Point([element.x, element.y])\r\n                let phone = element.phone;\r\n                var feat = new Feature({\r\n                    geometry: position,\r\n                    name : name,\r\n                    address: my_address,\r\n                    link: my_link,\r\n                    phone: phone,\r\n                })                \r\n                if ( city === '제주시')  {\r\n                    j_source.addFeature(feat)\r\n                } else if ( city === '서귀포시') {\r\n                    s_source.addFeature(feat)\r\n                }\r\n            });            \r\n            jejuhotelLayer = new VectorLayer({\r\n                source: j_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/jeju_hotel.png',\r\n                                scale: 0.5,\r\n                            })\r\n                })\r\n            })\r\n            seogwipohotelLayer = new VectorLayer({\r\n                source: s_source,\r\n                style: new Style({\r\n                    image:  new Icon({\r\n                                src:'/img/seogwipo_hotel.png',\r\n                                scale: 0.5,\r\n                            })\r\n                })\r\n            })\r\n        },\r\n\r\n        displayCafe(main_index){            \r\n            if(cafeIndex){\r\n                this.make_cafe_data()                \r\n                if ( jejucafeIndex ) this.map.addLayer(jejucafeLayer)\r\n                if ( seogwipocafeIndex ) this.map.addLayer(seogwipocafeLayer)\r\n                cafeIndex = false\r\n                jejucafeIndex = false\r\n                seogwipocafeIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    this.map.removeLayer(jejucafeLayer)\r\n                    this.map.removeLayer(seogwipocafeLayer)\r\n                    cafeIndex = true\r\n                    jejucafeIndex = true\r\n                    seogwipocafeIndex = true\r\n                } else {\r\n                    this.map.removeLayer(jejucafeLayer)\r\n                    this.map.removeLayer(seogwipocafeLayer)\r\n                    if ( jejucafeIndex ) this.map.addLayer(jejucafeLayer)\r\n                    else this.map.removeLayer(jejucafeLayer)\r\n                    if ( seogwipocafeIndex ) this.map.addLayer(seogwipocafeLayer)\r\n                    else this.map.removeLayer(seogwipocafeLayer)\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayRest(main_index){\r\n            // console.log(' restIndex ', restIndex, 'jejurestIndex ',jejurestIndex, 'seogwiporestIndex ', seogwiporestIndex  )\r\n            if(restIndex){\r\n                this.make_rest_data()                \r\n                if ( jejurestIndex ) this.map.addLayer(jejurestLayer)\r\n                if ( seogwiporestIndex ) this.map.addLayer(seogwiporestLayer)\r\n                restIndex = false\r\n                jejurestIndex = false\r\n                seogwiporestIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    this.map.removeLayer(jejurestLayer)\r\n                    this.map.removeLayer(seogwiporestLayer)\r\n                    restIndex = true\r\n                    jejurestIndex = true\r\n                    seogwiporestIndex = true\r\n                } else {\r\n                    this.map.removeLayer(jejurestLayer)\r\n                    this.map.removeLayer(seogwiporestLayer)\r\n                    if ( jejurestIndex ) this.map.addLayer(jejurestLayer)\r\n                    else this.map.removeLayer(seogwiporestLayer)\r\n                    if ( seogwiporestIndex ) this.map.addLayer(seogwiporestLayer)\r\n                    else this.map.removeLayer(seogwiporestLayer)\r\n                }               \r\n            }\r\n        },\r\n\r\n        displayHotel(main_index){\r\n            // console.log(' hotelIndex ', hotelIndex, 'jejuhotelIndex ',jejuhotelIndex, 'seogwipohotelIndex ', seogwipohotelIndex  )\r\n            if(hotelIndex){\r\n                this.make_hotel_data()                \r\n                if ( jejuhotelIndex ) this.map.addLayer(jejuhotelLayer)\r\n                if ( seogwipohotelIndex ) this.map.addLayer(seogwipohotelLayer)\r\n                hotelIndex = false\r\n                jejuhotelIndex = false\r\n                seogwipohotelIndex = false\r\n            } else {\r\n                if (main_index) {\r\n                    this.map.removeLayer(jejuhotelLayer)\r\n                    this.map.removeLayer(seogwipohotelLayer)\r\n                    hotelIndex = true\r\n                    jejuhotelIndex = true\r\n                    seogwipohotelIndex = true\r\n                } else {\r\n                    this.map.removeLayer(jejuhotelLayer)\r\n                    this.map.removeLayer(seogwipohotelLayer)                    \r\n                    if ( jejuhotelIndex ) this.map.addLayer(jejuhotelLayer)\r\n                    else this.map.removeLayer(jejuhotelLayer)\r\n                    if ( seogwipohotelIndex ) this.map.addLayer(seogwipohotelLayer)\r\n                    else this.map.removeLayer(seogwipohotelLayer)\r\n                }               \r\n            }\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.bot1 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot2 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bot3 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.ol-zoom {\r\n    top: 50px;\r\n    left: auto;\r\n    right: 10px;\r\n}\r\n\r\n.ol-zoom .ol-zoom-out {\r\n    margin-top: 200px;\r\n}\r\n/* .ol-zoomslider {\r\nbackground-color: transparent;\r\n/*\r\nZoom control top: 0.5em\r\nZoom control padding: 2px\r\nZoom in button margin top: 1px\r\nZoom in button height: font size 1.14em * 1.375 height\r\n*/\r\n/* top: calc(0.5em + 2px + 1px + 1.14 * 1.375em);\r\n}  */\r\n\r\n/* .ol-touch .ol-zoom .ol-zoom-out {\r\nmargin-top: 212px;\r\n}\r\n.ol-touch .ol-zoomslider {\r\ntop: 2.75em;\r\n}\r\n\r\n.ol-zoom-in.ol-has-tooltip:hover [role=tooltip],\r\n.ol-zoom-in.ol-has-tooltip:focus [role=tooltip] {\r\ntop: 3px;\r\n}\r\n\r\n.ol-zoom-out.ol-has-tooltip:hover [role=tooltip],\r\n.ol-zoom-out.ol-has-tooltip:focus [role=tooltip] {\r\ntop: 232px;\r\n} */\r\n.ol-popup {\r\n    position: absolute;\r\n    background-color: white;\r\n    box-shadow: 0 1px 4px rgba(0,0,0,0.2);\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n    border: 1px solid #cccccc;\r\n    bottom: 12px;\r\n    left: -50px;\r\n    min-width: 280px;\r\n}\r\n\r\n.ol-popup:after, .ol-popup:before {\r\n    top: 100%;\r\n    border: solid transparent;\r\n    content: \" \";\r\n    height: 0;\r\n    width: 0;\r\n    position: absolute;\r\n    pointer-events: none;\r\n}\r\n\r\n.ol-popup:after {\r\n    border-top-color: white;\r\n    border-width: 10px;\r\n    left: 48px;\r\n    margin-left: -10px;\r\n}\r\n\r\n.ol-popup:before {\r\n    border-top-color: #cccccc;\r\n    border-width: 11px;\r\n    left: 48px;\r\n    margin-left: -11px;\r\n}\r\n.ol-popup-closer {\r\n    text-decoration: none;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 8px;\r\n}\r\n\r\n.ol-popup-closer:after {\r\n    content: \"✖\";\r\n}\r\n\r\n\r\n</style>","import { render } from \"./OpenLayerMap.vue?vue&type=template&id=5a08f116\"\nimport script from \"./OpenLayerMap.vue?vue&type=script&lang=js\"\nexport * from \"./OpenLayerMap.vue?vue&type=script&lang=js\"\n\nimport \"./OpenLayerMap.vue?vue&type=style&index=0&id=5a08f116&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=459011b0&scoped=true\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=459011b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-459011b0\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_b_card","title","default","_withCtx","_component_b_card_header","_component_b_nav","align","$props","homeDisplay","_createCommentVNode","_createBlock","_component_b_button","key","pill","size","variant","to","_createTextVNode","_","getAuth","onClick","signOut","computed","this","$store","state","auth","user","authority","getUserName","username","getEmail","email","methods","dispatch","props","Boolean","__exports__","render","_Fragment","_component_Header","_createElementVNode","$options","changeMap","_toDisplayString","nextmap","_hoisted_2","mapindex","_component_MyKakaoMap","_component_MyNaverMap","_component_MyOpenLayerMap","_component_MyGoogleMap","id","displayOleum","displayOlle","displayHalla","displayHiking","displayzpt","_hoisted_3","_cache","$event","displayCafe","displayRest","displayHotel","_hoisted_4","displayReg","displayEquv","changeMaptype","currentTypeId","apikey","ref","cataindex","hallaIndex","halla_polylines","olleIndex","olle_polylines","hikingIndex","hike_polylines","zptIndex","zpt_polylines","oleumIndex","oleum_circles","regIndex","reg_polygones","jejuequvIndex","jejuequvMarkers","seogwipoequvIndex","seogwipoequvMarkers","equvIndex","jejucafeIndex","jejucafeMarkers","seogwipocafeIndex","seogwipocafeMarkers","cafeIndex","jejurestIndex","jejurestMarkers","seogwiporestIndex","seogwiporestMarkers","restIndex","jejuhotelIndex","jejuhotelMarkers","seogwipohotelIndex","seogwipohotelMarkers","hotelIndex","name","data","created","process","mounted","window","kakao","maps","initMap","script","document","createElement","onload","load","src","head","appendChild","container","getElementById","options","center","LatLng","level","map","Map","CustomOverlay","InfoWindow","relayout","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","content","className","clientWidth","innerHTML","terrain_btn","querySelector","addEventListener","event","onSelectMap","traffic_btn","roadview_btn","use_district_btn","jejusi_btn","seogwiposi_btn","make_cafe_data","features","jeju_cafe_all_data","forEach","element","place_name","my_address","address_name","city","split","my_link","place_url","position","y","x","phone","citydrawingMarker","toRaw","make_rest_data","jeju_rest_all_data","make_hotel_data","hotel_all_data","make_equv_data","equv_all_data","properties","ename","lng","lat","dpoint","imageSrc","console","log","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","marker","Marker","clickable","image","iwRemveable","infowindow","removable","addListener","open","push","main_index","cur","setMap","maptype","removeOverlayMapTypeId","setMapTypeId","MapTypeId","ROADMAP","TRAFFIC","ROADVIEW","TERRAIN","USE_DISTRICT","addOverlayMapTypeId","length","oleum_data","geometry","coordinates","dia","drawingCircle","olle_data","coord","points","path","point","drawingPolyline","halla_data","hiking_data","PMNTN_NM","zpt_data","type","land_data","Name","drawingPolygon","mpoints","fillrealcolor","backcolor","circle","Circle","radius","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","infoBox","yAnchor","mouseEvent","setOptions","strokeStyle","setPosition","latLng","realcolor","polygon","Polygon","polyline","Polyline","changeLayer","currentLayer","ncpclientid","naver","async","defer","mapOptions","zoom","style","ZoomControlStyle","LAGRE","Position","RIGHT_CENTER","bicycle_btn","markerOptions","icon","url","origin","anchor","scaledSize","Event","e","getMap","close","TrafficLayer","interval","StreetLayer","BicycleLayer","CadastralLayer","refresh","join","borderWidth","disableAnchor","backgroundColor","pixelOffset","paths","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","SuppressedError","fastDeepEqual","equal","a","b","constructor","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","DEFAULT_ID","LoaderStatus","Loader","apiKey","authReferrerPolicy","channel","client","language","libraries","mapIds","nonce","region","retries","version","callbacks","loading","errors","instance","isEqual","Error","JSON","stringify","status","FAILURE","SUCCESS","LOADING","INITIALIZED","failed","createUrl","deleteScript","remove","loadPromise","loadCallback","err","error","google","importLibrary","execute","fn","setScript","callback","params","v","_b","_a","g","h","k","p","c","l","q","m","d","r","Set","URLSearchParams","u","f","n","set","replace","t","toLowerCase","onerror","append","warn","add","libraryPromises","library","all","ErrorEvent","loadErrorCallback","reset","onerrorEvent","resetIfRetryingFailed","delay","Math","pow","setTimeout","cb","loader","mapProp","mapTypeControlOptions","MapTypeControlStyle","HORIZONTAL_BAR","TOP_RIGHT","BicyclingLayer","overlay","hallaLayer","VectorLayer","olleLayer","hikeLayer","zptLayer","oleumLayer","regLayer","jejuequvLayer","seogwipoequvLayer","jejucafeLayer","seogwipocafeLayer","jejurestLayer","seogwiporestLayer","jejuhotelLayer","seogwipohotelLayer","baseLayer","TileLayer","satelliteLayer","hybridLayer","grayLayer","osmLayer","my_interaction","projection","target","XYZ","OlLayerTile","OSM","OlMap","layers","view","OlView","setVisible","basemap_btn","osmmap_btn","satellitemap_btn","hybridmap_btn","graymap_btn","check_button_jejusi","check_button_seogwiposi","ct","link","address","closer","Overlay","autoPan","animation","duration","onclick","undefined","blur","addOverlay","selected","on","selectStyle","setStyle","oleum_feature","forEachFeatureAtPixel","pixel","feature","get","_myStroke","Stroke","color","width","_myFill","Fill","CircleStyle","fill","stroke","Style","layerFilter","layer","oll_feature","hall_feature","hike_feature","zpt_feature","point_feature","reg_feature","getGeometry","intersectsCoordinate","coordinate","equv_feature","get_circlelayer","addLayer","removeLayer","fname","oleumstyleFunction","mystyle","oleum_source","VectorSource","format","GeoJSON","get_polylineLayer","styleFunction","polyline_source","polylineLayer","j_source","s_source","feat","Feature","addFeature","scale","equvstyleFunction","Icon","components","Header","MyKakaoMap","MyNaverMap","MyGoogleMap","MyOpenLayerMap"],"sourceRoot":""}